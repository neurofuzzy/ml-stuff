{"mappings":"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C;;;AClYD,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC,CAAU;AAChC,KAAK,CAAC,CAAC,CAAC,aAAa,EAAC,CAAC,GAAG,OAAO,CAAC,CAAa;AAC/C,KAAK,CAAC,CAAC,CAAC,UAAU,GAAE,cAAc,EAAC,CAAC,GAAG,OAAO,CAAC,CAAc;AAE7D,MAAM,CAAC,MAAM,GAAG,QAAQ,GAAI,CAAC;IAE3B,UAAU;IACV,aAAa,CAAC,QAAQ,CAAC,IAAI,EAAE,cAAc;AAE3C,EAkCI,AAlCJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAkCI,AAlCJ,EAkCI,CAEJ,EAA6B,AAA7B,2BAA6B;AAE/B,CAAC;;;;C,Q,C,M,E,O,E,C;I,M,C,O,K,C,W,M,C,M,K,C,a,O,C,O,E,O,C,C,Y,M,C,M,K,C,a,M,C,G,G,M,C,C;Q,C;Q,C;I,C,E,O,K,M,G,M,C,U,K,C,a,U,G,M,I,I,E,O,C,M,C,K,G,C;I,C,E,M,C,G;A,C,E,I,E,Q,C,Q,E,M,E,C;I,C;IE/CD,E,AAAA;;;K,AAAA,E,UAIgBA,UAAQ,CAAC,MAAc,EAAvBA,CAAAA;QACd,MAAA,CAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM;IAC3B,CAAC;IAED,E,AAAA;;K,AAAA,E,UAGgBC,SAAO,CAAC,MAAc,EAAE,KAAa,EAArCA,CAAAA;QACd,EAAA,EAAI,MAAM,IAAI,CAAC,EACb,MAAA,CAAO,CAAC;QAEV,MAAA,CAAO,KAAK;IACd,CAAA;I,G,C,M,G,E,A,S,A,E,C,M,C,M,C,C;Q,S,E,I;Q,Q,E,U;Q,O,E,S;I,C;IChBA,E,AAAA;;K,AAAA,E,UAGgBD,UAAQ,CAAC,KAAa,EAAtBA,CAAAA;QACd,MAAA,CAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,KAAK;IACjC,CAAC;IAED,E,AAAA;;K,AAAA,E,UAGgBC,SAAO,CAAC,MAAc,EAAE,KAAa,EAArCA,CAAAA;QACd,MAAA,CAAO,MAAM,IAAI,CAAC,GAAG,MAAM,IAAI,KAAK;IACtC,CAAA;I,G,C,S,G,E,A,S,A,E,C,M,C,M,C,C;Q,S,E,I;Q,Q,E,U;Q,O,E,S;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GAAP,CAAA;YACE,IAAI,CAAC,UAAU,CAAC,MAAM,GAAI,IAAI,CAAC,aAAoC,CACjE,IAAI,CAAC,MAAM;QAEd,CAAA;;aAGa,SAAS,CAAC,UAAkB,EAA5B,CAAA;QACd,MAAA,CAAO,GAAA,CAAI,SAAS,CAAC,UAAU;IACjC,CAAA;ICAa,KAAA,CAAA,UAAU,GAAG,CAAb;QACX,UAAU;QACV,QAAQ;QACR,aAAa;QACb,UAAU;QACV,MAAM;QACN,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;I,C;I,G,C,M,G,E,A,S,A,E,C,M,C,M,C,C;Q,S,E,I;Q,U,E,U;Q,G,E,G;Q,G,E,K;Q,iB,E,iB;Q,S,E,S;Q,wB,E,wB;Q,W,E,W;Q,W,E,W;Q,O,E,O;Q,O,E,Q;Q,W,E,W;Q,c,E,c;Q,c,E,c;Q,G,E,G;Q,K,E,K;Q,K,E,M;Q,S,E,S;Q,S,E,S;Q,Q,E,Q;Q,Q,E,Q;Q,Q,E,U;Q,e,E,e;Q,e,E,iB;Q,Q,E,Q;Q,Q,E,Q;Q,I,E,I;Q,I,E,I;Q,M,E,O;Q,I,E,I;Q,I,E,I;Q,M,E,M;Q,M,E,M;Q,c,E,c;Q,c,E,c;Q,O,E,O;Q,U,E,U;Q,U,E,U;Q,I,E,I;Q,I,E,M;Q,O,E,O;Q,O,E,S;Q,O,E,O;Q,O,E,O;Q,G,E,G;Q,G,E,G;Q,I,E,I;Q,I,E,M;Q,M,E,M;Q,M,E,O;Q,S,E,S;Q,S,E,S;Q,K,E,K;Q,K,E,K;I,C;IChDR,KAAA,CAAM,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,MAAK;aAExB,aAAa,CAC3B,SAAqB,EACrB,WAAoB,EACpB,WAAoB,EAHN,CAAA;QAKd,EAAA,GACG,cAAc,CAAC,IAAI,EAAE,aAAa,GAAK,aAAa,KAAK,SAAS,CAAC,IAAI;WAExE,MAAA,CAAO,IAAI;QAEb,KAAA,CAAM,KAAK,GAAK,MAQd,CAAC,SAAS,CAAC,IAAI;QACjB,EAAA,EAAI,KAAK,CAAC,SAAS,YAAY,UAAU,CAAC,MAAM,EAAE,CAAlD;YACE,EAAA,GAAK,WAAW,EAAE,KAAA,CAAM,GAAA,CAAI,KAAK,CAAC,CAAoB;YACtD,MAAA,CAAO,GAAA,CAAK,KAAoB,CAAC,SAAS,EAAE,WAAW;QAC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AC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,GAAG;wBAAC,GAAG;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,GAAG;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,GAAG;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,GAAG;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,GAAG;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,GAAG;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,GAAG;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,GAAG;wBAAC,EAAE;wBAAC,GAAG;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,GAAG;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,GAAG;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,GAAG;wBAAC,EAAE;wBAAC,GAAG;wBAAC,CAAC;wBAAC,EAAE;wBAAC,GAAG;wBAAC,GAAG;wBAAC,GAAG;wBAAC,EAAE;wBAAC,GAAG;wBAAC,IAAI;wBAAC,IAAI;wBAAC,IAAI;wBAAC,GAAG;wBAAC,IAAI;wBAAC,GAAG;wBAAC,CAAC;wBAAC,EAAE;wBAAC,GAAG;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,GAAG;wBAAC,EAAE;wBAAC,GAAG;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,IAAI;wBAAC,CAAC;wBAAC,IAAI;wBAAC,EAAE;wBAAC,CAAC;wBAAC,IAAI;wBAAC,GAAG;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,GAAG;wBAAC,IAAI;wBAAC,GAAG;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,IAAI;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,GAAG;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,IAAI;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,GAAG;wBAAC,EAAE;wBAAC,IAAI;wBAAC,GAAG;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,IAAI;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,IAAI;wBAAC,KAAK;wBAAC,EAAE;wBAAC,IAAI;wBAAC,EAAE;wBAAC,GAAG;wBAAC,CAAC;wBAAC,IAAI;wBAAC,EAAE;wBAAC,IAAI;wBAAC,IAAI;wBAAC,GAAG;wBAAC,IAAI;wBAAC,IAAI;oBAAA,CAAC;oBAE7yC,GAAG,CAAC,qBAAqB,GAAG,CAAC;wBAAA,GAAG;wBAAC,CAAC;wBAAC,GAAG;wBAAC,CAAC;wBAAC,GAAG;wBAAC,CAAC;wBAAC,GAAG;wBAAC,CAAC;wBAAC,IAAI;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,GAAG;wBAAC,CAAC;wBAAC,GAAG;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,GAAG;wBAAC,CAAC;wBAAC,GAAG;wBAAC,EAAE;wBAAC,GAAG;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,GAAG;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,GAAG;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,GAAG;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,GAAG;wBAAC,EAAE;wBAAC,GAAG;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,GAAG;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,EAAE;wBAAC,GAAG;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,GAAG;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,GAAG;wBAAC,CAAC;wBAAC,KAAK;wBAAC,CAAC;wBAAC,GAAG;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,IAAI;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,EAAE;wBAAC,CAAC;wBAAC,KAAK;wBAAC,CAAC;wBAAC,IAAI;wBAAC,CAAC;wBAAC,CAAC;wBAAC,CAAC;wBAAC,C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","sources":["../../.nvm/versions/node/v12.22.7/lib/node_modules/parcel/node_modules/@parcel/runtime-browser-hmr/lib/runtime-9f9e16b9956cf5c7.js","index.js","node_modules/brain.js/dist/browser.js","node_modules/src/activation/relu.ts","node_modules/src/activation/sigmoid.ts","node_modules/src/activation/tanh.ts","node_modules/src/activation/leaky-relu.ts","node_modules/src/cross-validate.ts","node_modules/src/utilities/kernel.ts","node_modules/src/estimator/mean-squared-error.ts","node_modules/src/layer/base-layer.ts","node_modules/src/utilities/zeros.ts","node_modules/src/utilities/zeros-2d.ts","node_modules/src/utilities/zeros-3d.ts","node_modules/src/layer/activation.ts","node_modules/src/layer/filter.ts","node_modules/src/layer/internal.ts","node_modules/src/layer/modifier.ts","node_modules/src/layer/operator.ts","node_modules/src/layer/target.ts","node_modules/src/layer/types.ts","node_modules/src/lookup.ts","node_modules/src/praxis/base-praxis.ts","node_modules/src/praxis/arthur-deviation-biases.ts","node_modules/src/praxis/arthur-deviation-weights.ts","node_modules/src/praxis/momentum-root-mean-squared-propagation.ts","node_modules/src/utilities/traverse-layers-from.ts","node_modules/src/utilities/flatten-layers.ts","node_modules/src/utilities/layer-size.ts","node_modules/src/layer/add.ts","node_modules/src/utilities/random-weight.ts","node_modules/src/utilities/random.ts","node_modules/src/utilities/randos.ts","node_modules/src/layer/random.ts","node_modules/src/layer/multiply.ts","node_modules/src/layer/sigmoid.ts","node_modules/src/layer/arthur-feed-forward.ts","node_modules/src/utilities/layer-setup.ts","node_modules/src/utilities/values.ts","node_modules/src/layer/convolution.ts","node_modules/src/layer/dropout.ts","node_modules/src/layer/feed-forward.ts","node_modules/src/layer/fully-connected.ts","node_modules/src/layer/negative.ts","node_modules/src/layer/multiply-element.ts","node_modules/src/utilities/ones.ts","node_modules/src/layer/ones.ts","node_modules/src/layer/tanh.ts","node_modules/src/layer/zeros.ts","node_modules/src/layer/gru.ts","node_modules/src/layer/input.ts","node_modules/src/layer/leaky-relu.ts","node_modules/src/layer/lstm-cell.ts","node_modules/src/layer/output.ts","node_modules/src/layer/pool.ts","node_modules/src/layer/recurrent-input.ts","node_modules/src/layer/recurrent-zeros.ts","node_modules/src/layer/relu.ts","node_modules/src/layer/rnn-cell.ts","node_modules/src/layer/regression.ts","node_modules/src/layer/soft-max.ts","node_modules/src/layer/svm.ts","node_modules/src/layer/transpose.ts","node_modules/src/layer/index.ts","node_modules/src/utilities/layer-from-json.ts","node_modules/src/utilities/lookup-table.ts","node_modules/brain.js/node_modules/thaw.js/browser.js","node_modules/src/feed-forward.ts","node_modules/src/likely.ts","node_modules/src/utilities/cast.ts","node_modules/src/utilities/max.ts","node_modules/src/utilities/mse.ts","node_modules/src/neural-network.ts","node_modules/src/neural-network-gpu.ts","node_modules/src/layer/recurrent-connection.ts","node_modules/src/recurrent.ts","node_modules/src/recurrent/matrix/index.ts","node_modules/src/recurrent/matrix/random-matrix.ts","node_modules/src/utilities/data-formatter.ts","node_modules/src/recurrent/matrix/copy.ts","node_modules/src/recurrent/matrix/add.ts","node_modules/src/recurrent/matrix/add-b.ts","node_modules/src/recurrent/matrix/all-ones.ts","node_modules/src/recurrent/matrix/clone-negative.ts","node_modules/src/recurrent/matrix/multiply.ts","node_modules/src/recurrent/matrix/multiply-b.ts","node_modules/src/recurrent/matrix/multiply-element.ts","node_modules/src/recurrent/matrix/multiply-element-b.ts","node_modules/src/recurrent/matrix/relu.ts","node_modules/src/recurrent/matrix/relu-b.ts","node_modules/src/recurrent/matrix/row-pluck.ts","node_modules/src/recurrent/matrix/row-pluck-b.ts","node_modules/src/recurrent/matrix/sigmoid.ts","node_modules/src/recurrent/matrix/sigmoid-b.ts","node_modules/src/recurrent/matrix/softmax.ts","node_modules/src/recurrent/matrix/tanh.ts","node_modules/src/recurrent/matrix/tanh-b.ts","node_modules/src/recurrent/matrix/equation.ts","node_modules/src/recurrent/matrix/max-i.ts","node_modules/src/recurrent/matrix/sample-i.ts","node_modules/src/recurrent/rnn.ts","node_modules/src/recurrent/gru.ts","node_modules/src/utilities/array-lookup-table.ts","node_modules/src/recurrent/rnn-time-step.ts","node_modules/src/recurrent/gru-time-step.ts","node_modules/src/recurrent/lstm.ts","node_modules/src/recurrent/lstm-time-step.ts","node_modules/src/utilities/range.ts","node_modules/src/utilities/to-array.ts","node_modules/src/utilities/to-svg.ts","node_modules/src/index.ts","node_modules/gpu.js/dist/gpu-browser.js","images.js","trainer.js","outputs.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"4a236f9275d0a351\";module.bundle.HMR_BUNDLE_ID = \"31648ca538661719\";\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function accept(fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function dispose(fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe\n\n  ws.onmessage = function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      var assets = data.assets.filter(function (asset) {\n        return asset.envHash === HMR_ENV_HASH;\n      }); // Handle HMR Update\n\n      var handled = assets.every(function (asset) {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear();\n        assets.forEach(function (asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ansiDiagnostic = _step.value;\n          var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n          console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  var errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  var _iterator2 = _createForOfIteratorHelper(diagnostics),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var diagnostic = _step2.value;\n      var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n      errorHTML += \"\\n      <div>\\n        <div style=\\\"font-size: 18px; font-weight: bold; margin-top: 20px;\\\">\\n          \\uD83D\\uDEA8 \".concat(diagnostic.message, \"\\n        </div>\\n        <pre>\").concat(stack, \"</pre>\\n        <div>\\n          \").concat(diagnostic.hints.map(function (hint) {\n        return '<div>💡 ' + hint + '</div>';\n      }).join(''), \"\\n        </div>\\n        \").concat(diagnostic.documentation ? \"<div>\\uD83D\\uDCDD <a style=\\\"color: violet\\\" href=\\\"\".concat(diagnostic.documentation, \"\\\" target=\\\"_blank\\\">Learn more</a></div>\") : '', \"\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      var fn = new Function('require', 'module', 'exports', asset.output);\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  var parents = getParents(module.bundle.root, id); // If no parents, the asset is new. Prevent reloading the page.\n\n  if (!parents.length) {\n    return true;\n  }\n\n  return parents.some(function (v) {\n    return hmrAcceptCheck(v[0], v[1], null);\n  });\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","const brain = require('brain.js');\nconst { addFileReader } = require(\"./images.js\");\nconst { addOutputs, onImageDropped } = require(\"./trainer.js\");\n\nwindow.onload = function () {\n\n  addOutputs();\n  addFileReader(document.body, onImageDropped);\n\n  /*\n\n  const net = new brain.NeuralNetworkGPU();\n  net.train([{\n    input: a,\n    output: {\n      a: 1\n    }\n  },\n  {\n    input: b,\n    output: {\n      b: 1\n    }\n  },\n  {\n    input: c,\n    output: {\n      c: 1\n    }\n  }\n  ], {\n    log: detail => console.log(detail)\n  });\n\n  const result = brain.likely(character(\n    '.#####.' +\n    '#.....#' +\n    '#.....#' +\n    '###.###' +\n    '#.....#' +\n    '#.....#' +\n    '#.....#'\n  ), net);\n    */\n\n  //console.log(result); // 'a'\n\n};\n\n",null,"/**\n * Relu Activation, aka Rectified Linear Unit Activation\n * @description https://en.wikipedia.org/wiki/Rectifier_(neural_networks)\n */\nexport function activate(weight: number): number {\n  return Math.max(0, weight);\n}\n\n/**\n * Relu derivative\n */\nexport function measure(weight: number, delta: number): number {\n  if (weight <= 0) {\n    return 0;\n  }\n  return delta;\n}\n","/**\n * sigmoid activation\n */\nexport function activate(value: number): number {\n  return 1 / (1 + Math.exp(-value));\n}\n\n/**\n * sigmoid derivative\n */\nexport function measure(weight: number, error: number): number {\n  return weight * (1 - weight) * error;\n}\n","/**\n * Hyperbolic tan\n */\nexport function activate(weight: number): number {\n  return Math.tanh(weight);\n}\n\n/**\n * @description grad for z = tanh(x) is (1 - z^2)\n */\nexport function measure(weight: number, error: number): number {\n  return (1 - weight * weight) * error;\n}\n","/**\n * Leaky Relu Activation, aka Leaky Rectified Linear Unit Activation\n * @description https://en.wikipedia.org/wiki/Rectifier_(neural_networks)\n */\nexport function activate(weight: number): number {\n  return weight > 0 ? weight : 0.01 * weight;\n}\n\n/**\n * Leaky Relu derivative\n */\nexport function measure(weight: number, error: number): number {\n  return weight > 0 ? error : 0.01 * error;\n}\n","import {\n  INeuralNetworkBinaryTestResult,\n  INeuralNetworkState,\n  INeuralNetworkTestResult,\n} from './neural-network-types';\n\nexport type InitClassifier<\n  TrainOptsType,\n  JsonType,\n  DatumType\n> = () => IClassifier<TrainOptsType, JsonType, DatumType>;\n\nexport interface IClassifier<TrainOptsType, JsonType, DatumType> {\n  trainOpts: TrainOptsType;\n  toJSON: () => JsonType;\n  fromJSON: (json: JsonType) => this;\n  train: (\n    data: DatumType[],\n    options?: Partial<TrainOptsType>\n  ) => INeuralNetworkState;\n  test: (\n    data: DatumType[]\n  ) => INeuralNetworkTestResult | INeuralNetworkBinaryTestResult;\n  initialize: () => void;\n}\n\nexport type ICrossValidateJSON<JsonType> =\n  | ICrossValidateStats<JsonType>\n  | ICrossValidateBinaryStats<JsonType>;\n\nexport interface ICrossValidateStatsAverages {\n  trainTime: number;\n  testTime: number;\n  iterations: number;\n  error: number;\n}\n\nexport interface ICrossValidateStats<JsonType> {\n  avgs: ICrossValidateStatsAverages;\n  stats: ICrossValidateStatsResultStats;\n  sets: Array<ICrossValidationTestPartitionResults<JsonType>>;\n}\n\nexport interface ICrossValidateBinaryStats<NetworkType> {\n  avgs: ICrossValidateStatsAverages;\n  stats: ICrossValidateStatsResultBinaryStats;\n  sets: Array<ICrossValidationTestPartitionBinaryResults<NetworkType>>;\n}\n\nexport interface ICrossValidateStatsResultStats {\n  total: number;\n  testSize: number;\n  trainSize: number;\n}\n\nexport interface ICrossValidateStatsResultBinaryStats\n  extends ICrossValidateStatsResultStats {\n  total: number;\n  truePos: number;\n  trueNeg: number;\n  falsePos: number;\n  falseNeg: number;\n  precision: number;\n  recall: number;\n  accuracy: number;\n}\n\nexport interface ICrossValidationTestPartitionResults<JsonType>\n  extends INeuralNetworkTestResult {\n  trainTime: number;\n  testTime: number;\n  iterations: number;\n  network: JsonType;\n  total: number;\n}\n\nexport type ICrossValidationTestPartitionBinaryResults<\n  JsonType\n> = INeuralNetworkBinaryTestResult &\n  ICrossValidationTestPartitionResults<JsonType>;\n\nexport default class CrossValidate<\n  InitClassifierType extends InitClassifier<\n    ReturnType<InitClassifierType>['trainOpts'],\n    ReturnType<ReturnType<InitClassifierType>['toJSON']>,\n    Parameters<ReturnType<InitClassifierType>['train']>[0][0]\n  >\n> {\n  initClassifier: InitClassifierType;\n  json: ICrossValidateJSON<\n    ReturnType<ReturnType<InitClassifierType>['toJSON']>\n  > = {\n    avgs: {\n      error: 0,\n      iterations: 0,\n      testTime: 0,\n      trainTime: 0,\n    },\n    stats: {\n      total: 0,\n      testSize: 0,\n      trainSize: 0,\n    },\n    sets: [],\n  };\n\n  constructor(initClassifier: InitClassifierType) {\n    this.initClassifier = initClassifier;\n  }\n\n  testPartition(\n    trainOpts: Parameters<ReturnType<InitClassifierType>['train']>[1],\n    trainSet: Parameters<ReturnType<InitClassifierType>['train']>[0],\n    testSet: Parameters<ReturnType<InitClassifierType>['train']>[0]\n  ):\n    | ICrossValidationTestPartitionResults<\n        ReturnType<ReturnType<InitClassifierType>['toJSON']>\n      >\n    | ICrossValidationTestPartitionBinaryResults<\n        ReturnType<ReturnType<InitClassifierType>['toJSON']>\n      > {\n    const classifier = this.initClassifier();\n    const beginTrain = Date.now();\n    const trainingStats = classifier.train(trainSet, trainOpts);\n    const beginTest = Date.now();\n    const testStats:\n      | INeuralNetworkTestResult\n      | INeuralNetworkBinaryTestResult = classifier.test(testSet);\n    const endTest = Date.now();\n    return {\n      ...testStats,\n      trainTime: beginTest - beginTrain,\n      testTime: endTest - beginTest,\n      iterations: trainingStats.iterations,\n      error: trainingStats.error,\n      total: testStats.total,\n      network: (classifier as {\n        toJSON: () => ReturnType<ReturnType<InitClassifierType>['toJSON']>;\n      }).toJSON(),\n    };\n  }\n\n  /**\n   * Randomize array element order in-place.\n   * Using Durstenfeld shuffle algorithm.\n   * source: http://stackoverflow.com/a/12646864/1324039\n   */\n  shuffleArray<K>(array: K[]): K[] {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  }\n\n  static isBinaryStats = (\n    stats: ICrossValidateStatsResultStats | ICrossValidateStatsResultBinaryStats\n  ): stats is ICrossValidateStatsResultBinaryStats => {\n    return (\n      (stats as ICrossValidateStatsResultBinaryStats).accuracy !== undefined\n    );\n  };\n\n  static isBinaryResults = <JsonType>(\n    stats: ICrossValidateStats<JsonType> | ICrossValidateBinaryStats<JsonType>\n  ): stats is ICrossValidateBinaryStats<JsonType> =>\n    (stats as ICrossValidateBinaryStats<JsonType>).stats.accuracy !== undefined;\n\n  static isBinaryPartitionResults = <JsonType>(\n    stats:\n      | ICrossValidationTestPartitionResults<JsonType>\n      | ICrossValidationTestPartitionBinaryResults<JsonType>\n  ): stats is ICrossValidationTestPartitionBinaryResults<JsonType> =>\n    (stats as ICrossValidationTestPartitionBinaryResults<JsonType>).accuracy !==\n    undefined;\n\n  train(\n    data: Array<Parameters<ReturnType<InitClassifierType>['train']>[0][0]>,\n    trainOpts: Partial<\n      Parameters<ReturnType<InitClassifierType>['train']>[1]\n    > = {},\n    k = 4\n  ): ICrossValidateStats<ReturnType<InitClassifierType>['toJSON']> {\n    if (data.length < k) {\n      throw new Error(\n        `Training set size is too small for ${data.length} k folds of ${k}`\n      );\n    }\n    this.shuffleArray<unknown>(data);\n    const size = data.length / k;\n\n    const avgs: ICrossValidateStatsAverages = {\n      trainTime: 0,\n      testTime: 0,\n      iterations: 0,\n      error: 0,\n    };\n\n    const stats:\n      | ICrossValidateStatsResultStats\n      | ICrossValidateStatsResultBinaryStats = {\n      total: 0,\n      testSize: 0,\n      trainSize: 0,\n    };\n\n    const binaryStats: ICrossValidateStatsResultBinaryStats = {\n      total: 0,\n      testSize: 0,\n      trainSize: 0,\n      truePos: 0,\n      trueNeg: 0,\n      falsePos: 0,\n      falseNeg: 0,\n      precision: 0,\n      recall: 0,\n      accuracy: 0,\n    };\n\n    const results = [];\n    let isBinary = null;\n\n    for (let i = 0; i < k; i++) {\n      const dclone = data.slice(0);\n      const testSet = dclone.splice(i * size, size);\n      const trainSet = dclone;\n      const result = this.testPartition(trainOpts, trainSet, testSet);\n\n      if (isBinary === null) {\n        isBinary =\n          result.hasOwnProperty('falseNeg') &&\n          result.hasOwnProperty('falsePos') &&\n          result.hasOwnProperty('trueNeg') &&\n          result.hasOwnProperty('truePos');\n        if (isBinary) {\n          Object.assign(stats, binaryStats);\n        }\n      }\n\n      avgs.iterations += result.iterations;\n      avgs.testTime += result.testTime;\n      avgs.trainTime += result.trainTime;\n      avgs.error += result.error;\n      stats.total += result.total;\n      if (\n        CrossValidate.isBinaryStats(stats) &&\n        CrossValidate.isBinaryPartitionResults(result)\n      ) {\n        stats.accuracy += result.accuracy;\n        stats.falseNeg += result.falseNeg;\n        stats.falsePos += result.falsePos;\n        stats.precision += result.precision;\n        stats.recall += result.recall;\n        stats.trueNeg += result.trueNeg;\n        stats.truePos += result.truePos;\n      }\n\n      results.push(result);\n    }\n    avgs.error /= k;\n    avgs.iterations /= k;\n    avgs.testTime /= k;\n    avgs.trainTime /= k;\n\n    if (CrossValidate.isBinaryStats(stats)) {\n      stats.precision = stats.truePos / (stats.truePos + stats.falsePos);\n      stats.recall = stats.truePos / (stats.truePos + stats.falseNeg);\n      stats.accuracy = (stats.trueNeg + stats.truePos) / stats.total;\n    }\n\n    stats.testSize = size;\n    stats.trainSize = data.length - size;\n\n    this.json = {\n      avgs: avgs,\n      stats: stats,\n      sets: results,\n    };\n    return this.json;\n  }\n\n  toNeuralNetwork(): ReturnType<InitClassifierType> {\n    return this.fromJSON(this.json);\n  }\n\n  toJSON(): ICrossValidateJSON<\n    ReturnType<ReturnType<InitClassifierType>['toJSON']>\n  > | null {\n    return this.json;\n  }\n\n  fromJSON(\n    crossValidateJson: ICrossValidateJSON<\n      ReturnType<ReturnType<InitClassifierType>['toJSON']>\n    >\n  ): ReturnType<InitClassifierType> {\n    const winningJSON:\n      | ICrossValidationTestPartitionResults<\n          ReturnType<ReturnType<InitClassifierType>['toJSON']>\n        >\n      | ICrossValidationTestPartitionBinaryResults<\n          ReturnType<ReturnType<InitClassifierType>['toJSON']>\n        > = (crossValidateJson as ICrossValidateStats<\n      ReturnType<ReturnType<InitClassifierType>['toJSON']>\n    >).sets.reduce((prev, cur) => (prev.error < cur.error ? prev : cur));\n    return (this.initClassifier() as ReturnType<InitClassifierType>).fromJSON(\n      winningJSON.network\n    );\n  }\n}\n","import {\n  GPU,\n  IConstantsThis,\n  IGPUKernelSettings,\n  IKernelMapRunShortcut,\n  IKernelRunShortcut,\n  Input,\n  ISubKernelObject,\n  KernelFunction,\n  KernelOutput,\n  OutputDimensions,\n  Texture,\n  ThreadFunction,\n  ThreadKernelVariable,\n} from 'gpu.js';\n\nlet gpuInstance: GPU | null = null;\n\n/**\n * Sets up the gpu.js instance\n */\nexport function setup(value: GPU): void {\n  gpuInstance = value;\n}\n\n/**\n * Destroys any existing gpu.js instance\n */\nexport function teardown(): void {\n  if (gpuInstance !== null) {\n    gpuInstance.destroy().catch(console.log);\n  }\n  gpuInstance = null;\n}\n\nexport function makeKernel<\n  ArgTypes extends ThreadKernelVariable[] = ThreadKernelVariable[],\n  ConstantsTypes extends IConstantsThis = IConstantsThis\n>(\n  fn: KernelFunction<ArgTypes, ConstantsTypes>,\n  settings: IGPUKernelSettings\n): IKernelRunShortcut {\n  let _gpuInstance: GPU = gpuInstance as GPU;\n  if (_gpuInstance === null) {\n    _gpuInstance = new GPU({ mode: 'gpu' });\n    setup(_gpuInstance);\n  }\n\n  return _gpuInstance\n    .createKernel<ArgTypes, ConstantsTypes>(fn, settings)\n    .setPipeline(true);\n}\n\nexport function makeKernelMap<\n  ArgTypes extends ThreadKernelVariable[],\n  ConstantsTypes extends IConstantsThis\n>(\n  map: ISubKernelObject,\n  fn: ThreadFunction<ArgTypes, ConstantsTypes>,\n  settings: IGPUKernelSettings\n): IKernelMapRunShortcut<ISubKernelObject> {\n  let _gpuInstance: GPU = gpuInstance as GPU;\n  if (_gpuInstance === null) {\n    _gpuInstance = new GPU({ mode: 'gpu' });\n    setup(_gpuInstance);\n  }\n\n  return _gpuInstance\n    .createKernelMap<ArgTypes, ConstantsTypes>(map, fn, settings)\n    .setPipeline(true);\n}\n\n/**\n * Compiles a function into a gpu.js dev mode kernel\n */\n// export function makeDevKernel(\n//   fn: ThreadFunction,\n//   settings: makeKernelSettings\n// ): IKernelRunShortcut {\n//   if ('map' in settings) {\n//     throw new Error('map kernels are not supported by dev kernels');\n//   }\n//   const gpu = new GPU({ mode: 'dev' });\n//   return gpu.createKernel(fn, settings);\n// }\n\nexport function kernelInput(value: number[], size: OutputDimensions): Input {\n  return new Input(value, size);\n}\n\n/**\n * Deletes a gpu.js texture and frees VRAM\n */\nexport function release(possibleTexture: KernelOutput | Input): void {\n  if (possibleTexture instanceof Texture) {\n    possibleTexture.delete();\n  }\n}\n\n/**\n * Cleans ie sets all elements to 0 of a Texture or a js array\n */\nexport function clear(value: KernelOutput): void {\n  if (value instanceof Texture) {\n    value.clear();\n    return;\n  }\n\n  // array\n  if (Array.isArray(value)) {\n    if (typeof value[0] === 'number') {\n      (value as number[]).fill(0);\n    } else if (typeof value[0][0] === 'number') {\n      for (let x = 0; x < value.length; x++) {\n        (value[x] as number[]).fill(0);\n      }\n      return;\n    } else if (typeof value[0][0][0] === 'number') {\n      // cube\n      for (let y = 0; y < value.length; y++) {\n        const row: number[][] = value[y] as number[][];\n        for (let x = 0; x < row.length; x++) {\n          row[x].fill(0);\n        }\n      }\n      return;\n    }\n  }\n\n  if (value instanceof Float32Array) {\n    value.fill(0);\n    return;\n  }\n\n  throw new Error('unhandled value');\n}\n\n/**\n * Clones a value\n */\nexport function clone(value: KernelOutput): KernelOutput {\n  if (value instanceof Texture) {\n    return value.clone();\n  }\n  if (value instanceof Float32Array) {\n    return value.slice(0);\n  }\n  if (Array.isArray(value)) {\n    if (typeof value[0] === 'number') {\n      return value.slice(0);\n    } else if (typeof value[0][0] === 'number') {\n      const matrix = new Array(value.length);\n      for (let x = 0; x < value.length; x++) {\n        matrix[x] = (value[x] as Float32Array).slice(0);\n      }\n      return matrix;\n    } else if (typeof value[0][0][0] === 'number') {\n      const cube = new Array(value.length);\n      for (let y = 0; y < value.length; y++) {\n        const row = value[y] as number[][];\n        const matrix = new Array(row.length);\n        for (let x = 0; x < row.length; x++) {\n          matrix[x] = row[x].slice(0);\n        }\n      }\n      return cube;\n    }\n  }\n  throw new Error('unhandled value');\n}\n","import { IKernelRunShortcut, IKernelFunctionThis } from 'gpu.js';\nimport { makeKernel } from '../utilities/kernel';\n\ninterface mse2dThis extends IKernelFunctionThis {\n  constants: { height: number; width: number; length: number };\n}\n\n/**\n * 2D Mean Squared Error\n */\nexport function mse2d(\n  this: mse2dThis,\n  errors: Array<[number, number]>\n): number {\n  let sum = 0;\n  for (let y = 0; y < this.constants.height; y++) {\n    for (let x = 0; x < this.constants.width; x++) {\n      sum += errors[y][x] ** 2;\n    }\n  }\n  return sum / this.constants.length;\n}\n\nexport class MeanSquaredError {\n  /** Calculate the mean squared error given an array of errors */\n  calculate: IKernelRunShortcut;\n  /** Returns the sum of absolute values of previuous error and previous layer errors */\n  addAbsolute: IKernelRunShortcut;\n  /** Adds two erros */\n  add: IKernelRunShortcut;\n  /** Returns the ratio of sum of errors and length (ie the average) */\n  divide: IKernelRunShortcut;\n\n  constructor({ width, height }: { width: number; height: number }) {\n    this.calculate = makeKernel(mse2d, {\n      output: [1],\n      constants: {\n        width,\n        height,\n        length: width * height,\n      },\n      immutable: true,\n    });\n\n    this.addAbsolute = makeKernel(\n      function (prevError: number[], prevLayerErrors: number[][]) {\n        return prevError[0] + Math.abs(prevLayerErrors[0][0]);\n      },\n      {\n        output: [1],\n        immutable: true,\n      }\n    );\n\n    this.add = makeKernel(\n      function (value1: number[], value2: number[]) {\n        return value1[0] + value2[0];\n      },\n      {\n        output: [1],\n        immutable: true,\n      }\n    );\n\n    this.divide = makeKernel(\n      function (length: number, mseSum: number[]) {\n        const value = mseSum[0];\n        if (value > 0) {\n          return value / length;\n        }\n        return 0;\n      },\n      {\n        output: [1],\n        immutable: true,\n      }\n    );\n  }\n}\n","import {\n  IKernelRunShortcut,\n  Input,\n  Kernel,\n  KernelOutput,\n  Texture,\n  TextureArrayOutput,\n} from 'gpu.js';\nimport { IPraxis, IPraxisSettings } from '../praxis/base-praxis';\nimport { clear } from '../utilities/kernel';\n\nexport interface ILayerJSON {\n  width?: number;\n  height?: number;\n  depth?: number;\n  weights?: number[] | number[][] | number[][][] | null;\n  type: string;\n  inputLayerIndex?: number;\n  inputLayer1Index?: number;\n  inputLayer2Index?: number;\n  praxisOpts?: Partial<IPraxisSettings> | null;\n}\n\nexport interface ILayer {\n  width: number;\n  height: number;\n  depth: number;\n  weights: KernelOutput | Input;\n  deltas: KernelOutput;\n  praxis: IPraxis | null;\n  errors?: KernelOutput | null;\n  setupKernels: (training?: boolean) => void;\n  predictKernel: IKernelRunShortcut | null;\n  compareKernel: IKernelRunShortcut | null;\n  settings: Partial<ILayerSettings>;\n  reuseKernels: (layer: ILayer) => void;\n  predict: (inputs?: KernelOutput) => void;\n  compare: (targetValues?: KernelOutput) => void;\n  learn: ((learningRate?: number) => void) | ((learningRate: number) => void);\n  toJSON: () => Partial<ILayerJSON>;\n  inputLayer?: ILayer;\n  inputLayer1?: ILayer;\n  inputLayer2?: ILayer;\n  index?: number;\n  id?: string;\n}\n\nexport interface ILayerSettings {\n  width?: number | null;\n  height?: number | null;\n  depth?: number | null;\n  weights?: KernelOutput | null;\n  deltas?: KernelOutput | null;\n  id?: string;\n  praxis?: IPraxis | null;\n  praxisOpts?: Partial<IPraxisSettings> | null;\n  initPraxis?:\n    | ((layerTemplate: ILayer, settings?: IPraxisSettings) => IPraxis)\n    | null;\n  cleanupDeltas?: boolean;\n}\n\nexport const baseLayerDefaultSettings: ILayerSettings = {\n  width: 1,\n  height: 1,\n  depth: null,\n  weights: null,\n  deltas: null,\n  praxis: null,\n  praxisOpts: null,\n  cleanupDeltas: true,\n};\n\nexport type BaseLayerType = new (settings?: Partial<ILayerSettings>) => ILayer;\n\nexport class BaseLayer implements ILayer {\n  praxis: IPraxis | null = null;\n  predictKernel: IKernelRunShortcut | null = null;\n  compareKernel: IKernelRunShortcut | null = null;\n  settings: Partial<ILayerSettings>;\n\n  get width(): number {\n    return this.settings.width ?? 0;\n  }\n\n  get height(): number {\n    return this.settings.height ?? 0;\n  }\n\n  get depth(): number {\n    return this.settings.depth ?? 0;\n  }\n\n  get weights(): KernelOutput | Input {\n    return this.settings.weights as KernelOutput;\n  }\n\n  set weights(weights: KernelOutput | Input) {\n    this.settings.weights = weights as KernelOutput;\n    if (this.settings.cleanupDeltas && this.deltas) {\n      clear(this.deltas);\n    }\n  }\n\n  get deltas(): KernelOutput {\n    return this.settings.deltas as KernelOutput;\n  }\n\n  set deltas(deltas: KernelOutput) {\n    this.settings.deltas = deltas;\n  }\n\n  get id(): string {\n    return this.settings.id ?? '';\n  }\n\n  set id(title: string) {\n    this.settings.id = title;\n  }\n\n  constructor(settings?: Partial<ILayerSettings>) {\n    if (settings) {\n      this.settings = { ...baseLayerDefaultSettings, ...settings };\n    } else {\n      this.settings = { ...baseLayerDefaultSettings };\n    }\n    this.setupPraxis();\n  }\n\n  setupPraxis(): void {\n    const { initPraxis, praxis, praxisOpts } = this.settings;\n    if (!this.praxis) {\n      if (initPraxis) {\n        if (praxisOpts) {\n          this.praxis = initPraxis(this, praxisOpts);\n        } else {\n          this.praxis = initPraxis(this);\n        }\n      } else if (praxis) {\n        this.praxis = praxis;\n      }\n    }\n  }\n\n  /*\n  get weights() {\n    return this._weights;\n  }\n\n  set weights(value) {\n    if (value) {\n      if (value.dimensions) {\n        if (value.dimensions[0] !== this.width) {\n          throw new Error(`${this.constructor.name}.weights being set with improper value width`);\n        }\n        if (value.dimensions[1] !== this.height) {\n          throw new Error(`${this.constructor.name}.weights being set with improper value height`);\n        }\n      } else {\n        if (value[0].length !== this.width) {\n          throw new Error(`${this.constructor.name}.weights being set with improper value width`);\n        }\n        if (value.length !== this.height) {\n          throw new Error(`${this.constructor.name}.weights being set with improper value height`);\n        }\n      }\n    }\n    this._weights = value;\n  }\n\n  get deltas() {\n    return this._deltas;\n  }\n\n  set deltas(value) {\n    if (value) {\n      if (value.dimensions) {\n        if (value.dimensions[0] !== this.width) {\n          throw new Error(`${this.constructor.name}.deltas being set with improper value width`);\n        }\n        if (value.dimensions[1] !== this.height) {\n          throw new Error(`${this.constructor.name}.deltas being set with improper value height`);\n        }\n      } else {\n        if (value[0].length !== this.width) {\n          throw new Error(`${this.constructor.name}.deltas being set with improper value width`);\n        }\n        if (value.length !== this.height) {\n          throw new Error(`${this.constructor.name}.deltas being set with improper value height`);\n        }\n      }\n    }\n    this._deltas = value;\n  } */\n\n  validate(): void {\n    if (Number.isNaN(this.height)) {\n      throw new Error(`${this.constructor.name} layer height is not a number`);\n    }\n    if (Number.isNaN(this.width)) {\n      throw new Error(`${this.constructor.name} layer width is not a number`);\n    }\n    if (this.height < 1) {\n      throw new Error(`${this.constructor.name} layer height is less than 1`);\n    }\n    if (this.width < 1) {\n      throw new Error(`${this.constructor.name} layer width is less than 1`);\n    }\n  }\n\n  setupKernels(isTraining?: boolean): void {}\n\n  reuseKernels(layer: ILayer): void {\n    if (layer.width !== this.width) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${layer.width} is not ${this.width}`\n      );\n    }\n    if (layer.height !== this.height) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${layer.height} is not ${this.height}`\n      );\n    }\n    if (layer.hasOwnProperty('predictKernel') && layer.predictKernel !== null) {\n      if (!(layer.predictKernel as Kernel).immutable) {\n        throw new Error(\n          `${layer.constructor.name}.predictKernel is not reusable, set kernel.immutable = true`\n        );\n      }\n      this.predictKernel = layer.predictKernel;\n    }\n    if (layer.hasOwnProperty('compareKernel') && layer.compareKernel !== null) {\n      if (!(layer.compareKernel as Kernel).immutable) {\n        throw new Error(\n          `${layer.constructor.name}.compareKernel is not reusable, set kernel.immutable = true`\n        );\n      }\n      this.compareKernel = layer.compareKernel;\n    }\n    this.praxis = layer.praxis;\n  }\n\n  predict(inputs?: KernelOutput): void {}\n\n  compare(targetValues?: KernelOutput): void {}\n\n  learn(learningRate?: number): void {}\n\n  toArray(): TextureArrayOutput {\n    return Array.isArray(this.weights)\n      ? this.weights\n      : (this.weights as Texture).toArray();\n  }\n\n  toJSON(): Partial<ILayerJSON> {\n    return BaseLayer.toJSON(this);\n  }\n\n  static toJSON(layer: ILayer): Partial<ILayerJSON> {\n    const { weights } = layer;\n    return {\n      width: layer.width,\n      height: layer.height,\n      depth: layer.depth,\n      weights: toUntypedArray(\n        (weights && weights instanceof Texture\n          ? weights.toArray()\n          : weights) as\n          | Float32Array\n          | Float32Array[]\n          | Float32Array[][]\n          | number[]\n          | number[][]\n          | number[][][]\n          | null\n      ),\n      type: layer.constructor.name,\n      praxisOpts: layer.praxis ? layer.praxis.toJSON() : null,\n    };\n  }\n}\n\nfunction toUntypedArray(\n  weights:\n    | Float32Array\n    | Float32Array[]\n    | Float32Array[][]\n    | number[]\n    | number[][]\n    | number[][][]\n    | null\n): number[][][] | number[][] | number[] | null {\n  if (weights === null) return null;\n  if (Array.isArray(weights)) {\n    if (typeof weights[0] === 'number') {\n      return weights as number[];\n    } else if (Array.isArray(weights[0]) && typeof weights[0][0] === 'number') {\n      return weights as number[][];\n    } else if (\n      Array.isArray(weights[0][0]) &&\n      typeof weights[0][0][0] === 'number'\n    ) {\n      return weights as number[][][];\n    } else if (weights[0] instanceof Float32Array) {\n      const matrix = weights as Float32Array[];\n      return matrix.map((row: Float32Array) => {\n        return Array.from(row);\n      });\n    } else if (weights[0][0] instanceof Float32Array) {\n      const cube = weights as Float32Array[][];\n      return cube.map((matrix: Float32Array[]): number[][] => {\n        return matrix.map((row: Float32Array): number[] => {\n          return Array.from(row);\n        });\n      });\n    }\n  } else if (weights) {\n    return Array.from(weights);\n  }\n  throw new Error('unexpected value');\n}\n","/**\n * Returns an array of zeros\n */\nexport function zeros(size: number): Float32Array {\n  return new Float32Array(size);\n}\n","import { zeros } from './zeros';\n\n/**\n * Returns a 2D tensor(matrix) of zeros\n */\nexport function zeros2D(width: number, height: number): Float32Array[] {\n  const result: Float32Array[] = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = zeros(width);\n  }\n  return result;\n}\n","import { zeros2D } from './zeros-2d';\n\n/**\n * Returns a 3D tensor of arrays\n */\nexport function zeros3D(\n  width: number,\n  height: number,\n  depth: number\n): Float32Array[][] {\n  const result: Float32Array[][] = new Array(depth);\n  for (let z = 0; z < depth; z++) {\n    result[z] = zeros2D(width, height);\n  }\n  return result;\n}\n","import { BaseLayer, ILayerSettings, ILayer } from './base-layer';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { zeros3D } from '../utilities/zeros-3d';\n\nexport type ActivationType = new (\n  inputLayer: ILayer,\n  settings: Partial<ILayerSettings>\n) => ILayer;\n\nexport class Activation extends BaseLayer {\n  inputLayer: ILayer;\n\n  get width(): number {\n    return this.inputLayer.width;\n  }\n\n  get height(): number {\n    return this.inputLayer.height;\n  }\n\n  get depth(): number {\n    return this.inputLayer.depth;\n  }\n\n  constructor(inputLayer: ILayer, settings?: Partial<ILayerSettings>) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    const { width, height, depth } = this;\n    this.predictKernel = null;\n    this.compareKernel = null;\n    this.validate();\n    if (depth > 0) {\n      this.weights = zeros3D(width, height, depth);\n      this.deltas = zeros3D(width, height, depth);\n    } else if (height > 0) {\n      this.weights = zeros2D(width, height);\n      this.deltas = zeros2D(width, height);\n    }\n    this.setupPraxis();\n  }\n}\n","import { KernelOutput } from 'gpu.js';\nimport { BaseLayer, ILayer, ILayerSettings } from './base-layer';\n\nexport interface IFilterSettings extends ILayerSettings {\n  filterCount: number;\n  filterWidth: number;\n  filterHeight: number;\n  filters?: KernelOutput;\n  filterDeltas?: KernelOutput;\n}\n\nexport type FilterType = new (\n  settings: Partial<IFilterSettings>,\n  inputLayer: ILayer\n) => ILayer;\n\nexport class Filter extends BaseLayer {\n  get width(): number {\n    return this.inputLayer.width;\n  }\n\n  get height(): number {\n    return this.inputLayer.height;\n  }\n\n  get depth(): number {\n    return this.inputLayer.depth;\n  }\n\n  get filterCount(): number {\n    return this.settings.filterCount as number;\n  }\n\n  get filterWidth(): number {\n    return this.settings.filterWidth as number;\n  }\n\n  get filterHeight(): number {\n    return this.settings.filterHeight as number;\n  }\n\n  get filters(): KernelOutput {\n    return this.settings.filters;\n  }\n\n  set filters(filters: KernelOutput) {\n    this.settings.filters = filters;\n  }\n\n  get filterDeltas(): KernelOutput {\n    return this.settings.filterDeltas;\n  }\n\n  set filterDeltas(filterDeltas: KernelOutput) {\n    this.settings.filterDeltas = filterDeltas;\n  }\n\n  settings: Partial<IFilterSettings>;\n  inputLayer: ILayer;\n  constructor(settings: Partial<IFilterSettings>, inputLayer: ILayer) {\n    super();\n    this.settings = settings;\n    this.inputLayer = inputLayer;\n  }\n}\n","import { BaseLayer, ILayer, ILayerJSON, ILayerSettings } from './base-layer';\nimport { IKernelRunShortcut, Input, KernelOutput } from 'gpu.js';\nimport { IPraxis } from '../praxis/base-praxis';\n\nexport type InternalType = new (settings: Partial<ILayerSettings>) => ILayer;\n\nexport abstract class Internal implements ILayer {\n  abstract settings: ILayerSettings;\n  abstract predict(inputs?: KernelOutput): void;\n  abstract compare(targetValues?: KernelOutput): void;\n  abstract learn(learningRate?: number): void;\n  abstract setupKernels(training?: boolean): void;\n  predictKernel: IKernelRunShortcut | null = null;\n  compareKernel: IKernelRunShortcut | null = null;\n  praxis: IPraxis | null = null;\n\n  get width(): number {\n    return this.settings.width as number;\n  }\n\n  get height(): number {\n    return this.settings.height as number;\n  }\n\n  get depth(): number {\n    return this.settings.depth as number;\n  }\n\n  get weights(): KernelOutput | Input {\n    return this.settings.weights as KernelOutput;\n  }\n\n  set weights(weights: KernelOutput | Input) {\n    this.settings.weights = weights as KernelOutput;\n  }\n\n  get deltas(): KernelOutput {\n    return this.settings.deltas as KernelOutput;\n  }\n\n  set deltas(deltas: KernelOutput) {\n    this.settings.deltas = deltas;\n  }\n\n  toJSON(): Partial<ILayerJSON> {\n    return BaseLayer.toJSON(this);\n  }\n\n  abstract reuseKernels(layer: ILayer): void;\n}\n","import { BaseLayer, ILayer, ILayerSettings } from './base-layer';\n\nexport type ModifierType = new (\n  inputLayer: ILayer,\n  settings?: Partial<ILayerSettings>\n) => ILayer;\n\nexport class Modifier extends BaseLayer {\n  inputLayer: ILayer;\n  constructor(inputLayer: ILayer, settings?: Partial<ILayerSettings>) {\n    super({\n      ...settings,\n      width: inputLayer.width,\n      height: inputLayer.height,\n      depth: inputLayer.depth,\n    });\n    this.inputLayer = inputLayer;\n  }\n\n  validate(): void {\n    super.validate();\n\n    if (this.width !== this.inputLayer.width) {\n      throw new Error(\n        `width of ${this.width} does not match inputLayer.width of ${this.inputLayer.width}`\n      );\n    }\n\n    if (this.height !== this.inputLayer.height) {\n      throw new Error(\n        `height of ${this.height} does not match inputLayer.height of ${this.inputLayer.height}`\n      );\n    }\n\n    if (this.depth !== (this.inputLayer.depth ?? 0)) {\n      throw new Error(\n        `depth of ${this.depth} does not match inputLayer.depth of ${this.inputLayer.depth}`\n      );\n    }\n  }\n}\n","import { BaseLayer, ILayerSettings, ILayer } from './base-layer';\nimport { zeros2D } from '../utilities/zeros-2d';\n\nexport type OperatorType = new (\n  inputLayer1: ILayer,\n  inputLayer2: ILayer,\n  settings?: Partial<ILayerSettings>\n) => ILayer;\n\nexport abstract class Operator extends BaseLayer {\n  inputLayer1: ILayer;\n  inputLayer2: ILayer;\n  constructor(\n    inputLayer1: ILayer,\n    inputLayer2: ILayer,\n    settings?: Partial<ILayerSettings>\n  ) {\n    super(settings);\n    this.inputLayer1 = inputLayer1;\n    this.inputLayer2 = inputLayer2;\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n    this.setupPraxis();\n  }\n}\n","import { IKernelFunctionThis, IKernelRunShortcut, KernelOutput } from 'gpu.js';\n\nimport { makeKernel, release, clone } from '../utilities/kernel';\nimport { zeros } from '../utilities/zeros';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { BaseLayer, ILayer, ILayerSettings } from './base-layer';\n\nexport function compare1D(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  targetValues: number[]\n): number {\n  return weights[this.thread.y][this.thread.x] - targetValues[this.thread.x];\n}\n\nexport function compare2D(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  targetValues: number[][]\n): number {\n  return (\n    weights[this.thread.y][this.thread.x] -\n    targetValues[this.thread.y][this.thread.x]\n  );\n}\n\nexport type TargetType = new (\n  settings: Partial<ILayerSettings>,\n  inputLayer: ILayer\n) => ILayer;\n\nexport class Target extends BaseLayer {\n  errors: KernelOutput;\n  inputLayer: ILayer;\n  constructor(settings: Partial<ILayerSettings>, inputLayer: ILayer) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.validate();\n    if (this.depth) {\n      throw new Error('Target layer not implemented for depth');\n    } else if (this.height) {\n      this.weights = zeros2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n      this.errors = zeros2D(this.width, this.height);\n    } else {\n      this.weights = zeros(this.width);\n      this.deltas = zeros(this.width);\n      this.errors = zeros(this.width);\n    }\n  }\n\n  setupKernels(): void {\n    if (this.width === 1) {\n      this.compareKernel = makeKernel(compare1D, {\n        output: [this.width, this.height],\n        immutable: true,\n      });\n    } else {\n      this.compareKernel = makeKernel(compare2D, {\n        output: [this.width, this.height],\n        immutable: true,\n      });\n    }\n  }\n\n  predict(): void {\n    // TODO: should we clone here?\n    // NOTE: this looks like it shouldn't be, but the weights are immutable, and this is where they are reused.\n    release(this.weights);\n    this.weights = clone(this.inputLayer.weights as KernelOutput);\n  }\n\n  compare(targetValues: KernelOutput): void {\n    // this is where weights attach to deltas\n    // deltas will be zero on learn, so save it in error for comparing to mse later\n    release(this.deltas);\n    release(this.errors);\n    release(this.inputLayer.deltas);\n    this.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.weights,\n      targetValues\n    );\n    this.inputLayer.deltas = clone(this.deltas);\n    this.errors = clone(this.deltas);\n  }\n\n  setupPraxis(): void {}\n}\n\nexport function target(settings: ILayerSettings, inputLayer: ILayer): Target {\n  return new Target(settings, inputLayer);\n}\n","import { release } from '../utilities/kernel';\nimport { BaseLayer, ILayer, ILayerSettings } from './base-layer';\nexport { Activation } from './activation';\nexport { Filter } from './filter';\nexport { Internal } from './internal';\nexport { Modifier } from './modifier';\nexport { Operator } from './operator';\nexport { Target } from './target';\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport class InternalModel {}\n\nexport type EntryPointType = new (settings: Partial<ILayerSettings>) => ILayer;\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport class EntryPoint extends BaseLayer {}\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport class Model extends BaseLayer {\n  learn(learningRate?: number): void {\n    // TODO: do we need to release here?\n    const { weights: oldWeights } = this;\n    if (!this.praxis) throw new Error('this.praxis not defined');\n    this.weights = this.praxis.run(this, learningRate as number);\n    release(oldWeights);\n  }\n}\n","import { KernelOutput } from 'gpu.js';\n\nexport interface INumberHash {\n  [character: string]: number;\n}\n\nexport interface INumberArray {\n  length: number;\n  buffer?: ArrayBuffer;\n  [index: number]: number;\n}\n\nexport type InputOutputValue = INumberArray | Partial<INumberHash>;\n\nexport interface ITrainingDatum {\n  input: InputOutputValue | InputOutputValue[] | KernelOutput;\n  output: InputOutputValue | InputOutputValue[] | KernelOutput;\n}\n\nexport type FormattableData =\n  | number\n  | ITrainingDatum\n  | InputOutputValue\n  | InputOutputValue[];\n\n/* Functions for turning sparse hashes into arrays and vice versa */\nexport const lookup = {\n  /**\n   * Performs `[{a: 1}, {b: 6, c: 7}] -> {a: 0, b: 1, c: 2}`\n   * @param {Object} hashes\n   * @returns {Object}\n   */\n  toTable(hashes: INumberHash[]): INumberHash {\n    const hash = hashes.reduce((memo, hash) => {\n      return Object.assign(memo, hash);\n    }, {});\n\n    return lookup.toHash(hash);\n  },\n\n  /**\n   * Performs `[{a: 1}, {b: 6, c: 7}] -> {a: 0, b: 1, c: 2}`\n   */\n  toTable2D(objects2D: INumberHash[][]): INumberHash {\n    const table: INumberHash = {};\n    let valueIndex = 0;\n    for (let i = 0; i < objects2D.length; i++) {\n      const objects = objects2D[i];\n      for (let j = 0; j < objects.length; j++) {\n        const object = objects[j];\n        for (const p in object) {\n          if (object.hasOwnProperty(p) && !table.hasOwnProperty(p)) {\n            table[p] = valueIndex++;\n          }\n        }\n      }\n    }\n    return table;\n  },\n\n  toInputTable2D(\n    data: Array<{ input: Array<{ [key: string]: number }> }>\n  ): INumberHash {\n    const table: INumberHash = {};\n    let tableIndex = 0;\n    for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n      const input = data[dataIndex].input;\n      for (let i = 0; i < input.length; i++) {\n        const object = input[i];\n        for (const p in object) {\n          if (!object.hasOwnProperty(p)) continue;\n          if (!table.hasOwnProperty(p)) {\n            table[p] = tableIndex++;\n          }\n        }\n      }\n    }\n    return table;\n  },\n\n  toOutputTable2D(\n    data: Array<{ output: Array<{ [key: string]: number }> }>\n  ): INumberHash {\n    const table: INumberHash = {};\n    let tableIndex = 0;\n    for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n      const output = data[dataIndex].output;\n      for (let i = 0; i < output.length; i++) {\n        const object = output[i];\n        for (const p in object) {\n          if (!object.hasOwnProperty(p)) continue;\n          if (!table.hasOwnProperty(p)) {\n            table[p] = tableIndex++;\n          }\n        }\n      }\n    }\n    return table;\n  },\n\n  /**\n   * performs `{a: 6, b: 7} -> {a: 0, b: 1}`\n   */\n  toHash(hash: INumberHash): INumberHash {\n    const lookup: INumberHash = {};\n    let index = 0;\n    const keys = Object.keys(hash);\n    for (let i = 0; i < keys.length; i++) {\n      lookup[keys[i]] = index++;\n    }\n    return lookup;\n  },\n\n  /**\n   * performs `{a: 0, b: 1}, {a: 6} -> [6, 0]`\n   */\n  toArray(\n    lookup: INumberHash,\n    object: INumberHash,\n    arrayLength: number\n  ): Float32Array {\n    const result = new Float32Array(arrayLength);\n    for (const p in lookup) {\n      if (!lookup.hasOwnProperty(p)) continue;\n      result[lookup[p]] = object.hasOwnProperty(p) ? object[p] : 0;\n    }\n    return result;\n  },\n\n  toArrayShort(lookup: INumberHash, object: INumberHash): Float32Array {\n    const result = [];\n    for (const p in lookup) {\n      if (!lookup.hasOwnProperty(p)) continue;\n      if (!object.hasOwnProperty(p)) break;\n      result[lookup[p]] = object[p];\n    }\n    return Float32Array.from(result);\n  },\n\n  toArrays(\n    lookup: INumberHash,\n    objects: INumberHash[],\n    arrayLength: number\n  ): Float32Array[] {\n    const result = [];\n    for (let i = 0; i < objects.length; i++) {\n      result.push(this.toArray(lookup, objects[i], arrayLength));\n    }\n    return result;\n  },\n\n  /**\n   * performs `{a: 0, b: 1}, [6, 7] -> {a: 6, b: 7}`\n   * @param {Object} lookup\n   * @param {Array} array\n   * @returns {Object}\n   */\n  toObject(lookup: INumberHash, array: number[] | Float32Array): INumberHash {\n    const object: INumberHash = {};\n    for (const p in lookup) {\n      if (!lookup.hasOwnProperty(p)) continue;\n      object[p] = array[lookup[p]];\n    }\n    return object;\n  },\n\n  toObjectPartial(\n    lookup: INumberHash,\n    array: number[] | Float32Array,\n    offset = 0,\n    limit = 0\n  ): INumberHash {\n    const object: INumberHash = {};\n    let i = 0;\n    for (const p in lookup) {\n      if (!lookup.hasOwnProperty(p)) continue;\n      if (offset > 0) {\n        if (i++ < offset) continue;\n      }\n      if (limit > 0) {\n        if (i++ >= limit) continue;\n      }\n      object[p] = array[lookup[p] - offset];\n    }\n    return object;\n  },\n\n  dataShape(data: FormattableData[] | FormattableData): string[] {\n    const shape = [];\n    let lastData;\n    if (data.hasOwnProperty('input')) {\n      shape.push('datum');\n      lastData = (data as ITrainingDatum).input;\n    } else if (Array.isArray(data)) {\n      if (\n        (data as ITrainingDatum[])[0] &&\n        (data as ITrainingDatum[])[0].input\n      ) {\n        shape.push('array', 'datum');\n        lastData = (data as ITrainingDatum[])[0].input;\n      } else if (Array.isArray(data[0])) {\n        shape.push('array');\n        lastData = data[0];\n      } else {\n        lastData = data as\n          | InputOutputValue\n          | InputOutputValue[]\n          | InputOutputValue[][];\n      }\n    } else {\n      lastData = data as\n        | InputOutputValue\n        | InputOutputValue[]\n        | InputOutputValue[][];\n    }\n\n    let p;\n    while (lastData) {\n      p = Object.keys(lastData)[0];\n      if (\n        Array.isArray(lastData) ||\n        typeof (lastData as Float32Array).buffer === 'object'\n      ) {\n        shape.push('array');\n        const possibleNumber:\n          | number\n          | INumberArray = (lastData as INumberArray[])[parseInt(p)];\n        if (typeof possibleNumber === 'number') {\n          shape.push('number');\n          break;\n        } else {\n          lastData = possibleNumber;\n        }\n      } else if (\n        typeof lastData === 'object' &&\n        typeof (lastData as Float32Array).buffer !== 'object'\n      ) {\n        shape.push('object');\n        const possibleNumber: number | INumberHash = (lastData as INumberHash)[\n          p\n        ];\n        if (typeof possibleNumber === 'number') {\n          shape.push('number');\n          break;\n        } else {\n          lastData = possibleNumber;\n        }\n      } else {\n        throw new Error('unhandled signature');\n      }\n    }\n    return shape;\n  },\n\n  addKeys(value: number[] | INumberHash, table: INumberHash): INumberHash {\n    if (Array.isArray(value)) return table;\n    let i = Object.keys(table).length;\n    for (const p in value) {\n      if (!value.hasOwnProperty(p)) continue;\n      if (table.hasOwnProperty(p)) continue;\n      table[p] = i++;\n    }\n    return table;\n  },\n};\n","import { ILayer } from '../layer';\nimport { IKernelRunShortcut, KernelOutput } from 'gpu.js';\n\nexport interface ILayerTemplate {\n  width: number;\n  height: number;\n  depth: number;\n}\n\nexport interface IPraxisJSON {\n  width: number;\n  height: number;\n  depth: number;\n}\n\nexport interface IPraxisSettings {\n  width?: number;\n  height?: number;\n  depth?: number;\n  kernel?: IKernelRunShortcut | null;\n}\n\nexport interface IPraxis {\n  layerTemplate: ILayerTemplate | null;\n  kernel: IKernelRunShortcut | null;\n  settings: Partial<IPraxisSettings>;\n  setupKernels: () => void;\n  width: number;\n  height: number;\n  depth: number;\n  run:\n    | ((layer: ILayer, learningRate: number) => KernelOutput)\n    | ((layer: ILayer, learningRate?: number) => KernelOutput);\n  toJSON: () => Partial<IPraxisSettings>;\n}\n\nexport abstract class BasePraxis implements IPraxis {\n  layerTemplate: ILayerTemplate;\n  kernel: IKernelRunShortcut | null;\n  settings: Partial<IPraxisSettings>;\n\n  get width(): number {\n    return this.layerTemplate.width;\n  }\n\n  get height(): number {\n    return this.layerTemplate.height;\n  }\n\n  get depth(): number {\n    return this.layerTemplate.depth;\n  }\n\n  constructor(\n    layerTemplate: ILayerTemplate,\n    settings: Partial<IPraxisSettings> = {}\n  ) {\n    this.layerTemplate = layerTemplate;\n    this.settings = { ...settings };\n    this.kernel = null;\n  }\n\n  setupKernels(): void {}\n\n  reuseKernels(praxis: IPraxis): void {\n    if (praxis.width !== this.width) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${praxis.width} is not ${this.width}`\n      );\n    }\n    if (praxis.height !== this.height) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${praxis.height} is not ${this.height}`\n      );\n    }\n    if (praxis.hasOwnProperty('kernel')) {\n      this.kernel = praxis.kernel;\n    }\n  }\n\n  abstract run(layer: ILayer, learningRate?: number): KernelOutput;\n\n  toJSON(): Partial<IPraxisSettings> {\n    return { ...this.settings };\n  }\n}\n","import { makeKernel } from '../utilities/kernel';\nimport { BasePraxis, IPraxisSettings } from './base-praxis';\nimport { ILayer } from '../layer/base-layer';\nimport { IKernelFunctionThis, IKernelRunShortcut, KernelOutput } from 'gpu.js';\n\nexport interface IUpdateThis extends IKernelFunctionThis {\n  constants: {\n    learningRate: number;\n  };\n}\n\nexport function update(\n  this: IUpdateThis,\n  weights: number[][],\n  deltas: number[][]\n): number {\n  return (\n    weights[this.thread.y][this.thread.x] +\n    this.constants.learningRate * deltas[this.thread.y][this.thread.x]\n  );\n}\n\nexport interface IArthurDeviationBiasesSettings extends IPraxisSettings {\n  learningRate?: number;\n}\n\nexport const defaultSettings = {\n  learningRate: 0.3,\n};\n\nexport class ArthurDeviationBiases extends BasePraxis {\n  settings: IArthurDeviationBiasesSettings;\n  kernel: IKernelRunShortcut | null;\n  constructor(layer: ILayer, settings?: IArthurDeviationBiasesSettings) {\n    super(layer);\n    this.settings = { ...defaultSettings, ...settings };\n    this.kernel = null;\n  }\n\n  run(layer: ILayer): KernelOutput {\n    return (this.kernel as IKernelRunShortcut)(layer.weights, layer.deltas);\n  }\n\n  setupKernels(): void {\n    this.kernel = makeKernel(update, {\n      output: [this.width, this.height],\n      constants: {\n        learningRate: this.settings.learningRate,\n      },\n    });\n  }\n}\n\nexport function arthurDeviationBiases(\n  layer: ILayer,\n  settings?: Partial<IArthurDeviationBiasesSettings>\n): ArthurDeviationBiases {\n  return new ArthurDeviationBiases(layer, settings);\n}\n","import { makeKernelMap } from '../utilities/kernel';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { BasePraxis, IPraxisSettings } from './base-praxis';\nimport { ILayer } from '../layer/base-layer';\nimport {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelMapRunShortcut,\n  ISubKernelObject,\n  ISubKernelsResults,\n  KernelOutput,\n} from 'gpu.js';\n\nexport function updateChange(value: number): number {\n  return value;\n}\n\nexport interface IUpdateConstants extends IConstantsThis {\n  learningRate: number;\n  momentum: number;\n}\n\nexport function update(\n  this: IKernelFunctionThis<IUpdateConstants>,\n  changes: number[][],\n  weights: number[][],\n  incomingWeights: number[][],\n  inputDeltas: number[][]\n): number {\n  const lastChange: number = changes[this.thread.y][this.thread.x];\n  const inputDelta: number = inputDeltas[this.thread.y][0];\n  const weight: number = weights[this.thread.y][this.thread.x];\n  const incoming: number = incomingWeights[this.thread.x][0];\n\n  const change =\n    this.constants.learningRate * inputDelta * incoming +\n    this.constants.momentum * lastChange;\n  updateChange(change);\n  return weight + change;\n}\n\nexport interface IArthurDeviationWeightsSettings extends IPraxisSettings {\n  learningRate?: number;\n  momentum?: number;\n  weightsLayer?: ILayer | null;\n  incomingLayer?: ILayer | null;\n  deltaLayer?: ILayer | null;\n}\n\nexport interface IKernelMapResults extends ISubKernelsResults {\n  changes: KernelOutput;\n}\n\nexport const defaultSettings: IArthurDeviationWeightsSettings = {\n  learningRate: 0.3,\n  momentum: 0.1,\n  weightsLayer: null,\n  incomingLayer: null,\n  deltaLayer: null,\n};\n\nexport class ArthurDeviationWeights extends BasePraxis {\n  changes: KernelOutput;\n  kernelMap: IKernelMapRunShortcut<ISubKernelObject> | null = null;\n  settings: IArthurDeviationWeightsSettings;\n  get learningRate(): number {\n    return this.settings.learningRate as number;\n  }\n\n  get momentum(): number {\n    return this.settings.momentum as number;\n  }\n\n  get weightsLayer(): ILayer {\n    return this.settings.weightsLayer as ILayer;\n  }\n\n  set weightsLayer(layer: ILayer) {\n    this.settings.weightsLayer = layer;\n  }\n\n  get deltaLayer(): ILayer {\n    return this.settings.deltaLayer as ILayer;\n  }\n\n  set deltaLayer(layer: ILayer) {\n    this.settings.deltaLayer = layer;\n  }\n\n  get incomingLayer(): ILayer {\n    return this.settings.incomingLayer as ILayer;\n  }\n\n  set incomingLayer(layer: ILayer) {\n    this.settings.incomingLayer = layer;\n  }\n\n  constructor(layer: ILayer, settings?: IArthurDeviationWeightsSettings) {\n    super(layer);\n    this.settings = { ...defaultSettings, ...settings };\n    this.changes = zeros2D(layer.width, layer.height);\n  }\n\n  run(): KernelOutput {\n    const output = (this.kernelMap as IKernelMapRunShortcut<IKernelMapResults>)(\n      this.changes,\n      this.weightsLayer.weights,\n      this.incomingLayer.weights,\n      this.deltaLayer.deltas\n    );\n    this.changes = output.changes;\n    return output.result;\n  }\n\n  setupKernels(): void {\n    this.kernelMap = makeKernelMap<Parameters<typeof update>, IUpdateConstants>(\n      {\n        changes: updateChange,\n      },\n      update,\n      {\n        output: [this.width, this.height],\n        constants: {\n          learningRate: this.learningRate,\n          momentum: this.momentum,\n        },\n      }\n    );\n  }\n}\n\nexport function arthurDeviationWeights(\n  layer: ILayer,\n  settings?: Partial<IArthurDeviationWeightsSettings>\n): ArthurDeviationWeights {\n  return new ArthurDeviationWeights(layer, settings);\n}\n","import { BasePraxis, ILayerTemplate, IPraxisSettings } from './base-praxis';\n\nimport { makeKernelMap, release } from '../utilities/kernel';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelMapRunShortcut,\n  ISubKernelObject,\n  KernelOutput,\n} from 'gpu.js';\nimport { ILayer } from '../layer';\n\nexport function getMomentum(\n  delta: number,\n  decay: number,\n  previousMomentum: number\n): number {\n  return previousMomentum * decay + (1 - decay) * delta * delta;\n}\n\nexport function clipByValue(value: number, max: number, min: number): number {\n  if (value > max) {\n    return max;\n  }\n  if (value < min) {\n    return min;\n  }\n  return value;\n}\n\ninterface IUpdate extends IConstantsThis {\n  clipValue: number;\n  decayRate: number;\n  smoothEps: number;\n  regularizationStrength: number;\n}\n/**\n * @description Momentum Root Mean Square Propagation Function\n */\nexport function update(\n  this: IKernelFunctionThis<IUpdate>,\n  weights: number[][],\n  deltas: number[][],\n  previousMomenta: number[][]\n): number {\n  const delta = deltas[this.thread.y][this.thread.x];\n  const clippedDelta = clipByValue(\n    delta,\n    this.constants.clipValue,\n    -this.constants.clipValue\n  );\n  const weight = weights[this.thread.y][this.thread.x];\n  const previousMomentum = previousMomenta[this.thread.y][this.thread.x];\n  const momentum = getMomentum(\n    delta,\n    this.constants.decayRate,\n    previousMomentum\n  );\n  return (\n    weight +\n    (-this.constants.learningRate * clippedDelta) /\n      Math.sqrt(momentum + this.constants.smoothEps) -\n    this.constants.regularizationStrength * weight\n  );\n}\n\nexport function isClippedByValue(\n  value: number,\n  max: number,\n  min: number\n): number {\n  if (value > max) {\n    return 1;\n  }\n  if (value < min) {\n    return 1;\n  }\n  return 0;\n}\n\nexport interface IMomentumRootMeanSquaredPropagationSettings\n  extends IPraxisSettings {\n  decayRate?: number;\n  regularizationStrength?: number;\n  learningRate?: number;\n  smoothEps: number;\n  clipValue: number;\n}\n\nexport const defaults: IMomentumRootMeanSquaredPropagationSettings = {\n  decayRate: 0.999,\n  regularizationStrength: 0.000001,\n  learningRate: 0.01,\n  smoothEps: 1e-8,\n  clipValue: 5,\n};\n\nexport class MomentumRootMeanSquaredPropagation extends BasePraxis {\n  momenta: KernelOutput;\n  kernelMap: IKernelMapRunShortcut<ISubKernelObject> | null = null;\n  settings: Partial<IMomentumRootMeanSquaredPropagationSettings>;\n\n  get clipValue(): number {\n    return this.settings.clipValue as number;\n  }\n\n  get decayRate(): number {\n    return this.settings.decayRate as number;\n  }\n\n  get learningRate(): number {\n    return this.settings.learningRate as number;\n  }\n\n  get regularizationStrength(): number {\n    return this.settings.regularizationStrength as number;\n  }\n\n  get smoothEps(): number {\n    return this.settings.smoothEps as number;\n  }\n\n  constructor(\n    layerTemplate: ILayerTemplate,\n    settings: Partial<IMomentumRootMeanSquaredPropagationSettings> = {}\n  ) {\n    super(layerTemplate);\n    this.settings = { ...defaults, ...settings };\n    this.momenta = zeros2D(layerTemplate.width, layerTemplate.height);\n  }\n\n  run(layer: ILayer): KernelOutput {\n    const { momenta, result } = (this.kernelMap as IKernelMapRunShortcut<\n      ISubKernelObject\n    >)(layer.weights, layer.deltas, this.momenta);\n    release(this.momenta);\n    this.momenta = momenta;\n    return result;\n  }\n\n  setupKernels(): void {\n    this.kernelMap = makeKernelMap(\n      {\n        momenta: getMomentum,\n      },\n      update,\n      {\n        output: [this.width, this.height],\n        constants: {\n          clipValue: this.clipValue,\n          decayRate: this.decayRate,\n          learningRate: this.learningRate,\n          regularizationStrength: this.regularizationStrength,\n          smoothEps: this.smoothEps,\n        },\n        functions: [clipByValue],\n        immutable: true,\n      }\n    );\n  }\n}\n\nexport function momentumRootMeanSquaredPropagation(\n  layer: ILayer,\n  settings: Partial<IMomentumRootMeanSquaredPropagationSettings>\n): MomentumRootMeanSquaredPropagation {\n  return new MomentumRootMeanSquaredPropagation(layer, settings);\n}\n\n/**\n * @description Mathematician friendly name of MomentumRootMeanSquaredPropagation class. For those that are not mere mortals\n */\nexport const MRmsProp = MomentumRootMeanSquaredPropagation;\nexport const mRmsProp = momentumRootMeanSquaredPropagation;\n","import { ILayer } from '../layer/base-layer';\n\nexport function traverseLayersFrom(\n  layer: ILayer,\n  cb: (layer: ILayer) => void\n): void {\n  if (layer.hasOwnProperty('inputLayer')) {\n    traverseLayersFrom(\n      (layer as ILayer & { inputLayer: ILayer }).inputLayer,\n      cb\n    );\n  } else {\n    if (layer.hasOwnProperty('inputLayer1')) {\n      traverseLayersFrom(\n        (layer as ILayer & { inputLayer1: ILayer }).inputLayer1,\n        cb\n      );\n    }\n    if (layer.hasOwnProperty('inputLayer2')) {\n      traverseLayersFrom(\n        (layer as ILayer & { inputLayer2: ILayer }).inputLayer2,\n        cb\n      );\n    }\n  }\n  cb(layer);\n}\n","import { ILayer } from '../layer/base-layer';\nimport { traverseLayersFrom } from './traverse-layers-from';\n\nexport function flattenLayers(layers: ILayer[]): ILayer[] {\n  const result = layers.slice(0);\n  for (let i = 0; i < result.length; i++) {\n    let offset = 0;\n    traverseLayersFrom(result[i], (layer: ILayer) => {\n      if (!result.includes(layer)) {\n        result.splice(i + offset, 0, layer);\n        offset++;\n      }\n    });\n  }\n  return result;\n}\n","import { ILayer } from '../layer/base-layer';\n\nexport function checkSameSize(layer1: ILayer, layer2: ILayer): void {\n  if (layer1.width !== layer2.width) {\n    throw new Error(\n      `Layer width mismatch of ${layer1.width} and ${layer2.width}`\n    );\n  }\n\n  if (layer1.height !== layer2.height) {\n    throw new Error(\n      `Layer height mismatch of ${layer1.height} and ${layer2.height}`\n    );\n  }\n}\n","import { makeKernel, release, clone } from '../utilities/kernel';\nimport { checkSameSize } from '../utilities/layer-size';\nimport { Operator } from './operator';\nimport { IKernelFunctionThis, IKernelRunShortcut, Texture } from 'gpu.js';\nimport { ILayerSettings, ILayer } from './base-layer';\n\nexport function predict(\n  this: IKernelFunctionThis,\n  inputWeights1: number[][],\n  inputWeights2: number[][]\n): number {\n  return (\n    inputWeights1[this.thread.y][this.thread.x] +\n    inputWeights2[this.thread.y][this.thread.x]\n  );\n}\n\nexport class Add extends Operator {\n  get width(): number {\n    return this.inputLayer1.width;\n  }\n\n  get height(): number {\n    return this.inputLayer1.height;\n  }\n\n  get depth(): number {\n    return this.inputLayer1.depth;\n  }\n\n  validate(): void {\n    super.validate();\n    checkSameSize(this.inputLayer1, this.inputLayer2);\n  }\n\n  setupKernels(): void {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n      immutable: true,\n    });\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer1.weights,\n      this.inputLayer2.weights\n    ) as Texture;\n  }\n\n  compare(): void {\n    // TODO: Do we need release and clone here?\n    release(this.inputLayer1.deltas);\n    release(this.inputLayer2.deltas);\n    this.inputLayer1.deltas = clone(this.deltas);\n    this.inputLayer2.deltas = clone(this.deltas);\n  }\n}\n\nexport function add(\n  inputLayer1: ILayer,\n  inputLayer2: ILayer,\n  settings?: ILayerSettings\n): Add {\n  return new Add(inputLayer1, inputLayer2, settings);\n}\n","export function randomWeight(): number {\n  return Math.random() * 0.4 - 0.2;\n}\n","/**\n * Returns a random float between given min and max bounds (inclusive)\n * @param min Minimum value of the ranfom float\n * @param max Maximum value of the random float\n */\nexport function randomFloat(min: number, max: number): number {\n  return Math.random() * (max - min) + min;\n}\n\n/**\n * Complicated math. All you need to know is that it returns a random number.\n * More info: https://en.wikipedia.org/wiki/Normal_distribution\n */\nexport function gaussRandom(): number {\n  if (gaussRandom.returnV) {\n    gaussRandom.returnV = false;\n    return gaussRandom.vVal;\n  }\n  const u = 2 * Math.random() - 1;\n  const v = 2 * Math.random() - 1;\n  const r = u * u + v * v;\n  if (r === 0 || r > 1) {\n    return gaussRandom();\n  }\n  const c = Math.sqrt((-2 * Math.log(r)) / r);\n  gaussRandom.vVal = v * c; // cache this\n  gaussRandom.returnV = true;\n  return u * c;\n}\n\n/**\n * Returns a random integer between given min and max bounds\n * @param min Minimum value of the random integer\n * @param max Maximum value of the random integer\n */\nexport function randomInteger(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\n/**\n * If you know what this is: https://en.wikipedia.org/wiki/Normal_distribution\n * @param mu\n * @param std\n */\nexport function randomN(mu: number, std: number): number {\n  return mu + gaussRandom() * std;\n}\n\ngaussRandom.returnV = false;\ngaussRandom.vVal = 0;\n","import { randomWeight } from './random-weight';\nimport { randomFloat } from './random';\n\n/**\n * Returns an array of given size, full of randomness\n */\nexport function randos(size: number, std: number | null = null): Float32Array {\n  const array: Float32Array = new Float32Array(size);\n  if (std === null) {\n    for (let i = 0; i < size; i++) {\n      array[i] = randomWeight();\n    }\n  } else {\n    for (let i = 0; i < size; i++) {\n      array[i] = randomFloat(-std, std);\n    }\n  }\n  return array;\n}\n\n/**\n * Returns a 2D matrix of given size, full of randomness\n */\nexport function randos2D(\n  width: number,\n  height: number,\n  std?: number | null\n): Float32Array[] {\n  const result: Float32Array[] = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = randos(width, std);\n  }\n  return result;\n}\n\n/**\n * Returns a 3D tensor of given size, full of randomness\n */\nexport function randos3D(\n  width: number,\n  height: number,\n  depth: number,\n  std?: number | null\n): Float32Array[][] {\n  const result: Float32Array[][] = new Array(depth);\n  for (let z = 0; z < depth; z++) {\n    result[z] = randos2D(width, height, std);\n  }\n  return result;\n}\n","import { randos2D } from '../utilities/randos';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { baseLayerDefaultSettings, ILayer, ILayerSettings } from './base-layer';\nimport { Model } from './types';\n\nexport interface IRandomSettings extends ILayerSettings {\n  std?: number | null;\n}\n\nexport const defaults: IRandomSettings = {\n  ...baseLayerDefaultSettings,\n  std: null,\n};\n\nexport class Random extends Model implements ILayer {\n  settings: IRandomSettings;\n  constructor(settings: Partial<IRandomSettings>) {\n    super();\n    this.settings = { ...defaults, ...settings };\n    this.setupPraxis();\n    this.validate();\n\n    if (!this.weights) {\n      this.weights = randos2D(this.width, this.height, settings.std);\n    }\n    if (!this.deltas) {\n      this.deltas = zeros2D(this.width, this.height);\n    }\n  }\n\n  predict(): void {}\n\n  compare(): void {}\n}\n\nexport function random(settings: IRandomSettings): Random {\n  return new Random(settings);\n}\n","import { makeKernel, release } from '../utilities/kernel';\nimport { Operator } from './operator';\nimport {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelRunShortcut,\n  Texture,\n} from 'gpu.js';\nimport { ILayer, ILayerJSON, ILayerSettings } from './base-layer';\n\nexport interface IMultiplyConstants extends IConstantsThis {\n  size: number;\n}\n\nexport function predict(\n  this: IKernelFunctionThis<IMultiplyConstants>,\n  weights1: number[][],\n  weights2: number[][]\n): number {\n  let sum = 0;\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += weights1[this.thread.y][i] * weights2[i][this.thread.x];\n  }\n  return sum;\n}\n\nexport function compareFromX(\n  this: IKernelFunctionThis<IMultiplyConstants>,\n  deltas: number[][],\n  inputDeltas: number[][],\n  inputWeights: number[][]\n): number {\n  let sum = inputDeltas[this.thread.y][this.thread.x];\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += deltas[this.thread.y][i] * inputWeights[this.thread.x][i];\n  }\n  return sum;\n}\n\nexport function compareFromY(\n  this: IKernelFunctionThis<IMultiplyConstants>,\n  deltas: number[][],\n  inputDeltas: number[][],\n  inputWeights: number[][]\n): number {\n  let sum = inputDeltas[this.thread.y][this.thread.x];\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += deltas[i][this.thread.x] * inputWeights[i][this.thread.y];\n  }\n  return sum;\n}\n\nexport class Multiply extends Operator {\n  compareKernel1: IKernelRunShortcut | null = null;\n  compareKernel2: IKernelRunShortcut | null = null;\n\n  get width(): number {\n    return this.inputLayer2.width;\n  }\n\n  set width(width: number) {\n    throw new Error('Cannot set width on Multiply');\n  }\n\n  get height(): number {\n    return this.inputLayer1.height;\n  }\n\n  set height(height: number) {\n    throw new Error('Cannot set height on Multiply');\n  }\n\n  get depth(): number {\n    return this.inputLayer1.depth;\n  }\n\n  set depth(depth: number) {\n    throw new Error('Cannot set depth on Multiply');\n  }\n\n  validate(): void {\n    super.validate();\n    if (this.inputLayer1.width !== this.inputLayer2.height) {\n      throw new Error(\n        `Layer width mismatch of ${this.inputLayer1.width} and ${this.inputLayer2.height}`\n      );\n    }\n  }\n\n  setupKernels(): void {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n      constants: {\n        size: this.inputLayer2.height,\n      },\n      immutable: true,\n    });\n    this.compareKernel1 = makeKernel(compareFromX, {\n      output: [this.inputLayer1.width, this.inputLayer1.height],\n      constants: {\n        size: this.inputLayer2.width,\n      },\n      immutable: true,\n    });\n    this.compareKernel2 = makeKernel(compareFromY, {\n      output: [this.inputLayer2.width, this.inputLayer2.height],\n      constants: {\n        size: this.inputLayer1.height,\n      },\n      immutable: true,\n    });\n  }\n\n  reuseKernels(layer: ILayer): void {\n    super.reuseKernels(layer);\n    this.compareKernel1 = (layer as Multiply).compareKernel1;\n    this.compareKernel2 = (layer as Multiply).compareKernel2;\n  }\n\n  predict(): void {\n    release(this.weights);\n    if (!this.predictKernel) throw new Error('this.predictKernel is not set');\n    this.weights = this.predictKernel(\n      this.inputLayer1.weights,\n      this.inputLayer2.weights\n    ) as Texture;\n  }\n\n  compare(): void {\n    if (!this.compareKernel1) throw new Error('this.compareKernel1 not set');\n    if (!this.compareKernel2) throw new Error('this.compareKernel2 not set');\n\n    const inputLayer1Deltas = this.inputLayer1.deltas;\n    const inputLayer2Deltas = this.inputLayer2.deltas;\n\n    const newDeltas1 = this.compareKernel1(\n      this.deltas,\n      this.inputLayer1.deltas,\n      this.inputLayer2.weights\n    );\n    const newDeltas2 = this.compareKernel2(\n      this.deltas,\n      this.inputLayer2.deltas,\n      this.inputLayer1.weights\n    );\n\n    this.inputLayer2.deltas = newDeltas2 as Texture;\n    this.inputLayer1.deltas = newDeltas1 as Texture;\n\n    release(inputLayer1Deltas);\n    release(inputLayer2Deltas);\n  }\n\n  setupPraxis(): void {}\n\n  toJSON(): Partial<ILayerJSON> {\n    return {\n      ...super.toJSON(),\n      width: this.width,\n      height: this.height,\n    };\n  }\n}\n\nexport function multiply(\n  inputLayer1: ILayer,\n  inputLayer2: ILayer,\n  settings?: ILayerSettings\n): Multiply {\n  return new Multiply(inputLayer1, inputLayer2, settings);\n}\n","import { ILayer, ILayerSettings } from './base-layer';\nimport { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\n\nimport { Activation } from './types';\nimport { makeKernel, release } from '../utilities/kernel';\nimport { activate, measure } from '../activation/sigmoid';\n\nexport function predict2D(\n  this: IKernelFunctionThis,\n  inputs: number[][]\n): number {\n  return 1 / (1 + Math.exp(-inputs[this.thread.y][this.thread.x]));\n}\n\nexport function predict3D(\n  this: IKernelFunctionThis,\n  inputs: number[][][]\n): number {\n  return (\n    1 / (1 + Math.exp(-inputs[this.thread.z][this.thread.y][this.thread.x]))\n  );\n}\n\nexport function compare2D(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  deltas: number[][]\n): number {\n  const weight = weights[this.thread.y][this.thread.x];\n  const delta = deltas[this.thread.y][this.thread.x];\n  return weight * (1 - weight) * delta;\n}\n\nexport function compare3D(\n  this: IKernelFunctionThis,\n  weights: number[][][],\n  deltas: number[][][]\n): number {\n  const weight = weights[this.thread.z][this.thread.y][this.thread.x];\n  const delta = deltas[this.thread.z][this.thread.y][this.thread.x];\n  return weight * (1 - weight) * delta;\n}\n\nexport class Sigmoid extends Activation {\n  setupKernels(): void {\n    if (this.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [measure],\n        immutable: true,\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [this.width, this.height],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [this.width, this.height],\n        functions: [measure],\n        immutable: true,\n      });\n    }\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n  }\n\n  compare(): void {\n    release(this.inputLayer.deltas);\n    this.inputLayer.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.weights,\n      this.deltas\n    );\n  }\n\n  learn(learningRate?: number): void {}\n}\n\nexport function sigmoid(\n  inputLayer: ILayer,\n  settings?: ILayerSettings\n): Sigmoid {\n  return new Sigmoid(inputLayer, settings);\n}\n","import {\n  ArthurDeviationWeights,\n  arthurDeviationWeights,\n  IArthurDeviationWeightsSettings,\n} from '../praxis/arthur-deviation-weights';\nimport {\n  arthurDeviationBiases,\n  IArthurDeviationBiasesSettings,\n} from '../praxis/arthur-deviation-biases';\nimport { ILayer } from './base-layer';\nimport { add } from './add';\nimport { IRandomSettings, random } from './random';\nimport { multiply } from './multiply';\nimport { Sigmoid, sigmoid } from './sigmoid';\nimport { IPraxis } from '../praxis/base-praxis';\n\nexport interface IArthurFeedForwardPraxisSettings\n  extends IArthurDeviationBiasesSettings,\n    IArthurDeviationWeightsSettings {}\n\nexport interface IArthurFeedForwardSettings extends IRandomSettings {\n  initPraxis?: (\n    layerTemplate: ILayer,\n    settings?: IArthurFeedForwardPraxisSettings | null\n  ) => IPraxis;\n}\n\nexport function arthurFeedForward(\n  settings: IArthurFeedForwardPraxisSettings,\n  inputLayer: ILayer\n): Sigmoid {\n  const { height } = settings;\n  function initWeightsPraxis(\n    layerTemplate: ILayer,\n    settings?: IArthurDeviationWeightsSettings\n  ): IPraxis {\n    const praxis = arthurDeviationWeights(layerTemplate, settings);\n    praxis.setupKernels();\n    return praxis;\n  }\n  function initBiasesPraxis(\n    layerTemplate: ILayer,\n    settings?: IArthurDeviationBiasesSettings\n  ): IPraxis {\n    const praxis = arthurDeviationBiases(layerTemplate, settings);\n    praxis.setupKernels();\n    return praxis;\n  }\n  const weightsLayer = random({\n    id: 'weights',\n    height,\n    width: inputLayer.height,\n    initPraxis: initWeightsPraxis,\n  });\n\n  const biasesLayer = random({\n    id: 'biases',\n    height,\n    initPraxis: initBiasesPraxis,\n  });\n\n  const multiplyLayer = multiply(weightsLayer, inputLayer);\n  const addLayer = add(multiplyLayer, biasesLayer);\n  const sigmoidLayer = sigmoid(addLayer);\n\n  const weightsPraxis = weightsLayer.praxis as ArthurDeviationWeights;\n  weightsPraxis.weightsLayer = weightsLayer;\n  weightsPraxis.incomingLayer = inputLayer;\n  weightsPraxis.deltaLayer = sigmoidLayer;\n  return sigmoidLayer;\n}\n","import { IConvolutionSettingsBase } from '../layer/convolution';\n\nexport interface IStride {\n  strideX: number;\n  strideY: number;\n}\n\nexport function getStride(\n  settings: IConvolutionSettingsBase,\n  defaults: IConvolutionSettingsBase\n): IStride {\n  if (typeof settings.stride === 'number') {\n    return { strideX: settings.stride, strideY: settings.stride };\n  } else {\n    let strideX: number = defaults.stride as number;\n    let strideY: number = defaults.stride as number;\n    if (typeof settings.strideX === 'number') {\n      strideX = settings.strideX;\n    }\n    if (typeof settings.strideY === 'number') {\n      strideY = settings.strideY;\n    }\n    return { strideX, strideY };\n  }\n}\n\nexport interface IPadding {\n  paddingX: number;\n  paddingY: number;\n}\n\nexport function getPadding(\n  settings: IConvolutionSettingsBase,\n  defaults: IConvolutionSettingsBase\n): IPadding {\n  if (typeof settings.padding === 'number') {\n    return { paddingX: settings.padding, paddingY: settings.padding };\n  } else {\n    let paddingX: number = defaults.padding as number;\n    let paddingY: number = defaults.padding as number;\n    if (typeof settings.paddingX === 'number') {\n      paddingX = settings.paddingX;\n    }\n    if (typeof settings.paddingY === 'number') {\n      paddingY = settings.paddingY;\n    }\n    return { paddingX, paddingY };\n  }\n}\n","/**\n * Returns an array of a given size with each element filled with a single value\n */\nexport function values(size: number, value: number): Float32Array {\n  return new Float32Array(size).fill(value);\n}\n","import { makeKernel, release, clone } from '../utilities/kernel';\nimport { getStride, getPadding } from '../utilities/layer-setup';\nimport { Filter } from './filter';\nimport { randos, randos3D } from '../utilities/randos';\nimport { zeros3D } from '../utilities/zeros-3d';\nimport { values } from '../utilities/values';\nimport {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelRunShortcut,\n  KernelOutput,\n} from 'gpu.js';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { IPraxis } from '../praxis/base-praxis';\n\nexport interface IConvolutionConstantsBase extends IConstantsThis {\n  paddingX: number;\n  paddingY: number;\n  strideX: number;\n  strideY: number;\n  filterWidth: number;\n  filterHeight: number;\n}\n\nexport interface IPredictConstants extends IConvolutionConstantsBase {\n  inputWidth: number;\n  inputHeight: number;\n}\n\nexport function predict(\n  this: IKernelFunctionThis<IPredictConstants>,\n  inputs: number[][][],\n  filters: number[][][],\n  biases: number[]\n): number {\n  const startFilterX =\n    this.constants.paddingX - this.thread.x * this.constants.strideX;\n  const startInputX =\n    this.thread.x * this.constants.strideX - this.constants.paddingX;\n  const endFilterX = Math.min(\n    this.constants.filterWidth,\n    startFilterX + this.constants.inputWidth\n  );\n\n  const startFilterY =\n    this.constants.paddingY - this.thread.y * this.constants.strideY;\n  const startInputY =\n    this.thread.y * this.constants.strideY - this.constants.paddingY;\n  const endFilterY = Math.min(\n    this.constants.filterHeight,\n    startFilterY + this.constants.inputHeight\n  );\n\n  let sum = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (\n      let filterY = Math.max(0, startFilterY),\n        inputY = Math.max(0, startInputY);\n      filterY < endFilterY;\n      filterY++, inputY++\n    ) {\n      for (\n        let filterX = Math.max(0, startFilterX),\n          inputX = Math.max(0, startInputX);\n        filterX < endFilterX;\n        filterX++, inputX++\n      ) {\n        sum += filters[z][filterY][filterX] * inputs[z][inputY][inputX];\n      }\n    }\n  }\n  return sum + biases[this.thread.z];\n}\n\nexport interface ICompareFilterDeltasConstants\n  extends IConvolutionConstantsBase {\n  deltaWidth: number;\n  deltaHeight: number;\n  inputWidth: number;\n  inputHeight: number;\n  deltaZ: number;\n}\n\nexport function compareFilterDeltas(\n  this: IKernelFunctionThis<ICompareFilterDeltasConstants>,\n  filterDeltas: number[][][],\n  inputs: number[][][],\n  deltas: number[][][]\n): number {\n  const startDeltaX = Math.max(\n    0,\n    Math.ceil(\n      (this.constants.paddingX - this.thread.x) / this.constants.strideX\n    )\n  );\n  const startInputX =\n    startDeltaX * this.constants.strideX +\n    this.thread.x -\n    this.constants.paddingX;\n  const endDeltaX = Math.min(\n    this.constants.deltaWidth,\n    Math.floor(\n      (this.constants.inputWidth -\n        1 -\n        this.thread.x +\n        this.constants.paddingX) /\n        this.constants.strideX\n    ) + 1\n  );\n\n  const startDeltaY = Math.max(\n    0,\n    Math.ceil(\n      (this.constants.paddingY - this.thread.y) / this.constants.strideY\n    )\n  );\n  const startInputY =\n    startDeltaY * this.constants.strideY +\n    this.thread.y -\n    this.constants.paddingY;\n  const endDeltaY = Math.min(\n    this.constants.deltaHeight,\n    Math.floor(\n      (this.constants.inputHeight -\n        1 -\n        this.thread.y +\n        this.constants.paddingY) /\n        this.constants.strideY\n    ) + 1\n  );\n\n  let sum = filterDeltas[this.thread.z][this.thread.y][this.thread.x];\n  for (\n    let deltaY = startDeltaY, inputY = startInputY;\n    deltaY < endDeltaY;\n    deltaY++, inputY += this.constants.strideY\n  ) {\n    for (\n      let deltaX = startDeltaX, inputX = startInputX;\n      deltaX < endDeltaX;\n      deltaX++, inputX += this.constants.strideX\n    ) {\n      sum +=\n        inputs[this.thread.z][inputY][inputX] *\n        deltas[this.constants.deltaZ][deltaY][deltaX];\n    }\n  }\n  return sum;\n}\n\nexport interface ICompareInputDeltasConstants\n  extends IConvolutionConstantsBase {\n  deltaHeight: number;\n  deltaWidth: number;\n  deltaZ: number;\n}\n\nexport function compareInputDeltas(\n  this: IKernelFunctionThis<ICompareInputDeltasConstants>,\n  inputDeltas: number[][][],\n  filters: number[][][],\n  deltas: number[][][]\n): number {\n  const x = this.thread.x + this.constants.paddingX;\n  const startDeltaX =\n    x < this.constants.filterWidth\n      ? 0\n      : Math.floor(\n          (x - this.constants.filterWidth + this.constants.strideX) /\n            this.constants.strideX\n        );\n  const startFilterX = x - startDeltaX * this.constants.strideX;\n  const endDeltaX = Math.min(\n    startDeltaX + Math.floor(startFilterX / this.constants.strideX) + 1,\n    this.constants.deltaWidth\n  );\n\n  const y = this.thread.y + this.constants.paddingY;\n  const startDeltaY =\n    y < this.constants.filterHeight\n      ? 0\n      : Math.floor(\n          (y - this.constants.filterHeight + this.constants.strideY) /\n            this.constants.strideY\n        );\n  const startFilterY = y - startDeltaY * this.constants.strideY;\n  const endDeltaY = Math.min(\n    startDeltaY + Math.floor(startFilterY / this.constants.strideY) + 1,\n    this.constants.deltaHeight\n  );\n\n  let sum = inputDeltas[this.thread.z][this.thread.y][this.thread.x];\n  let deltaY = startDeltaY;\n  for (\n    let filterY = startFilterY;\n    deltaY < endDeltaY;\n    filterY -= this.constants.strideY, deltaY++\n  ) {\n    let deltaX = startDeltaX;\n    for (\n      let filterX = startFilterX;\n      deltaX < endDeltaX;\n      filterX -= this.constants.strideX, deltaX++\n    ) {\n      sum +=\n        filters[this.thread.z][filterY][filterX] *\n        deltas[this.constants.deltaZ][deltaY][deltaX];\n    }\n  }\n  return sum;\n}\n\nexport interface ICompareBiasesConstants extends IConstantsThis {\n  deltaHeight: number;\n  deltaWdith: number;\n}\n\nexport function compareBiases(\n  this: IKernelFunctionThis<ICompareBiasesConstants>,\n  biasDeltas: number[][][],\n  deltas: number[][][]\n): number {\n  let sum = 0;\n  for (let y = 0; y < this.constants.deltaHeight; y++) {\n    for (let x = 0; x < this.constants.deltaWidth; x++) {\n      sum += deltas[this.thread.z][y][x];\n    }\n  }\n  return biasDeltas[this.thread.z][this.thread.y][this.thread.x] + sum;\n}\n\nexport interface IConvolutionSettingsBase {\n  stride?: number;\n  strideX?: number;\n  strideY?: number;\n  padding?: number;\n  paddingX?: number;\n  paddingY?: number;\n  filterCount?: number;\n  filterWidth?: number;\n  filterHeight?: number;\n}\n\nexport interface IConvolutionSettings\n  extends ILayerSettings,\n    IConvolutionSettingsBase {\n  bias?: number;\n  biases?: KernelOutput;\n  biasDeltas?: KernelOutput;\n  filters?: KernelOutput;\n  filterDeltas?: KernelOutput;\n}\n\nexport const defaults: IConvolutionSettings = {\n  stride: 0,\n  padding: 0,\n  bias: 0.1,\n  filterCount: 1,\n  filterWidth: 0,\n  filterHeight: 0,\n};\n\nexport class Convolution extends Filter {\n  settings: Partial<IConvolutionSettings>;\n\n  get strideX(): number {\n    return this.settings.strideX as number;\n  }\n\n  get strideY(): number {\n    return this.settings.strideY as number;\n  }\n\n  get paddingX(): number {\n    return this.settings.paddingX as number;\n  }\n\n  get paddingY(): number {\n    return this.settings.paddingX as number;\n  }\n\n  get width(): number {\n    return Math.floor(\n      (this.inputLayer.width + this.paddingX * 2 - this.filterWidth) /\n        this.strideX +\n        1\n    );\n  }\n\n  get height(): number {\n    return Math.floor(\n      (this.inputLayer.height + this.paddingY * 2 - this.filterHeight) /\n        this.strideY +\n        1\n    );\n  }\n\n  get bias(): number {\n    return this.settings.bias as number;\n  }\n\n  get depth(): number {\n    return this.filterCount;\n  }\n\n  get biases(): KernelOutput {\n    return this.settings.biases;\n  }\n\n  set biases(biases: KernelOutput) {\n    this.settings.biases = biases;\n  }\n\n  get biasDeltas(): KernelOutput {\n    return this.settings.biasDeltas;\n  }\n\n  set biasDeltas(weights: KernelOutput) {\n    this.settings.biasDeltas = weights;\n  }\n\n  get filters(): KernelOutput {\n    return this.settings.filters;\n  }\n\n  set filters(filters: KernelOutput) {\n    this.settings.filters = filters;\n  }\n\n  get filterDeltas(): KernelOutput {\n    return this.settings.filterDeltas;\n  }\n\n  set filterDeltas(filterDeltas: KernelOutput) {\n    this.settings.filterDeltas = filterDeltas;\n  }\n\n  constructor(settings: IConvolutionSettings, inputLayer: ILayer) {\n    super(settings, inputLayer);\n    this.settings = {\n      ...defaults,\n      ...settings,\n      ...getPadding(settings, defaults),\n      ...getStride(settings, defaults),\n    };\n\n    this.weights =\n      settings.weights ?? randos3D(this.width, this.height, this.depth);\n    this.deltas = zeros3D(this.width, this.height, this.depth);\n\n    this.biases = values(this.depth, this.bias);\n    this.biasDeltas = settings.biasDeltas ?? randos(this.depth);\n\n    this.filters =\n      settings.filters ??\n      randos3D(this.filterWidth, this.filterHeight, this.filterCount);\n    this.filterDeltas = zeros3D(\n      this.filterWidth,\n      this.filterHeight,\n      this.filterCount\n    );\n    this.validate();\n  }\n\n  compareFilterDeltasKernel: IKernelRunShortcut | null = null;\n  compareInputDeltasKernel: IKernelRunShortcut | null = null;\n  compareBiasesKernel: IKernelRunShortcut | null = null;\n  setupKernels(): void {\n    this.predictKernel = makeKernel<\n      Parameters<typeof predict>,\n      IPredictConstants\n    >(predict, {\n      constants: {\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        inputDepth: this.inputLayer.depth,\n        strideX: this.strideX,\n        strideY: this.strideY,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterWidth: this.filterWidth,\n        filterHeight: this.filterHeight,\n      },\n      output: [this.width, this.height, this.depth],\n      immutable: true,\n    });\n\n    this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas, {\n      constants: {\n        deltasWidth: this.width,\n        deltasHeight: this.height,\n        deltasDepth: this.depth,\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        inputDepth: this.inputLayer.depth,\n        strideX: this.strideX,\n        strideY: this.strideY,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterWidth: this.filterWidth,\n        filterHeight: this.filterHeight,\n      },\n      output: [this.width, this.height, this.depth],\n      immutable: true,\n    });\n\n    this.compareInputDeltasKernel = makeKernel(compareInputDeltas, {\n      constants: {\n        filterCount: this.filterCount,\n      },\n      output: [\n        this.inputLayer.width,\n        this.inputLayer.height,\n        this.inputLayer.depth,\n      ],\n      immutable: true,\n    });\n\n    this.compareBiasesKernel = makeKernel(compareBiases, {\n      output: [1, 1, this.depth],\n      constants: {\n        deltaWidth: this.width,\n        deltaHeight: this.height,\n      },\n      immutable: true,\n    });\n  }\n\n  predict(): void {\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights,\n      this.filters,\n      this.biases\n    );\n  }\n\n  compare(): void {\n    const { filterDeltas, biasDeltas } = this;\n    this.filterDeltas = (this.compareFilterDeltasKernel as IKernelRunShortcut)(\n      filterDeltas,\n      this.inputLayer.weights,\n      this.deltas\n    );\n    release(filterDeltas);\n    this.biasDeltas = (this.compareBiasesKernel as IKernelRunShortcut)(\n      biasDeltas,\n      this.deltas\n    );\n    release(biasDeltas);\n    release(this.deltas);\n    this.deltas = (this.compareInputDeltasKernel as IKernelRunShortcut)(\n      this.filters,\n      this.inputLayer.deltas\n    );\n\n    release(this.inputLayer.deltas);\n    // TODO: do we need to clone here?\n    this.inputLayer.deltas = clone(this.deltas);\n  }\n\n  learn(learningRate: number): void {\n    // TODO: handle filters\n    // TODO: do we need to release here?\n    const { weights: oldWeights } = this;\n    this.weights = (this.praxis as IPraxis).run(this, learningRate);\n    release(oldWeights);\n  }\n}\n\nexport function convolution(\n  settings: IConvolutionSettings,\n  inputLayer: ILayer\n): Convolution {\n  return new Convolution(settings, inputLayer);\n}\n","import { Filter, IFilterSettings } from './filter';\nimport { makeKernel, makeKernelMap, release } from '../utilities/kernel';\nimport {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelMapRunShortcut,\n  IKernelRunShortcut,\n  ISubKernelObject,\n  KernelOutput,\n} from 'gpu.js';\nimport { ILayer, ILayerSettings, baseLayerDefaultSettings } from './base-layer';\n\nexport function setDropout(dropout: number): number {\n  return dropout;\n}\n\nexport interface IDropoutConstants extends IConstantsThis {\n  probability: number;\n}\n\nexport function trainingPredict(\n  this: IKernelFunctionThis<IDropoutConstants>,\n  inputs: number[][]\n): number {\n  if (setDropout(Math.random()) < this.constants.probability) {\n    return 0;\n  }\n  return inputs[this.thread.y][this.thread.x];\n}\n\nexport function predict(\n  this: IKernelFunctionThis<IDropoutConstants>,\n  inputs: number[][]\n): number {\n  return inputs[this.thread.y][this.thread.x] * this.constants.probability;\n}\n\nexport function compare(\n  this: IKernelFunctionThis,\n  dropouts: number[][],\n  deltas: number[][]\n): number {\n  if (dropouts[this.thread.y][this.thread.x] === 0) {\n    return 0;\n  }\n  return deltas[this.thread.y][this.thread.x];\n}\n\nexport interface IDropoutSettings extends ILayerSettings {\n  probability: number;\n}\n\nexport const dropoutDefaults: IDropoutSettings = {\n  ...baseLayerDefaultSettings,\n  probability: 0.5,\n};\n\nexport class Dropout extends Filter {\n  dropouts: KernelOutput | null;\n  predictKernelMap: IKernelMapRunShortcut<ISubKernelObject> | null = null;\n  settings: Partial<IDropoutSettings>;\n  constructor(\n    inputLayer: ILayer,\n    settings?: Partial<IDropoutSettings> & Partial<IFilterSettings>\n  ) {\n    super(settings as Partial<IFilterSettings>, inputLayer);\n    this.settings = { ...dropoutDefaults, ...settings };\n    this.dropouts = null;\n    this.validate();\n  }\n\n  setupKernels(isTraining?: boolean): void {\n    const output = [this.width, this.height];\n\n    if (isTraining) {\n      this.predictKernelMap = makeKernelMap<\n        Parameters<typeof trainingPredict>,\n        IDropoutConstants\n      >({ dropouts: setDropout }, trainingPredict, {\n        output,\n        immutable: true,\n      });\n      this.compareKernel = makeKernel(compare, { output, immutable: true });\n    } else {\n      this.predictKernelMap = makeKernelMap<\n        Parameters<typeof predict>,\n        IDropoutConstants\n      >({}, predict, { output, immutable: true });\n    }\n  }\n\n  predict(): void {\n    release(this.weights);\n    if (this.dropouts) {\n      release(this.dropouts);\n    }\n    const { result, dropouts } = (this\n      .predictKernelMap as IKernelMapRunShortcut<ISubKernelObject>)(\n      this.inputLayer.weights\n    );\n    this.weights = result;\n    this.dropouts = dropouts;\n  }\n\n  compare(): void {\n    release(this.deltas);\n    this.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.dropouts as KernelOutput,\n      this.inputLayer.deltas\n    );\n  }\n}\n\nexport function dropout(\n  inputLayer: ILayer,\n  settings?: Partial<IDropoutSettings>\n): Dropout {\n  return new Dropout(inputLayer, settings);\n}\n","import { random } from './random';\nimport { add } from './add';\nimport { multiply } from './multiply';\nimport { sigmoid } from './sigmoid';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function feedForward(settings: ILayerSettings, input: ILayer): ILayer {\n  const { height, praxisOpts = null } = settings;\n  const weights = random({\n    id: 'weights',\n    height,\n    width: input.height,\n    praxisOpts,\n  });\n  const biases = random({ id: 'biases', height, praxisOpts });\n  return sigmoid(\n    add(multiply(weights, input, { praxisOpts }), biases, { praxisOpts }),\n    { praxisOpts }\n  );\n}\n","import {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelRunShortcut,\n  KernelOutput,\n} from 'gpu.js';\nimport { Filter, IFilterSettings } from './filter';\nimport { makeKernel, release } from '../utilities/kernel';\nimport { values } from '../utilities/values';\nimport { randos2D, randos3D } from '../utilities/randos';\nimport { zeros } from '../utilities/zeros';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { zeros3D } from '../utilities/zeros-3d';\nimport { ILayer } from './base-layer';\n\nexport interface IPredictConstants extends IConstantsThis {\n  inputWidth: number;\n  inputHeight: number;\n}\n\nexport function predict(\n  this: IKernelFunctionThis<IPredictConstants>,\n  inputs: number[][],\n  filters: number[][],\n  biases: number[]\n): number {\n  let output = 0;\n  let i = 0;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      output += inputs[y][x] * filters[this.thread.x][i];\n      i++;\n    }\n  }\n  return output + biases[this.thread.x];\n}\n\nexport function predict3D(\n  this: IKernelFunctionThis<IPredictConstants>,\n  inputs: number[][][],\n  filters: number[][],\n  biases: number[]\n): number {\n  let output = 0;\n  let i = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        output += inputs[z][y][x] * filters[this.thread.x][i];\n        i++;\n      }\n    }\n  }\n  return output + biases[this.thread.x];\n}\n\nexport interface ICompareInputDeltasConstants extends IConstantsThis {\n  filterCount: number;\n}\n\nexport function compareInputDeltas(\n  this: IKernelFunctionThis<ICompareInputDeltasConstants>,\n  inputDeltas: number[][],\n  deltas: number[][],\n  filters: number[][]\n): number {\n  let sum = 0;\n  const filterX = this.thread.x + this.thread.y * this.output.x;\n  for (let filterY = 0; filterY < this.constants.filterCount; filterY++) {\n    sum += filters[filterY][filterX] * deltas[0][filterY];\n  }\n  return sum + inputDeltas[this.thread.y][this.thread.x];\n}\n\nexport function compareInputDeltas3D(\n  this: IKernelFunctionThis<ICompareInputDeltasConstants>,\n  inputDeltas: number[][][],\n  deltas: number[][],\n  filters: number[][]\n): number {\n  let sum = 0;\n  const filterX = this.thread.x + this.thread.y * this.output.x;\n  for (let filterY = 0; filterY < this.constants.filterCount; filterY++) {\n    sum += filters[filterY][filterX] * deltas[0][filterY];\n  }\n  return sum + inputDeltas[this.thread.z][this.thread.y][this.thread.x];\n}\n\nexport function compareBiases(\n  this: IKernelFunctionThis,\n  biases: number[],\n  deltas: number[][]\n): number {\n  return biases[this.thread.x] + deltas[this.thread.y][this.thread.x];\n}\n\nexport interface ICompareFiltersDeltas extends IConstantsThis {\n  deltaX: number;\n  deltaY: number;\n  inputWidth: number;\n  inputHeight: number;\n}\n\nexport function compareFilterDeltas(\n  this: IKernelFunctionThis<ICompareFiltersDeltas>,\n  filterDeltas: number[][],\n  inputWeights: number[][],\n  deltas: number[][]\n): number {\n  return (\n    filterDeltas[this.thread.y][this.thread.x] +\n    inputWeights[this.thread.y][this.thread.x] *\n      deltas[this.constants.deltaY][this.constants.deltaX]\n  );\n}\n\nexport function compareFilterDeltas3D(\n  this: IKernelFunctionThis<ICompareFiltersDeltas>,\n  filterDeltas: number[][],\n  inputWeights: number[][][],\n  deltas: number[][]\n): number {\n  const inputZ = Math.floor(\n    this.thread.x / (this.constants.inputWidth * this.constants.inputHeight)\n  );\n  const inputY = Math.floor(\n    (this.thread.x -\n      inputZ * this.constants.inputWidth * this.constants.inputHeight) /\n      this.constants.inputWidth\n  );\n  const inputX =\n    this.thread.x -\n    this.constants.inputWidth * (inputY + this.constants.inputHeight * inputZ);\n  return (\n    filterDeltas[this.thread.y][this.thread.x] +\n    inputWeights[inputZ][inputY][inputX] * deltas[0][this.thread.y]\n  );\n}\n\nexport interface IFullyConnectedDefaultSettings\n  extends Partial<IFilterSettings> {\n  bias?: number;\n  biases?: KernelOutput;\n  biasDeltas?: KernelOutput;\n}\n\nexport const defaults: IFullyConnectedDefaultSettings = {\n  bias: 0.1,\n};\n\nexport class FullyConnected extends Filter {\n  get bias(): number {\n    return this.settings.bias as number;\n  }\n\n  get biases(): KernelOutput {\n    return this.settings.biases;\n  }\n\n  set biases(biases: KernelOutput) {\n    this.settings.biases = biases;\n  }\n\n  get biasDeltas(): KernelOutput {\n    return this.settings.biases;\n  }\n\n  set biasDeltas(biasDeltas: KernelOutput) {\n    this.settings.biasDeltas = biasDeltas;\n  }\n\n  settings: Partial<IFullyConnectedDefaultSettings>;\n  compareFilterDeltasKernel: IKernelRunShortcut | null = null;\n  compareInputDeltasKernel: IKernelRunShortcut | null = null;\n  compareBiasesKernel: IKernelRunShortcut | null = null;\n  constructor(\n    settings: Partial<IFullyConnectedDefaultSettings>,\n    inputLayer: ILayer\n  ) {\n    super(settings, inputLayer);\n    this.settings = { ...settings };\n    this.validate();\n\n    const connectionCount =\n      inputLayer.width * inputLayer.height * inputLayer.depth;\n\n    this.biases = values(this.height, this.bias);\n    this.biasDeltas = zeros(this.height);\n\n    this.filters = randos2D(connectionCount, this.height);\n    this.filterDeltas = zeros2D(connectionCount, this.height);\n\n    if (this.depth > 0) {\n      this.weights = randos3D(this.width, this.height, this.depth);\n      this.deltas = zeros3D(this.width, this.height, this.depth);\n    } else if (this.height > 0) {\n      this.weights = randos2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n    }\n  }\n\n  validate(): void {\n    super.validate();\n    if (this.depth > 0) throw new Error('depth not supported');\n  }\n\n  setupKernels(): void {\n    const { inputLayer } = this;\n    const connectionCount =\n      inputLayer.width * inputLayer.height * inputLayer.depth;\n    if (inputLayer.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [this.width, this.height],\n        constants: {\n          inputHeight: inputLayer.height,\n          inputWidth: inputLayer.width,\n          inputDepth: inputLayer.depth,\n        },\n      });\n\n      this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas3D, {\n        output: [connectionCount, this.height],\n        constants: {\n          inputWidth: inputLayer.width,\n          inputHeight: inputLayer.height,\n        },\n        immutable: true,\n      });\n\n      this.compareInputDeltasKernel = makeKernel(compareInputDeltas3D, {\n        output: [inputLayer.width, inputLayer.height, inputLayer.depth],\n        constants: {\n          filterCount: this.height,\n        },\n        immutable: true,\n      });\n    } else {\n      this.predictKernel = makeKernel(predict, {\n        output: [this.width, this.height],\n        constants: {\n          inputHeight: inputLayer.height,\n          inputWidth: inputLayer.width,\n        },\n      });\n\n      this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas, {\n        output: [connectionCount, this.height],\n        constants: {\n          inputWidth: inputLayer.width,\n        },\n      });\n\n      this.compareInputDeltasKernel = makeKernel(compareInputDeltas, {\n        output: [inputLayer.width, inputLayer.height],\n        constants: {\n          filterCount: this.height,\n        },\n      });\n    }\n\n    this.compareBiasesKernel = makeKernel(compareBiases, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict(): void {\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights,\n      this.filters,\n      this.biases\n    );\n  }\n\n  compare(): void {\n    const inputLayerDeltas = this.inputLayer.deltas;\n    this.inputLayer.deltas = (this\n      .compareInputDeltasKernel as IKernelRunShortcut)(\n      inputLayerDeltas,\n      this.deltas,\n      this.filters\n    );\n    release(inputLayerDeltas);\n\n    const { biasDeltas, filterDeltas } = this;\n    // TODO: handle biasDeltas learn\n    this.biasDeltas = (this.compareBiasesKernel as IKernelRunShortcut)(\n      this.biases,\n      this.deltas\n    );\n\n    // TODO: handle filterDeltas learn\n    this.filterDeltas = (this.compareFilterDeltasKernel as IKernelRunShortcut)(\n      filterDeltas,\n      this.inputLayer.weights,\n      this.deltas\n    );\n    release(biasDeltas);\n    release(filterDeltas);\n  }\n}\n\nexport function fullyConnected(\n  settings: IFullyConnectedDefaultSettings,\n  inputLayer: ILayer\n): FullyConnected {\n  return new FullyConnected(settings, inputLayer);\n}\n","import { makeKernel } from '../utilities/kernel';\nimport { Modifier } from './types';\nimport { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function predict(\n  this: IKernelFunctionThis,\n  weights: number[][]\n): number {\n  return -weights[this.thread.y][this.thread.x];\n}\n\nexport class Negative extends Modifier {\n  constructor(inputLayer: ILayer, settings?: ILayerSettings) {\n    super(inputLayer, settings);\n    this.validate();\n  }\n\n  setupKernels(): void {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict(): void {\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n  }\n}\n\nexport function negative(\n  inputLayer: ILayer,\n  settings?: ILayerSettings\n): Negative {\n  return new Negative(inputLayer, settings);\n}\n","import { makeKernel, release } from '../utilities/kernel';\nimport { Operator } from './operator';\nimport { checkSameSize } from '../utilities/layer-size';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\n\nexport function predict(\n  this: IKernelFunctionThis,\n  inputLayerWeights1: number[][],\n  inputLayerWeights2: number[][]\n): number {\n  return (\n    inputLayerWeights1[this.thread.y][this.thread.x] *\n    inputLayerWeights2[this.thread.y][this.thread.x]\n  );\n}\n\nexport function compare(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  deltas: number[][]\n): number {\n  return (\n    weights[this.thread.y][this.thread.x] * deltas[this.thread.y][this.thread.x]\n  );\n}\n\nexport class MultiplyElement extends Operator {\n  get width(): number {\n    return this.inputLayer1.width;\n  }\n\n  get height(): number {\n    return this.inputLayer1.height;\n  }\n\n  get depth(): number {\n    return this.inputLayer1.depth;\n  }\n\n  validate(): void {\n    super.validate();\n    checkSameSize(this.inputLayer1, this.inputLayer2);\n  }\n\n  setupKernels(): void {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n      immutable: true,\n    });\n\n    this.compareKernel = makeKernel(compare, {\n      output: [this.width, this.height],\n      immutable: true,\n    });\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer1.weights,\n      this.inputLayer2.weights\n    );\n  }\n\n  compare(): void {\n    release(this.inputLayer1.deltas);\n    release(this.inputLayer2.deltas);\n    this.inputLayer1.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.inputLayer2.weights,\n      this.deltas\n    );\n    this.inputLayer2.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.inputLayer1.weights,\n      this.deltas\n    );\n  }\n}\n\nexport function multiplyElement(\n  inputLayer1: ILayer,\n  inputLayer2: ILayer,\n  settings?: ILayerSettings\n): MultiplyElement {\n  return new MultiplyElement(inputLayer1, inputLayer2, settings);\n}\n","export function ones(size: number): Float32Array {\n  return new Float32Array(size).fill(1);\n}\n\nexport function ones2D(width: number, height: number): Float32Array[] {\n  const result = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = ones(width);\n  }\n  return result;\n}\n","import { ILayerSettings } from './base-layer';\n\nimport { ones2D } from '../utilities/ones';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { Model } from './types';\n\nexport class Ones extends Model {\n  constructor(settings: ILayerSettings) {\n    super(settings);\n    this.validate();\n    this.weights = ones2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n}\n\nexport function ones(settings: ILayerSettings): Ones {\n  return new Ones(settings);\n}\n","import { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\n\nimport { Activation } from './activation';\nimport { activate, measure } from '../activation/tanh';\nimport { release, makeKernel } from '../utilities/kernel';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function predict2D(\n  this: IKernelFunctionThis,\n  inputs: number[][]\n): number {\n  return activate(inputs[this.thread.y][this.thread.x]);\n}\n\nexport function predict3D(\n  this: IKernelFunctionThis,\n  inputs: number[][][]\n): number {\n  return activate(inputs[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nexport function compare2D(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  errors: number[][]\n): number {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    errors[this.thread.y][this.thread.x]\n  );\n}\n\nexport function compare3D(\n  this: IKernelFunctionThis,\n  weights: number[][][],\n  errors: number[][][]\n): number {\n  return measure(\n    weights[this.thread.z][this.thread.y][this.thread.x],\n    errors[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nexport class Tanh extends Activation {\n  setupKernels(): void {\n    if (this.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [measure],\n        immutable: true,\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [this.width, this.height],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [this.width, this.height],\n        functions: [measure],\n        immutable: true,\n      });\n    }\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n  }\n\n  compare(): void {\n    release(this.inputLayer.deltas);\n    this.inputLayer.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.weights,\n      this.deltas\n    );\n  }\n}\n\nexport function tanh(inputLayer: ILayer, settings?: ILayerSettings): Tanh {\n  return new Tanh(inputLayer, settings);\n}\n","import { zeros2D } from '../utilities/zeros-2d';\nimport { Model } from './types';\nimport { ILayerSettings } from './base-layer';\n\nexport class Zeros extends Model {\n  constructor(settings: ILayerSettings) {\n    super(settings);\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  predict(): void {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare(): void {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  // learn(): void {}\n}\n\nexport function zeros(settings: ILayerSettings): Zeros {\n  return new Zeros(settings);\n}\n","import { add } from './add';\nimport { negative } from './negative';\nimport { multiply } from './multiply';\nimport { multiplyElement } from './multiply-element';\nimport { ones } from './ones';\nimport { sigmoid } from './sigmoid';\nimport { random } from './random';\nimport { tanh } from './tanh';\nimport { zeros } from './zeros';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { RecurrentInput } from './recurrent-input';\n\nexport function gru(\n  settings: ILayerSettings,\n  recurrentInput: RecurrentInput,\n  input: ILayer\n): ILayer {\n  const { height } = settings;\n  const updateGateWeights = random({ height, width: input.height });\n  const updateGatePeepholes = random({ width: height, height });\n  const updateGateBias = zeros({ height });\n  const updateGate = sigmoid(\n    add(\n      add(\n        multiply(updateGateWeights, input),\n        multiply(updateGatePeepholes, recurrentInput)\n      ),\n      updateGateBias\n    )\n  );\n\n  const resetGateWeights = random({ height, width: input.height });\n  const resetGatePeepholes = random({ width: height, height });\n  const resetGateBias = zeros({ height });\n  const resetGate = sigmoid(\n    add(\n      add(\n        multiply(resetGateWeights, input),\n        multiply(resetGatePeepholes, recurrentInput)\n      ),\n      resetGateBias\n    )\n  );\n\n  const cellWeights = random({ height, width: input.height });\n  const cellPeepholes = random({ width: height, height });\n  const cellBias = zeros({ height });\n  const cell = tanh(\n    add(\n      add(\n        multiply(cellWeights, input),\n        multiply(cellPeepholes, multiplyElement(resetGate, recurrentInput))\n      ),\n      cellBias\n    )\n  );\n\n  // compute hidden state as gated, saturated cell activations\n  // negate updateGate\n  return add(\n    multiplyElement(\n      add(\n        ones({ width: updateGate.width, height: updateGate.height }),\n        negative(updateGate)\n      ),\n      cell\n    ),\n    multiplyElement(recurrentInput, updateGate)\n  );\n}\n","import { IKernelFunctionThis, IKernelRunShortcut, KernelOutput } from 'gpu.js';\nimport { EntryPoint } from './types';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { makeKernel, release, kernelInput, clone } from '../utilities/kernel';\n\nexport const defaults: ILayerSettings = {\n  weights: null,\n};\n\nexport class Input extends EntryPoint {\n  reshapeInput: IKernelRunShortcut | null = null;\n  constructor(settings: ILayerSettings) {\n    super({ ...defaults, ...settings });\n    this.validate();\n    this.reshapeInput = null;\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  setupKernels(): void {\n    if (this.width === 1) {\n      this.predict = this.predict1D;\n      this.reshapeInput = makeKernel(\n        function (this: IKernelFunctionThis, value: number[]) {\n          return value[this.thread.y];\n        },\n        {\n          output: [1, this.height],\n          immutable: true,\n        }\n      );\n    }\n  }\n\n  reuseKernels(layer: ILayer): void {\n    // super.reuseKernels(layer);\n    this.reshapeInput = (layer as Input).reshapeInput;\n  }\n\n  predict(inputs: KernelOutput): void {\n    if (\n      (Array.isArray(inputs) || inputs instanceof Float32Array) &&\n      typeof inputs[0] === 'number' &&\n      inputs.length === this.height * this.width\n    ) {\n      release(this.weights);\n      this.weights = kernelInput(inputs as number[], [this.width, this.height]);\n    } else if (\n      Array.isArray(inputs) &&\n      inputs.length === this.height &&\n      (Array.isArray(inputs[0]) || inputs[0] instanceof Float32Array) &&\n      inputs[0].length === this.width\n    ) {\n      this.weights = clone(inputs);\n    } else {\n      throw new Error('Inputs are not of sized correctly');\n    }\n  }\n\n  predict1D(inputs: KernelOutput): void {\n    if (this.weights) release(this.weights);\n    if (this.reshapeInput) {\n      this.weights = this.reshapeInput(inputs);\n    } else {\n      this.weights = inputs;\n    }\n  }\n\n  compare(): void {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(): void {}\n}\n\nexport function input(settings: ILayerSettings): Input {\n  return new Input(settings);\n}\n","import { Activation } from './types';\nimport { makeKernel, release } from '../utilities/kernel';\nimport { activate, measure } from '../activation/leaky-relu';\nimport { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function predict2D(\n  this: IKernelFunctionThis,\n  inputs: number[][]\n): number {\n  return activate(inputs[this.thread.y][this.thread.x]);\n}\n\nexport function predict3D(\n  this: IKernelFunctionThis,\n  inputs: number[][][]\n): number {\n  return activate(inputs[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nexport function compare2D(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  deltas: number[][]\n): number {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    deltas[this.thread.y][this.thread.x]\n  );\n}\n\nexport function compare3D(\n  this: IKernelFunctionThis,\n  weights: number[][][],\n  deltas: number[][][]\n): number {\n  return measure(\n    weights[this.thread.z][this.thread.y][this.thread.x],\n    deltas[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nexport class LeakyRelu extends Activation {\n  setupKernels(): void {\n    const { width, height, depth } = this.inputLayer;\n    if (this.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n        functions: [measure],\n        immutable: true,\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [width, height],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [width, height],\n        functions: [measure],\n        immutable: true,\n      });\n    }\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n  }\n\n  compare(): void {\n    const { deltas } = this;\n    this.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.weights,\n      deltas\n    );\n    release(deltas);\n  }\n}\n\nexport function leakyRelu(\n  inputLayer: ILayer,\n  settings: ILayerSettings\n): LeakyRelu {\n  return new LeakyRelu(inputLayer, settings);\n}\n","import { add } from './add';\nimport { multiply } from './multiply';\nimport { multiplyElement } from './multiply-element';\nimport { random } from './random';\nimport { sigmoid } from './sigmoid';\nimport { tanh } from './tanh';\nimport { zeros } from './zeros';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { IRecurrentInput } from './recurrent-input';\n\nexport function lstmCell(\n  settings: ILayerSettings,\n  input: ILayer,\n  recurrentInput: IRecurrentInput\n): ILayer {\n  const { height } = settings;\n\n  if (typeof height !== 'number') {\n    throw new Error('no settings.height given');\n  }\n  if (recurrentInput.setDimensions) {\n    recurrentInput.setDimensions(1, height);\n  }\n\n  const inputGateWeights = random({\n    width: input.height,\n    height,\n    std: 0.08,\n    id: 'inputGateWeights',\n  });\n  const inputGatePeepholes = random({\n    width: height,\n    height,\n    std: 0.08,\n    id: 'inputGatePeepholes',\n  });\n  const inputGateBias = zeros({ width: 1, height, id: 'inputGateBias' });\n  const inputGate = sigmoid(\n    add(\n      add(\n        multiply(inputGateWeights, input),\n        multiply(inputGatePeepholes, recurrentInput)\n      ),\n      inputGateBias\n    ),\n    { id: 'inputGate' }\n  );\n\n  const forgetGateWeights = random({\n    width: input.height,\n    height,\n    std: 0.08,\n    id: 'forgetGateWeights',\n  });\n  const forgetGatePeepholes = random({\n    width: height,\n    height,\n    std: 0.08,\n    id: 'forgetGatePeepholes',\n  });\n  const forgetGateBias = zeros({ width: 1, height, id: 'forgetGateBias' });\n  const forgetGate = sigmoid(\n    add(\n      add(\n        multiply(forgetGateWeights, input),\n        multiply(forgetGatePeepholes, recurrentInput)\n      ),\n      forgetGateBias\n    ),\n    { id: 'forgetGate' }\n  );\n\n  const outputGateWeights = random({\n    width: input.height,\n    height,\n    std: 0.08,\n    id: 'outputGateWeights',\n  });\n  const outputGatePeepholes = random({\n    width: height,\n    height,\n    std: 0.08,\n    id: 'outputGatePeepholes',\n  });\n  const outputGateBias = zeros({ width: 1, height, id: 'outputGateBias' });\n  const outputGate = sigmoid(\n    add(\n      add(\n        multiply(outputGateWeights, input),\n        multiply(outputGatePeepholes, recurrentInput)\n      ),\n      outputGateBias\n    ),\n    { id: 'outputGate' }\n  );\n\n  const memoryWeights = random({\n    width: input.height,\n    height,\n    std: 0.08,\n    id: 'memoryWeights',\n  });\n  const memoryPeepholes = random({\n    width: height,\n    height,\n    std: 0.08,\n    id: 'memoryPeepholes',\n  });\n  const memoryBias = zeros({ width: 1, height, id: 'memoryBias' });\n  const memory = tanh(\n    add(\n      add(\n        multiply(memoryWeights, input),\n        multiply(memoryPeepholes, recurrentInput)\n      ),\n      memoryBias\n    ),\n    { id: 'memory' }\n  );\n\n  // compute new cell activation\n  const retainCell = multiplyElement(forgetGate, recurrentInput, {\n    id: 'retainCell',\n  }); // what do we keep from cell\n  const writeCell = multiplyElement(inputGate, memory, { id: 'writeCell' }); // what do we write to cell\n  const cell = add(retainCell, writeCell, { id: 'cell' }); // new cell contents\n\n  // compute hidden state as gated, saturated cell activations\n  return multiplyElement(outputGate, tanh(cell), { id: 'activations' });\n}\n","import { add } from './add';\nimport { multiply } from './multiply';\nimport { random } from './random';\nimport { target } from './target';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function output(settings: ILayerSettings, inputLayer: ILayer): ILayer {\n  const { height } = settings;\n  const outputGate = random({\n    height,\n    width: inputLayer.height,\n    id: 'outputGate',\n    std: 0.08,\n  });\n  const output = random({ height, id: 'output', std: 0.08 });\n  const outputGateConnector = multiply(outputGate, inputLayer, {\n    id: 'outputGateConnected',\n  });\n  return target(\n    { id: 'target', ...settings },\n    add(outputGateConnector, output)\n  );\n}\n","import { Filter } from './filter';\nimport { makeKernel, makeKernelMap, release } from '../utilities/kernel';\nimport { getPadding, getStride } from '../utilities/layer-setup';\nimport { zeros3D } from '../utilities/zeros-3d';\nimport { randos3D } from '../utilities/randos';\nimport {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelMapRunShortcut,\n  IKernelRunShortcut,\n  ISubKernelObject,\n  KernelOutput,\n} from 'gpu.js';\nimport {\n  IConvolutionSettingsBase,\n  IConvolutionConstantsBase,\n} from './convolution';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function setSwitchY(value: number): number {\n  return value;\n}\n\nexport function setSwitchX(value: number): number {\n  return value;\n}\n\nexport interface IPredictConstants extends IConvolutionConstantsBase {\n  inputWidth: number;\n  inputHeight: number;\n}\n\nexport function predict(\n  this: IKernelFunctionThis<IPredictConstants>,\n  inputs: number[][][]\n): number {\n  const startFilterX =\n    this.constants.paddingX - this.thread.x * this.constants.strideX;\n  const startInputX =\n    this.thread.x * this.constants.strideX - this.constants.paddingX;\n  const endFilterX = Math.min(\n    this.constants.filterWidth,\n    startFilterX + this.constants.inputWidth\n  );\n\n  const startFilterY =\n    this.constants.paddingY - this.thread.y * this.constants.strideY;\n  const startInputY =\n    this.thread.y * this.constants.strideY - this.constants.paddingY;\n  const endFilterY = Math.min(\n    this.constants.filterHeight,\n    startFilterY + this.constants.inputHeight\n  );\n\n  let largestValue = -99999;\n  let largestX = -1;\n  let largestY = -1;\n\n  // convolve centered at this particular location\n  for (\n    let filterY = Math.max(0, startFilterY), inputY = Math.max(0, startInputY);\n    filterY < endFilterY;\n    filterY++, inputY++\n  ) {\n    for (\n      let filterX = Math.max(0, startFilterX),\n        inputX = Math.max(0, startInputX);\n      filterX < endFilterX;\n      filterX++, inputX++\n    ) {\n      if (\n        inputY >= 0 &&\n        inputY < this.constants.inputHeight &&\n        inputX >= 0 &&\n        inputX < this.constants.inputWidth\n      ) {\n        const input = inputs[this.thread.z][inputY][inputX];\n        if (input > largestValue) {\n          largestValue = input;\n          largestY = inputY;\n          largestX = inputX;\n        }\n      }\n    }\n  }\n  setSwitchY(largestY);\n  setSwitchX(largestX);\n  return largestValue;\n}\n\nexport interface ICompareConstants extends IConstantsThis {\n  inputWidth: number;\n  inputHeight: number;\n\n  outputWidth: number;\n  outputHeight: number;\n}\n\nexport function compare(\n  this: IKernelFunctionThis<ICompareConstants>,\n  deltas: number[][],\n  switchY: number[][],\n  switchX: number[][]\n): number {\n  const x = Math.floor(\n    (this.thread.x / this.output.x) * this.constants.outputWidth\n  );\n  const y = Math.floor(\n    (this.thread.y / this.output.y) * this.constants.outputHeight\n  );\n\n  let value = 0;\n\n  for (let deltasY = 0; deltasY < this.constants.inputHeight; deltasY++) {\n    for (let deltasX = 0; deltasX < this.constants.inputWidth; deltasX++) {\n      const switchXValue = switchX[deltasY][deltasX];\n      const switchYValue = switchY[deltasY][deltasX];\n      if (switchXValue === x && switchYValue === y) {\n        value += deltas[deltasY][deltasX];\n      }\n    }\n  }\n\n  return value;\n}\n\nexport function compare3D(\n  this: IKernelFunctionThis<ICompareConstants>,\n  deltas: number[][][],\n  switchY: number[][][],\n  switchX: number[][][]\n): number {\n  const x = Math.floor(\n    (this.thread.x / this.output.x) * this.constants.outputWidth\n  );\n  const y = Math.floor(\n    (this.thread.y / this.output.y) * this.constants.outputHeight\n  );\n\n  let value = 0;\n\n  for (let deltasY = 0; deltasY < this.constants.inputHeight; deltasY++) {\n    for (let deltasX = 0; deltasX < this.constants.inputWidth; deltasX++) {\n      const switchXValue = switchX[this.thread.z][deltasY][deltasX];\n      const switchYValue = switchY[this.thread.z][deltasY][deltasX];\n      if (switchXValue === x && switchYValue === y) {\n        value += deltas[this.thread.z][deltasY][deltasX];\n      }\n    }\n  }\n\n  return value;\n}\n\nexport interface IPoolSettings\n  extends ILayerSettings,\n    IConvolutionSettingsBase {\n  switchX?: KernelOutput;\n  switchY?: KernelOutput;\n}\n\nexport const defaults: IPoolSettings = {\n  padding: 0,\n  stride: 0,\n  filterWidth: 0,\n  filterHeight: 0,\n  filterCount: 0,\n};\n\nexport class Pool extends Filter {\n  settings: Partial<IPoolSettings>;\n\n  get strideX(): number {\n    return this.settings.strideX as number;\n  }\n\n  get strideY(): number {\n    return this.settings.strideY as number;\n  }\n\n  get paddingX(): number {\n    return this.settings.paddingX as number;\n  }\n\n  get paddingY(): number {\n    return this.settings.paddingY as number;\n  }\n\n  get width(): number {\n    return Math.floor(\n      (this.inputLayer.width + this.paddingX * 2 - this.filterWidth) /\n        this.strideX +\n        1\n    );\n  }\n\n  get height(): number {\n    return Math.floor(\n      (this.inputLayer.height + this.paddingY * 2 - this.filterHeight) /\n        this.strideY +\n        1\n    );\n  }\n\n  get depth(): number {\n    return this.settings.filterCount as number;\n  }\n\n  get filterCount(): number {\n    // TODO: handle 1 depth?\n    return this.settings.filterCount as number;\n  }\n\n  get switchX(): KernelOutput {\n    return this.settings.switchX;\n  }\n\n  set switchX(switchX: KernelOutput) {\n    this.settings.switchX = switchX;\n  }\n\n  get switchY(): KernelOutput {\n    return this.settings.switchY;\n  }\n\n  set switchY(switchY: KernelOutput) {\n    this.settings.switchY = switchY;\n  }\n\n  predictKernelMap: IKernelMapRunShortcut<ISubKernelObject> | null = null;\n  constructor(settings: IPoolSettings, inputLayer: ILayer) {\n    super(settings, inputLayer);\n    this.settings = {\n      ...settings,\n      ...getStride(settings, defaults),\n      ...getPadding(settings, defaults),\n    };\n\n    this.weights = randos3D(this.width, this.height, this.depth);\n    this.deltas = zeros3D(this.width, this.height, this.depth);\n\n    this.filters = randos3D(\n      this.filterWidth,\n      this.filterHeight,\n      this.filterCount\n    );\n    this.filterDeltas = zeros3D(\n      this.filterWidth,\n      this.filterHeight,\n      this.filterCount\n    );\n    this.validate();\n  }\n\n  setupKernels(): void {\n    this.predictKernelMap = makeKernelMap<\n      Parameters<typeof predict>,\n      IPredictConstants\n    >(\n      {\n        switchX: setSwitchX,\n        switchY: setSwitchY,\n      },\n      predict,\n      {\n        output: [this.width, this.height, this.depth],\n        constants: {\n          inputWidth: this.inputLayer.width,\n          inputHeight: this.inputLayer.height,\n          paddingX: this.paddingX,\n          paddingY: this.paddingY,\n          filterHeight: this.filterHeight,\n          filterWidth: this.filterWidth,\n        },\n      }\n    );\n\n    this.compareKernel = makeKernel(compare, {\n      output: [\n        this.inputLayer.width,\n        this.inputLayer.height,\n        this.inputLayer.depth,\n      ],\n      constants: {\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n\n        outputWidth: this.width,\n        outputHeight: this.height,\n      },\n    });\n  }\n\n  predict(): void {\n    const { result: weights, switchX, switchY } = (this\n      .predictKernelMap as IKernelMapRunShortcut<ISubKernelObject>)(\n      this.inputLayer.weights\n    );\n    this.switchX = switchX;\n    this.switchY = switchY;\n    this.weights = weights;\n  }\n\n  compare(): void {\n    // debugger;\n    // const depth = this.inputLayer.deltas.length;\n    // const height = this.inputLayer.deltas[0].length;\n    // const width = this.inputLayer.deltas[0][0].length;\n    // const type = typeof this.inputLayer.deltas[0][0][0];\n    const inputLayerDeltas = this.inputLayer.deltas;\n    this.inputLayer.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.deltas,\n      this.switchX,\n      this.switchY\n    );\n    release(inputLayerDeltas);\n    // debugger;\n    // if (depth !== this.inputLayer.deltas.length) debugger;\n    // if (height !== this.inputLayer.deltas[0].length) debugger;\n    // if (width !== this.inputLayer.deltas[0][0].length) debugger;\n    // if (type !== typeof this.inputLayer.deltas[0][0][0]) debugger;\n  }\n}\n\nexport function pool(settings: IPoolSettings, inputLayer: ILayer): Pool {\n  return new Pool(settings, inputLayer);\n}\n","import { KernelOutput } from 'gpu.js';\nimport { IPraxis } from '../praxis/base-praxis';\nimport { release } from '../utilities/kernel';\nimport { BaseLayer, ILayer } from './base-layer';\nimport { Internal } from './internal';\n\nexport interface IRecurrentInput extends ILayer {\n  setDimensions?: (width: number, height: number) => void;\n}\n\nexport class RecurrentInput extends Internal implements IRecurrentInput {\n  recurrentInput: ILayer;\n  praxis: IPraxis | null = null;\n  predictKernel = null;\n  compareKernel = null;\n  settings = {};\n  constructor(recurrentInput: ILayer) {\n    super();\n    this.recurrentInput = recurrentInput;\n    this.validate();\n  }\n\n  get width(): number {\n    return this.recurrentInput.width;\n  }\n\n  get height(): number {\n    return this.recurrentInput.height;\n  }\n\n  get depth(): number {\n    return this.recurrentInput.depth;\n  }\n\n  get deltas(): KernelOutput {\n    return this.recurrentInput.deltas;\n  }\n\n  set deltas(deltas: KernelOutput) {\n    const recurrentInputDeltas = this.recurrentInput.deltas;\n    this.recurrentInput.deltas = deltas;\n    release(recurrentInputDeltas);\n  }\n\n  get weights(): KernelOutput {\n    return this.recurrentInput.weights as KernelOutput;\n  }\n\n  set weights(weights: KernelOutput) {\n    const recurrentInputWeights = this.recurrentInput.weights;\n    this.recurrentInput.weights = weights;\n    release(recurrentInputWeights);\n  }\n\n  validate(): void {\n    BaseLayer.prototype.validate.call(this);\n    if (this.width !== this.recurrentInput.width) {\n      throw new Error(\n        `${this.constructor.name} layer width ${this.width} and ${this.recurrentInput.constructor.name} width (${this.recurrentInput.width}) are not same`\n      );\n    }\n\n    if (this.height !== this.recurrentInput.height) {\n      throw new Error(\n        `${this.constructor.name} layer height ${this.height} and ${this.recurrentInput.constructor.name} width (${this.recurrentInput.height}) are not same`\n      );\n    }\n  }\n\n  setDimensions(width: number, height: number): void {\n    this.recurrentInput.width = width;\n    this.recurrentInput.height = height;\n  }\n\n  predict(): void {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare(): void {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(): void {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n\n  setupKernels(): void {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels(): void {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n}\n","import { IPraxis } from '../praxis/base-praxis';\nimport { release } from '../utilities/kernel';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { ILayerSettings } from './base-layer';\nimport { Internal } from './internal';\nimport { IRecurrentInput } from './recurrent-input';\n\nexport class RecurrentZeros extends Internal implements IRecurrentInput {\n  praxis: IPraxis | null = null;\n  settings: Partial<ILayerSettings> = {};\n  predictKernel = null;\n  compareKernel = null;\n\n  constructor(settings?: Partial<ILayerSettings>) {\n    super();\n    if (settings) {\n      this.settings = { ...settings };\n    }\n  }\n\n  setDimensions(width: number, height: number): void {\n    this.praxis = null;\n    this.settings = {\n      ...this.settings,\n      width,\n      height,\n      weights: zeros2D(width, height),\n      deltas: zeros2D(width, height),\n    };\n  }\n\n  setupKernels(): void {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels(): void {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n\n  predict(): void {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare(): void {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(learningRate: number): void {\n    const { weights: oldWeights } = this;\n    this.weights = (this.praxis as IPraxis).run(this, learningRate);\n    // this.deltas = deltas;\n    release(oldWeights);\n  }\n\n  // validate(): void {\n  //   throw new Error(`${this.constructor.name}-validate is not yet implemented`);\n  // }\n\n  // reset(): void {\n  //   throw new Error(`${this.constructor.name}-reset is not yet implemented`);\n  // }\n}\n\nexport function recurrentZeros(): RecurrentZeros {\n  return new RecurrentZeros();\n}\n","import { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\n\nimport { Activation } from './types';\nimport { makeKernel, release } from '../utilities/kernel';\nimport { activate, measure } from '../activation/relu';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function predict2D(\n  this: IKernelFunctionThis,\n  inputs: number[][]\n): number {\n  return activate(inputs[this.thread.y][this.thread.x]);\n}\n\nexport function compare2D(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  deltas: number[][]\n): number {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    deltas[this.thread.y][this.thread.x]\n  );\n}\n\nexport function predict3D(\n  this: IKernelFunctionThis,\n  inputs: number[][][]\n): number {\n  return activate(inputs[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nexport function compare3D(\n  this: IKernelFunctionThis,\n  weights: number[][][],\n  deltas: number[][][]\n): number {\n  return measure(\n    weights[this.thread.z][this.thread.y][this.thread.x],\n    deltas[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nexport class Relu extends Activation {\n  setupKernels(): void {\n    const { width, height, depth } = this.inputLayer;\n    if (depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n        functions: [measure],\n        immutable: true,\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [width, height],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [width, height],\n        functions: [measure],\n        immutable: true,\n      });\n    }\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n  }\n\n  compare(): void {\n    release(this.inputLayer.deltas);\n    this.inputLayer.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.weights,\n      this.deltas\n    );\n  }\n}\n\nexport function relu(inputLayer: ILayer, settings?: ILayerSettings): Relu {\n  return new Relu(inputLayer, settings);\n}\n","import { add } from './add';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { multiply } from './multiply';\nimport { random } from './random';\nimport { relu } from './relu';\nimport { zeros } from './zeros';\nimport { IRecurrentInput } from './recurrent-input';\n\nexport function rnnCell(\n  settings: ILayerSettings,\n  input: ILayer,\n  recurrentInput: IRecurrentInput\n): ILayer {\n  const { height } = settings;\n\n  if (typeof height !== 'number') throw new Error('height not set');\n  if (recurrentInput.setDimensions) {\n    recurrentInput.setDimensions(1, height);\n  }\n\n  // wxh\n  const weight = random({\n    id: 'weight',\n    height,\n    width: input.height,\n    std: 0.08,\n  });\n  // whh\n  const transition = random({\n    id: 'transition',\n    height,\n    width: height,\n    std: 0.08,\n  });\n  // bhh\n  const bias = zeros({ id: 'bias', height });\n\n  return relu(\n    add(\n      add(multiply(weight, input), multiply(transition, recurrentInput)),\n      bias\n    )\n  );\n}\n","import { IKernelFunctionThis, KernelOutput } from 'gpu.js';\n\nimport { BaseLayer, ILayer, ILayerSettings } from './base-layer';\nimport { clone, release } from '../utilities/kernel';\n\nexport class Regression extends BaseLayer {\n  inputLayer: ILayer;\n  constructor(settings: ILayerSettings, inputLayer: ILayer) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.validate();\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = clone(this.inputLayer.weights as KernelOutput);\n  }\n\n  learn(): void {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n}\n\n// TODO: Connect up\nexport function learn(\n  this: IKernelFunctionThis,\n  inputs: number[],\n  targets: number[]\n): number {\n  return inputs[this.thread.x] - targets[this.thread.x];\n}\n\n// TODO: handle `loss += 0.5*dy*dy;` total and sum in learn\nexport function regression(\n  settings: ILayerSettings,\n  inputLayer: ILayer\n): Regression {\n  return new Regression(settings, inputLayer);\n}\n","import {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelRunShortcut,\n  KernelOutput,\n  Texture,\n} from 'gpu.js';\n\nimport { makeKernel, release, clone } from '../utilities/kernel';\nimport { randos, randos2D, randos3D } from '../utilities/randos';\nimport { zeros } from '../utilities/zeros';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { zeros3D } from '../utilities/zeros-3d';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { Modifier } from './modifier';\n\ninterface ISoftMaxConstants extends IConstantsThis {\n  inputWidth: number;\n}\n\nexport function getMaxValue(\n  this: IKernelFunctionThis<ISoftMaxConstants>,\n  inputs: number[]\n): number {\n  let maxInput = -Infinity;\n  for (let x = 0; x < this.constants.inputWidth; x++) {\n    const input = inputs[x];\n    if (input > maxInput) {\n      maxInput = input;\n    }\n  }\n  return maxInput;\n}\n\nexport function getMaxValue2D(\n  this: IKernelFunctionThis<ISoftMaxConstants>,\n  inputs: number[][]\n): number {\n  let maxInput = -Infinity;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      const input = inputs[y][x];\n      if (input > maxInput) {\n        maxInput = input;\n      }\n    }\n  }\n  return maxInput;\n}\n\nexport function getMaxValue3D(\n  this: IKernelFunctionThis<ISoftMaxConstants>,\n  inputs: number[][][]\n): number {\n  let maxInput = -Infinity;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        const input = inputs[z][y][x];\n        if (input > maxInput) {\n          maxInput = input;\n        }\n      }\n    }\n  }\n  return maxInput;\n}\n\nexport function getSum(\n  this: IKernelFunctionThis<ISoftMaxConstants>,\n  inputs: number[]\n): number {\n  let sum = 0;\n  for (let x = 0; x < this.constants.inputWidth; x++) {\n    sum += inputs[x];\n  }\n  return sum;\n}\n\nexport function getSum2D(\n  this: IKernelFunctionThis<ISoftMaxConstants>,\n  inputs: number[][]\n): number {\n  let sum = 0;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      sum += inputs[y][x];\n    }\n  }\n  return sum;\n}\n\nexport function getSum3D(\n  this: IKernelFunctionThis<ISoftMaxConstants>,\n  inputs: number[][][]\n): number {\n  let sum = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        sum += inputs[z][y][x];\n      }\n    }\n  }\n  return sum;\n}\n\nexport function getExponentials(\n  this: IKernelFunctionThis,\n  inputs: number[],\n  maxInput: number[]\n): number {\n  return Math.exp(inputs[this.thread.x] - maxInput[0]);\n}\n\nexport function getExponentials2D(\n  this: IKernelFunctionThis,\n  inputs: number[][],\n  maxInput: number[]\n): number {\n  return Math.exp(inputs[this.thread.y][this.thread.x] - maxInput[0]);\n}\n\nexport function getExponentials3D(\n  this: IKernelFunctionThis,\n  inputs: number[][][],\n  maxInput: number[]\n): number {\n  return Math.exp(\n    inputs[this.thread.z][this.thread.y][this.thread.x] - maxInput[0]\n  );\n}\n\nexport function predict(\n  this: IKernelFunctionThis,\n  exponentials: number[],\n  exponentialsSum: number[]\n): number {\n  return exponentials[this.thread.x] / exponentialsSum[0];\n}\n\nexport function predict2D(\n  this: IKernelFunctionThis,\n  exponentials: number[][],\n  exponentialsSum: number[]\n): number {\n  return exponentials[this.thread.y][this.thread.x] / exponentialsSum[0];\n}\n\nexport function predict3D(\n  this: IKernelFunctionThis,\n  exponentials: number[][][],\n  exponentialsSum: number[]\n): number {\n  return (\n    exponentials[this.thread.z][this.thread.y][this.thread.x] /\n    exponentialsSum[0]\n  );\n}\n\nexport function compare(\n  this: IKernelFunctionThis,\n  target: number,\n  exponentials: number[]\n): number {\n  let indicator = 0;\n  if (this.thread.x === target) {\n    indicator = 1;\n  }\n  return -(indicator - exponentials[this.thread.x]);\n}\n\nexport function compare2D(\n  this: IKernelFunctionThis,\n  target: number,\n  exponentials: number[][]\n): number {\n  let indicator = 0;\n  const index = this.thread.x + this.thread.y * this.output.x;\n  if (index === target) {\n    indicator = 1;\n  }\n  return -(indicator - exponentials[this.thread.y][this.thread.x]);\n}\n\nexport function compare3D(\n  this: IKernelFunctionThis,\n  target: number,\n  exponentials: number[][][]\n): number {\n  let indicator = 0;\n  const index =\n    this.thread.x +\n    this.thread.y * this.output.x +\n    this.thread.z * this.output.x * this.output.y;\n  if (index === target) {\n    indicator = 1;\n  }\n  return -(\n    indicator - exponentials[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nexport function loss(): number {\n  return -Math.log(0);\n}\n\n// TODO: handle: `return -Math.log(this.es[y]);` in learn\n\nexport class SoftMax extends Modifier {\n  getExponentialsKernel: IKernelRunShortcut | null;\n  getMaxValueKernel: IKernelRunShortcut | null;\n  getSumKernel: IKernelRunShortcut | null;\n  errors: KernelOutput | null = null;\n  constructor(inputLayer: ILayer, settings?: ILayerSettings) {\n    super(inputLayer, settings);\n    this.getExponentialsKernel = null;\n    this.getMaxValueKernel = null;\n    this.getSumKernel = null;\n    this.validate();\n\n    if (this.depth > 0) {\n      this.weights = randos3D(this.width, this.height, this.depth);\n      this.deltas = zeros3D(this.width, this.height, this.depth);\n    } else if (this.height > 0) {\n      this.weights = randos2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n    } else {\n      this.weights = randos(this.width);\n      this.deltas = zeros(this.width);\n    }\n  }\n\n  setupKernels(): void {\n    const { width, height, depth } = this;\n    if (depth > 0) {\n      this.getExponentialsKernel = makeKernel(getExponentials3D, {\n        output: [width, height, depth],\n      });\n      this.getMaxValueKernel = makeKernel(getMaxValue3D, {\n        output: [1, 1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n          inputDepth: depth,\n        },\n      });\n      this.getSumKernel = makeKernel(getSum3D, {\n        output: [1, 1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n          inputDepth: depth,\n        },\n      });\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n      });\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n        immutable: true,\n      });\n    } else {\n      this.getExponentialsKernel = makeKernel(getExponentials, {\n        output: [width, height],\n      });\n      this.getMaxValueKernel = makeKernel(getMaxValue2D, {\n        output: [1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n        },\n      });\n      this.getSumKernel = makeKernel(getSum2D, {\n        output: [1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n        },\n      });\n      this.predictKernel = makeKernel(predict2D, {\n        output: [width, height],\n      });\n      this.compareKernel = makeKernel(compare2D, {\n        output: [width, height],\n        immutable: true,\n      });\n    }\n  }\n\n  predict(): void {\n    const maxValue = (this.getMaxValueKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n    const exponentials = (this.getExponentialsKernel as IKernelRunShortcut)(\n      this.inputLayer.weights,\n      maxValue\n    );\n    const exponentialsSum = (this.getSumKernel as IKernelRunShortcut)(\n      exponentials\n    );\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      exponentials,\n      exponentialsSum\n    );\n  }\n\n  compare(targetValues: KernelOutput): void {\n    const { deltas, errors } = this;\n    this.errors = (this.compareKernel as IKernelRunShortcut)(\n      (targetValues as number[])[0],\n      deltas\n    );\n    this.deltas = clone(this.errors);\n    release(deltas);\n    release(errors as Texture);\n\n    const inputLayerDeltas = this.inputLayer.deltas;\n    this.inputLayer.deltas = clone(this.deltas);\n    release(inputLayerDeltas);\n  }\n}\n\nexport function softMax(\n  inputLayer: ILayer,\n  settings?: ILayerSettings\n): SoftMax {\n  return new SoftMax(inputLayer, settings);\n}\n","import { KernelOutput } from 'gpu.js';\n\nimport { BaseLayer, ILayer, ILayerSettings } from './base-layer';\nimport { clone, release } from '../utilities/kernel';\n\nexport class SVM extends BaseLayer {\n  inputLayer: ILayer;\n  constructor(inputLayer: ILayer, settings: ILayerSettings) {\n    super(settings);\n    this.inputLayer = inputLayer;\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = clone(this.inputLayer.weights as KernelOutput);\n    this.validate();\n  }\n\n  learn(): void {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n}\n\n// function learn(target) {\n//   if (y === i) {\n//     continue;\n//   }\n//   const ydiff = -yscore + x.w[i] + margin;\n//   if (ydiff > 0) {\n//     // violating dimension, apply loss\n//     x.dw[i] += 1;\n//     x.dw[y] -= 1;\n//     loss += ydiff;\n//   }\n// }\n\nexport function svm(inputLayer: ILayer, settings: ILayerSettings): SVM {\n  return new SVM(inputLayer, settings);\n}\n","import { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\nimport { makeKernel } from '../utilities/kernel';\nimport { ILayer } from './base-layer';\nimport { Modifier } from './types';\n\nexport function predict(this: IKernelFunctionThis, value: number[][]): number {\n  return value[this.thread.x][this.thread.y];\n}\n\nconst compare = predict;\n\nexport class Transpose extends Modifier {\n  get width(): number {\n    return this.inputLayer.height;\n  }\n\n  get height(): number {\n    return this.inputLayer.width;\n  }\n\n  constructor(inputLayer: ILayer) {\n    super(inputLayer);\n    this.validate();\n  }\n\n  setupKernels(): void {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.height, this.width],\n    });\n    this.compareKernel = makeKernel(compare, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict(): void {\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n  }\n\n  compare(): void {\n    this.inputLayer.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.deltas\n    );\n  }\n}\n\nexport function transpose(inputLayer: ILayer): Transpose {\n  return new Transpose(inputLayer);\n}\n","import {\n  Activation,\n  EntryPoint,\n  Filter,\n  Internal,\n  InternalModel,\n  Model,\n  Modifier,\n  Operator,\n  Target,\n} from './types';\n\nexport { Add, add } from './add';\nexport { arthurFeedForward } from './arthur-feed-forward';\nexport {\n  BaseLayer,\n  ILayer,\n  ILayerSettings,\n  ILayerJSON,\n  baseLayerDefaultSettings,\n} from './base-layer';\nexport { Convolution, convolution } from './convolution';\nexport { Dropout, dropout } from './dropout';\nexport { feedForward } from './feed-forward';\nexport { FullyConnected, fullyConnected } from './fully-connected';\nexport { gru } from './gru';\nexport { Input, input } from './input';\nexport { LeakyRelu, leakyRelu } from './leaky-relu';\nexport { lstmCell } from './lstm-cell';\nexport { Multiply, multiply } from './multiply';\nexport { MultiplyElement, multiplyElement } from './multiply-element';\nexport { Negative, negative } from './negative';\nexport { Ones, ones } from './ones';\nexport { output } from './output';\nexport { Pool, pool } from './pool';\nexport { Random, random } from './random';\nexport { RecurrentInput, IRecurrentInput } from './recurrent-input';\nexport { RecurrentZeros } from './recurrent-zeros';\nexport { rnnCell } from './rnn-cell';\nexport { Regression, regression } from './regression';\nexport { Relu, relu } from './relu';\nexport { Sigmoid, sigmoid } from './sigmoid';\nexport { SoftMax, softMax } from './soft-max';\nexport { SVM, svm } from './svm';\nexport { Tanh, tanh } from './tanh';\nexport { Target, target } from './target';\nexport { Transpose, transpose } from './transpose';\nexport { Zeros, zeros } from './zeros';\n\nexport const layerTypes = {\n  Activation,\n  Internal,\n  InternalModel,\n  EntryPoint,\n  Filter,\n  Model,\n  Modifier,\n  Operator,\n  Target,\n};\n","import * as layer from '../layer';\nimport { layerTypes, ILayerJSON, ILayer, Target } from '../layer';\nimport { ActivationType } from '../layer/activation';\nimport { FilterType } from '../layer/filter';\nimport { InternalType } from '../layer/internal';\nimport { ModifierType } from '../layer/modifier';\nimport { OperatorType } from '../layer/operator';\nimport { BaseLayerType } from '../layer/base-layer';\nimport { TargetType } from '../layer/target';\n\nconst layerNameTypes = Object.keys(layer);\n\nexport function layerFromJSON(\n  jsonLayer: ILayerJSON,\n  inputLayer1?: ILayer,\n  inputLayer2?: ILayer\n): ILayer | null {\n  if (\n    !layerNameTypes.find((layerNameType) => layerNameType === jsonLayer.type)\n  ) {\n    return null;\n  }\n  const Layer = ((layer as unknown) as {\n    [layerType: string]:\n      | TargetType\n      | ActivationType\n      | FilterType\n      | InternalType\n      | ModifierType\n      | OperatorType;\n  })[jsonLayer.type];\n  if (Layer.prototype instanceof layerTypes.Filter) {\n    if (!inputLayer1) throw new Error('inputLayer missing');\n    return new (Layer as FilterType)(jsonLayer, inputLayer1);\n  } else if (\n    Layer.prototype instanceof layerTypes.Activation ||\n    Layer.prototype instanceof layerTypes.Modifier\n  ) {\n    if (!inputLayer1) throw new Error('inputLayer missing');\n    return new (Layer as ActivationType)(inputLayer1, jsonLayer);\n  } else if (Layer.prototype instanceof layerTypes.Internal) {\n    return new (Layer as InternalType)(jsonLayer);\n  } else if (Layer.prototype instanceof layerTypes.Operator) {\n    if (!inputLayer1) throw new Error('inputLayer1 missing');\n    if (!inputLayer2) throw new Error('inputLayer2 missing');\n    return new (Layer as OperatorType)(inputLayer1, inputLayer2, jsonLayer);\n  } else if (\n    Layer.prototype instanceof layerTypes.InternalModel ||\n    Layer.prototype instanceof layerTypes.EntryPoint ||\n    Layer.prototype instanceof layerTypes.Model\n  ) {\n    return new (Layer as BaseLayerType)(jsonLayer);\n  } else if (Layer === Target) {\n    if (!inputLayer1) throw new Error('inputLayer missing');\n    return new (Layer as TargetType)(jsonLayer, inputLayer1);\n  }\n  return null;\n}\n","import { InputOutputValue, INumberHash, ITrainingDatum } from '../lookup';\n\nexport type LookupTableProp = 'input' | 'output';\n\nexport class LookupTable {\n  length: number;\n  prop: LookupTableProp | null = null;\n  table: INumberHash = {};\n  constructor(\n    data: ITrainingDatum[] | InputOutputValue[] | InputOutputValue[][],\n    prop?: LookupTableProp\n  ) {\n    this.length = 0;\n    const table = this.table;\n    if (prop) {\n      this.prop = prop;\n      for (let i = 0; i < data.length; i++) {\n        const datum = (data as ITrainingDatum[])[i];\n        const object = datum[prop] as INumberHash;\n        for (const p in object) {\n          if (!object.hasOwnProperty(p)) continue;\n          if (table.hasOwnProperty(p)) continue;\n          table[p] = this.length++;\n        }\n      }\n    } else if (Array.isArray(data) && Array.isArray(data[0])) {\n      for (let i = 0; i < data.length; i++) {\n        const array = (data as InputOutputValue[][])[i];\n        for (let j = 0; j < array.length; j++) {\n          const object = array[j];\n          for (const p in object) {\n            if (!object.hasOwnProperty(p)) continue;\n            if (table.hasOwnProperty(p)) continue;\n            table[p] = this.length++;\n          }\n        }\n      }\n    } else {\n      for (let i = 0; i < data.length; i++) {\n        const object = (data as INumberHash[])[i];\n        for (const p in object) {\n          if (!object.hasOwnProperty(p)) continue;\n          if (table.hasOwnProperty(p)) continue;\n          table[p] = this.length++;\n        }\n      }\n    }\n  }\n}\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.thaw = exports.Block = exports.Thaw = void 0;\n/**\n * thaw an array of items\n */\nvar Thaw = /** @class */ (function () {\n    function Thaw(items, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var _a = __assign(__assign({}, Thaw.defaultSettings), options), each = _a.each, done = _a.done;\n        this.i = 0;\n        this.isStopped = false;\n        this.items = items;\n        this.options = options;\n        this.tick = function () {\n            if (_this.isStopped)\n                return;\n            _this.timeout = setTimeout(_this.tick, 0);\n            if (Thaw.thawing)\n                return;\n            var item = _this.items[_this.i];\n            if (_this.i >= _this.items.length) {\n                if (done !== null) {\n                    Thaw.thawing = true;\n                    done();\n                    Thaw.thawing = false;\n                }\n                _this.isStopped = true;\n                clearTimeout(_this.timeout);\n                return;\n            }\n            if (each !== null) {\n                Thaw.thawing = true;\n                each(item, _this.i);\n                Thaw.thawing = false;\n            }\n            else if (item !== undefined) {\n                item();\n            }\n            _this.i++;\n        };\n        Thaw.thaws.push(this);\n        if (!options.delay) {\n            this.tick();\n        }\n    }\n    Object.defineProperty(Thaw, \"isThawing\", {\n        /**\n         * returns if Thaw.js is thawing\n         */\n        get: function () {\n            return Thaw.thawing;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Stops all Thaw instances\n     */\n    Thaw.stopAll = function () {\n        for (var i = 0; i < Thaw.thaws.length; i++) {\n            Thaw.thaws[i].stop();\n        }\n    };\n    /**\n     * readies thaw to continue\n     */\n    Thaw.prototype.makeReady = function () {\n        if (this.isStopped) {\n            this.isStopped = false;\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Adds an item to the end of this instance of Thaw and readies Thaw to process it\n     */\n    Thaw.prototype.add = function (item) {\n        this.items.push(item);\n        if (this.makeReady()) {\n            this.tick();\n        }\n        return this;\n    };\n    /**\n     * Inserts an item just after the current item being processed in Thaw and readies Thaw to process it\n     */\n    Thaw.prototype.insert = function (item) {\n        this.items.splice(this.i, 0, item);\n        if (this.makeReady()) {\n            this.tick();\n        }\n        return this;\n    };\n    /**\n     * Adds an Array to the end of this instance of Thaw and readies Thaw to process it\n     */\n    Thaw.prototype.addArray = function (items) {\n        this.items = this.items.concat(items);\n        if (this.makeReady()) {\n            this.tick();\n        }\n        return this;\n    };\n    /**\n     * Inserts an Array just after the current item being processed in Thaw and readies Thaw to process them\n     */\n    Thaw.prototype.insertArray = function (items) {\n        var before = this.items.splice(0, this.i);\n        var after = this.items;\n        this.items = before.concat(items, after);\n        if (this.makeReady()) {\n            this.tick();\n        }\n        return this;\n    };\n    /**\n     * Stops this instance of Thaw\n     */\n    Thaw.prototype.stop = function () {\n        this.isStopped = true;\n        clearTimeout(this.timeout);\n        if (this.options.done) {\n            this.options.done();\n        }\n        return this;\n    };\n    Thaw.thawing = false;\n    Thaw.thaws = [];\n    Thaw.defaultSettings = {\n        each: null,\n        done: null\n    };\n    return Thaw;\n}());\nexports.Thaw = Thaw;\n/**\n * simple thaw\n */\nfunction thaw(items, options) {\n    return new Thaw(items, options);\n}\nexports.thaw = thaw;\nvar Block = /** @class */ (function () {\n    function Block(options, count) {\n        if (count === void 0) { count = 200; }\n        this.index = 0;\n        this.thaws = [];\n        this.count = count;\n        this.options = options;\n    }\n    /**\n     * add an item to the end of items\n     */\n    Block.prototype.add = function (item) {\n        var next = this.next();\n        next.add(item);\n        return this;\n    };\n    /**\n     * add an Array to the end of items\n     */\n    Block.prototype.addArray = function (items) {\n        var next = this.next();\n        next.addArray(items);\n        return this;\n    };\n    /**\n     * insert an item into items @ current position\n     */\n    Block.prototype.insert = function (item) {\n        var next = this.next();\n        next.insert(item);\n        return this;\n    };\n    /**\n     * insert and array into items @ current position\n     */\n    Block.prototype.insertArray = function (items) {\n        var next = this.next();\n        next.insertArray(items);\n        return this;\n    };\n    /**\n     * Stops all thaws in this block\n     */\n    Block.prototype.stop = function () {\n        for (var i = 0; i < this.thaws.length; i++) {\n            this.thaws[i].stop();\n        }\n        return this;\n    };\n    /**\n     * Get next available in block\n     */\n    Block.prototype.next = function () {\n        var thaw;\n        var thaws = this.thaws;\n        if (thaws.length < this.count) {\n            thaw = new Thaw([], this.options);\n            thaws.push(thaw);\n        }\n        else {\n            thaw = thaws[this.index] || null;\n        }\n        this.index++;\n        if (this.index >= this.count) {\n            this.index = 0;\n        }\n        return thaw;\n    };\n    return Block;\n}());\nexports.Block = Block;\nif (typeof window !== 'undefined') {\n    // @ts-ignore\n    window.Thaw = Thaw;\n    // @ts-ignore\n    window.thaw = thaw;\n    // @ts-ignore\n    window.Thaw.Block = Block;\n}\n","import { IKernelFunctionThis, KernelOutput, Texture } from 'gpu.js';\nimport { MeanSquaredError } from './estimator/mean-squared-error';\nimport { ILayer, ILayerJSON } from './layer';\nimport { Model } from './layer/types';\nimport { InputOutputValue, INumberArray, INumberHash, lookup } from './lookup';\nimport * as praxis from './praxis';\nimport { IPraxis, IPraxisSettings } from './praxis/base-praxis';\nimport { flattenLayers } from './utilities/flatten-layers';\nimport { makeKernel, release } from './utilities/kernel';\nimport { layerFromJSON } from './utilities/layer-from-json';\nimport { LookupTable } from './utilities/lookup-table';\nimport { Thaw } from 'thaw.js';\n\nexport interface IFeedForwardTrainingData<\n  InputType extends InputOutputValue | KernelOutput = number[] | Float32Array,\n  OutputType extends InputOutputValue | KernelOutput = number[] | Float32Array\n> {\n  input: InputType;\n  output: OutputType;\n}\n\nexport interface IFeedForwardNormalizedTrainingData {\n  input: Float32Array;\n  output: Float32Array;\n}\n\nexport interface IFeedForwardGPUTrainingData {\n  input: KernelOutput;\n  output: KernelOutput;\n}\n\nexport interface ITrainingStatus {\n  iterations: number;\n  error: number;\n}\n\nexport type Log = (status: string) => void;\nexport type FeedForwardCallback = (status: ITrainingStatus) => void;\n\nexport interface IFeedForwardTrainingOptions {\n  iterations?: number;\n  errorThresh?: number;\n  log?: boolean | Log;\n  logPeriod?: number;\n  learningRate?: number;\n  callback?: FeedForwardCallback;\n  callbackPeriod?: number;\n  errorCheckInterval?: number;\n  timeout?: number;\n}\n\nexport interface IFeedForwardOptions {\n  learningRate?: number;\n  binaryThresh?: number;\n  hiddenLayers?: Array<(inputLayer: ILayer, layerIndex: number) => ILayer>;\n  inputLayer?: () => ILayer;\n  outputLayer?: (inputLayer: ILayer, index: number) => ILayer;\n  praxisOpts?: Partial<IPraxisSettings>;\n  initPraxis?: (\n    layerTemplate: ILayer,\n    settings: Partial<IPraxisSettings>\n  ) => IPraxis;\n  praxis?: IPraxis;\n\n  // JSON\n  layers?: ILayer[];\n  inputLayerIndex?: number;\n  outputLayerIndex?: number;\n  sizes?: number[];\n}\n\nexport interface IFeedForwardPreppedTrainingData {\n  status: ITrainingStatus;\n  preparedData: IFeedForwardGPUTrainingData[];\n  endTime: number;\n}\n\nexport const defaults: IFeedForwardOptions = {\n  learningRate: 0.3,\n  binaryThresh: 0.5,\n  initPraxis: (\n    layerTemplate: ILayer,\n    settings: Partial<IPraxisSettings>\n  ): IPraxis =>\n    praxis.momentumRootMeanSquaredPropagation(\n      layerTemplate,\n      layerTemplate.settings.praxisOpts ?? settings\n    ),\n};\n\nexport const trainDefaults: IFeedForwardTrainingOptions = {\n  iterations: 20000,\n  errorThresh: 0.005,\n  log: false,\n  logPeriod: 10,\n  learningRate: 0.3,\n  callbackPeriod: 10,\n  errorCheckInterval: 100,\n  timeout: Infinity,\n};\n\nexport interface IFeedForwardJSON {\n  type: string;\n  sizes: number[];\n  layers: ILayerJSON[];\n  inputLayerIndex: number;\n  outputLayerIndex: number;\n}\n\nexport class FeedForward<\n  InputType extends InputOutputValue | KernelOutput = number[] | Float32Array,\n  OutputType extends InputOutputValue | KernelOutput = number[] | Float32Array\n> {\n  static _validateTrainingOptions(\n    options: Partial<IFeedForwardTrainingOptions>\n  ): void {\n    const {\n      iterations,\n      errorThresh,\n      log,\n      logPeriod,\n      learningRate,\n      callback,\n      callbackPeriod,\n      timeout,\n    } = options;\n    interface IValidation {\n      [optionName: string]: () => boolean;\n    }\n    const validations: IValidation = {\n      iterations: () => typeof iterations === 'number' && iterations > 0,\n      errorThresh: () =>\n        typeof errorThresh === 'number' && errorThresh > 0 && errorThresh < 1,\n      log: () => typeof log === 'function' || typeof log === 'boolean',\n      logPeriod: () => typeof logPeriod === 'number' && logPeriod > 0,\n      learningRate: () =>\n        typeof learningRate === 'number' &&\n        learningRate > 0 &&\n        learningRate < 1,\n      callback: () => typeof callback === 'function' || callback === null,\n      callbackPeriod: () =>\n        typeof callbackPeriod === 'number' && callbackPeriod > 0,\n      timeout: () => typeof timeout === 'number' && timeout > 0,\n    };\n    Object.keys(trainDefaults).forEach((key: string): void => {\n      if (validations.hasOwnProperty(key) && !validations[key]()) {\n        const val = options[key as keyof IFeedForwardTrainingOptions];\n        throw new Error(\n          `[${key}, ${(\n            val ?? 'undefined'\n          ).toString()}] is out of normal training range, your network will probably not train.`\n        );\n      }\n    });\n  }\n\n  /**\n   * if a method is passed in method is used\n   * if false passed in nothing is logged\n   */\n  _setLogMethod(log: Log | undefined | boolean): void {\n    if (typeof log === 'function') {\n      this.trainOpts.log = log;\n    } else if (log) {\n      // eslint-disable-next-line\n      this.trainOpts.log = console.log;\n    } else {\n      this.trainOpts.log = false;\n    }\n  }\n\n  _updateTrainingOptions(opts: Partial<IFeedForwardTrainingOptions>): void {\n    this.trainOpts = { ...trainDefaults, ...this.trainOpts, ...opts };\n    FeedForward._validateTrainingOptions(this.trainOpts);\n    this._setLogMethod(opts.log ?? this.trainOpts.log);\n    const { callback, callbackPeriod, errorCheckInterval } = this.trainOpts;\n    if (callback && callbackPeriod !== errorCheckInterval) {\n      console.warn(\n        `options.callbackPeriod with value of ${(\n          callbackPeriod ?? 'undefined'\n        ).toString()} does not match options.errorCheckInterval with value of ${(\n          errorCheckInterval ?? 'undefined'\n        ).toString()}, if logging error, it will repeat.  These values may need to match`\n      );\n    }\n  }\n\n  trainOpts: Partial<IFeedForwardTrainingOptions> = {};\n  options: IFeedForwardOptions;\n  layers: ILayer[] | null = null;\n  _inputLayer: ILayer | null = null;\n  _hiddenLayers: ILayer[] | null = null;\n  _outputLayer: ILayer | null = null;\n  _model: ILayer[] | null = null;\n  meanSquaredError: MeanSquaredError | null = null;\n  inputLookup: INumberHash | null = null;\n  inputLookupLength: number | null = null;\n  outputLookup: INumberHash | null = null;\n  outputLookupLength: number | null = null;\n  constructor(options: IFeedForwardOptions = {}) {\n    this.options = { ...defaults, ...options };\n    this._updateTrainingOptions({\n      ...trainDefaults,\n      ...options,\n    });\n  }\n\n  _connectOptionsLayers(): ILayer[] {\n    const { inputLayerIndex, outputLayerIndex, layers } = this.options;\n    if (!layers) throw new Error('this.options.layers in unexpected state');\n    if (typeof inputLayerIndex !== 'number')\n      throw new Error('inputLayerIndex not a number');\n    if (typeof outputLayerIndex !== 'number')\n      throw new Error('inputLayerIndex not a number');\n    const inputLayer = layers[inputLayerIndex];\n    if (!inputLayer) {\n      throw new Error('inputLayer not found in this.options.layers');\n    }\n    const outputLayer = layers[outputLayerIndex];\n    if (!outputLayer) {\n      throw new Error('outputLayer not found in this.options.layers');\n    }\n    this._inputLayer = inputLayer;\n    this._hiddenLayers = layers.slice(\n      inputLayerIndex,\n      outputLayerIndex - inputLayerIndex\n    );\n    this._outputLayer = outputLayer;\n    return layers;\n  }\n\n  _connectNewLayers(): ILayer[] {\n    const { inputLayer, outputLayer } = this.options;\n    if (!inputLayer) throw new Error('inputLayer not defined');\n    const layers: ILayer[] = [];\n    this._inputLayer = inputLayer();\n    const hiddenLayers = this._connectHiddenLayers(this._inputLayer);\n\n    if (!outputLayer) throw new Error('outputLayer not defined');\n    this._outputLayer = outputLayer(\n      hiddenLayers[hiddenLayers.length - 1],\n      hiddenLayers.length\n    );\n    layers.push(this._inputLayer);\n    layers.push(...hiddenLayers);\n    layers.push(this._outputLayer);\n    return flattenLayers(layers);\n  }\n\n  _connectHiddenLayers(previousLayer: ILayer): ILayer[] {\n    this._hiddenLayers = [];\n    const result: ILayer[] = [];\n    const { hiddenLayers } = this.options;\n\n    if (!hiddenLayers) throw new Error('hiddenLayers not defined');\n\n    for (let i = 0; i < hiddenLayers.length; i++) {\n      const hiddenLayer = hiddenLayers[i](previousLayer, i);\n      result.push(hiddenLayer);\n      this._hiddenLayers.push(hiddenLayer);\n      previousLayer = hiddenLayer;\n    }\n\n    return result;\n  }\n\n  initialize(): void {\n    this.layers = this.options.layers\n      ? this._connectOptionsLayers()\n      : this._connectNewLayers();\n    this.initializeLayers(this.layers);\n    this._model = this.layers.filter((l) => l instanceof Model);\n  }\n\n  initializeLayers(layers: ILayer[]): void {\n    for (let i = 0; i < layers.length; i++) {\n      const layer = layers[i];\n      // TODO: optimize for when training or just running\n      layer.setupKernels(true);\n      if (\n        layer instanceof Model &&\n        layer.praxis === null &&\n        typeof this.options.initPraxis === 'function'\n      ) {\n        layer.praxis = this.options.initPraxis(\n          layer,\n          layer.settings.praxisOpts ?? this.options.praxisOpts ?? {}\n        );\n        layer.praxis.setupKernels();\n      }\n    }\n\n    const lastLayer = layers[layers.length - 1];\n    this.meanSquaredError = new MeanSquaredError({\n      width: lastLayer.width,\n      height: lastLayer.height,\n    });\n  }\n\n  run(input: InputType): OutputType {\n    let typeSafeInput: INumberArray | KernelOutput;\n    if (Array.isArray(input) || (input as Float32Array).buffer) {\n      typeSafeInput = input as INumberArray;\n    } else {\n      if (this.inputLookup) {\n        typeSafeInput = lookup.toArray(\n          this.inputLookup,\n          input as INumberHash,\n          this.inputLookupLength as number\n        );\n      } else {\n        throw new Error('input is incompatible with net');\n      }\n    }\n\n    let output = this.runInput(typeSafeInput as KernelOutput);\n    if (output instanceof Texture) {\n      output = output.toArray();\n    }\n\n    if (this.outputLookup) {\n      return lookup.toObject(\n        this.outputLookup,\n        output as number[]\n      ) as OutputType;\n    }\n    return output as OutputType;\n  }\n\n  runInput(input: KernelOutput): KernelOutput {\n    if (!this.layers) throw new Error('not initialized');\n    this.layers[0].predict(input);\n    for (let i = 1; i < this.layers.length; i++) {\n      this.layers[i].predict();\n    }\n    return this.layers[this.layers.length - 1].weights as KernelOutput;\n  }\n\n  train(\n    data: Array<IFeedForwardTrainingData<InputType, OutputType>>,\n    options: Partial<IFeedForwardTrainingOptions> = {}\n  ): ITrainingStatus {\n    const { preparedData, status, endTime } = this._prepTraining(data, options);\n    let continueTicking = true;\n    const calculateError = (): number =>\n      this._calculateTrainingError(preparedData);\n    const trainPatterns = (): void => this._trainPatterns(preparedData);\n    while (continueTicking) {\n      continueTicking = this._trainingTick(\n        status,\n        endTime,\n        calculateError,\n        trainPatterns\n      );\n    }\n    return status;\n  }\n\n  async trainAsync(\n    data: Array<IFeedForwardTrainingData<InputType, OutputType>>,\n    options: Partial<IFeedForwardTrainingOptions> = {}\n  ): Promise<ITrainingStatus> {\n    const { preparedData, status, endTime } = this._prepTraining(data, options);\n\n    return await new Promise((resolve, reject) => {\n      try {\n        const calculateError = (): number =>\n          this._calculateTrainingError(preparedData);\n        const trainPatterns = (): void => this._trainPatterns(preparedData);\n        const thawedTrain: Thaw = new Thaw(\n          new Array(this.trainOpts.iterations),\n          {\n            delay: true,\n            each: () =>\n              this._trainingTick(\n                status,\n                endTime,\n                calculateError,\n                trainPatterns\n              ) || thawedTrain.stop(),\n            done: () => resolve(status),\n          }\n        );\n        thawedTrain.tick();\n      } catch (trainError) {\n        reject(trainError);\n      }\n    });\n  }\n\n  _trainingTick(\n    status: ITrainingStatus,\n    endTime: number,\n    calculateError: () => number,\n    trainPatterns: () => void\n  ): boolean {\n    const { trainOpts } = this;\n    if (\n      status.iterations >= (trainOpts.iterations as number) ||\n      status.error <= (trainOpts.errorThresh as number) ||\n      Date.now() >= endTime\n    ) {\n      return false;\n    }\n\n    if (\n      typeof trainOpts.log === 'function' &&\n      status.iterations % (trainOpts.logPeriod as number) === 0\n    ) {\n      status.error = calculateError();\n      trainOpts.log(\n        `iterations: ${status.iterations}, training error: ${status.error}`\n      );\n    } else if (\n      status.iterations % (trainOpts.errorCheckInterval as number) ===\n      0\n    ) {\n      status.error = calculateError();\n    } else {\n      trainPatterns();\n    }\n\n    if (\n      trainOpts.callback &&\n      status.iterations % (trainOpts.callbackPeriod as number) === 0\n    ) {\n      trainOpts.callback(Object.assign(status));\n    }\n\n    status.iterations++;\n    return true;\n  }\n\n  _prepTraining(\n    data: Array<IFeedForwardTrainingData<InputType, OutputType>>,\n    options: Partial<IFeedForwardTrainingOptions>\n  ): IFeedForwardPreppedTrainingData {\n    this._updateTrainingOptions(options);\n\n    const formattedData = this.formatData(data);\n    const endTime = this.trainOpts.timeout\n      ? Date.now() + this.trainOpts.timeout\n      : 0;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized();\n\n    return {\n      preparedData: this.transferData(formattedData),\n      status,\n      endTime,\n    };\n  }\n\n  verifyIsInitialized(): void {\n    if (!this._model) {\n      this.initialize();\n    }\n  }\n\n  _calculateTrainingError(preparedData: IFeedForwardGPUTrainingData[]): number {\n    let sum: Float32Array | KernelOutput = new Float32Array([0]);\n    const meanSquaredError = this.meanSquaredError as MeanSquaredError;\n    for (let i = 0; i < preparedData.length; ++i) {\n      const prevSum = sum;\n      const error = this._trainPattern(\n        preparedData[i].input,\n        preparedData[i].output,\n        true\n      ) as number;\n      sum = meanSquaredError.add(sum, error);\n      release(error);\n      release(prevSum);\n    }\n    const result = meanSquaredError.divide(preparedData.length, sum);\n    release(sum);\n    if (result instanceof Texture) {\n      const resultArray: number[] = result.toArray() as number[];\n      release(result);\n      return resultArray[0];\n    }\n    return (result as number[])[0];\n  }\n\n  /**\n   * @param data\n   * @private\n   */\n  _trainPatterns(data: IFeedForwardGPUTrainingData[]): void {\n    for (let i = 0; i < data.length; ++i) {\n      this._trainPattern(data[i].input, data[i].output, false);\n    }\n  }\n\n  _trainPattern(\n    input: KernelOutput,\n    target: KernelOutput,\n    logErrorRate: boolean\n  ): KernelOutput | null {\n    // forward propagate\n    this.runInput(input);\n\n    // back propagate\n    this._calculateDeltas(target);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      if (!this._outputLayer?.errors) {\n        throw new Error('outputLayer.errors not defined');\n      }\n      return (this.meanSquaredError as MeanSquaredError).calculate(\n        this._outputLayer.errors\n      );\n    }\n    return null;\n  }\n\n  _calculateDeltas(target: KernelOutput): void {\n    const layers = this.layers as ILayer[];\n    for (let i = layers.length - 1; i > -1; i--) {\n      layers[i].compare(target);\n    }\n  }\n\n  /**\n   *\n   */\n  adjustWeights(): void {\n    const _model = this._model as ILayer[];\n    for (let i = 0; i < _model.length; i++) {\n      _model[i].learn(this.trainOpts.learningRate as number);\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {*}\n   */\n  formatData(\n    data:\n      | Array<IFeedForwardTrainingData<InputType, OutputType>>\n      | IFeedForwardTrainingData<InputType, OutputType>\n  ): IFeedForwardNormalizedTrainingData[] {\n    if (!Array.isArray(data)) {\n      // turn stream datum into array\n      const tmp = [];\n      tmp.push(data);\n      data = tmp;\n    }\n\n    // turn sparse hash input into arrays with 0s as filler\n    const inputDatumCheck = data[0].input;\n    let formattedData: Array<Partial<IFeedForwardNormalizedTrainingData>>;\n    if (\n      Array.isArray(data) &&\n      !Array.isArray(inputDatumCheck) &&\n      !(inputDatumCheck instanceof Float32Array)\n    ) {\n      if (!this.inputLookup) {\n        const lookupTable = new LookupTable(data, 'input');\n        this.inputLookup = lookupTable.table;\n        this.inputLookupLength = lookupTable.length;\n      }\n      formattedData = data.map((datumParam): Partial<\n        IFeedForwardNormalizedTrainingData\n      > => {\n        const array = lookup.toArray(\n          this.inputLookup as INumberHash,\n          datumParam.input as INumberHash,\n          this.inputLookupLength as number\n        );\n        return { input: array };\n      }, this);\n    } else {\n      formattedData = data as typeof formattedData;\n    }\n\n    const outputDatumCheck = data[0].output;\n    if (\n      !Array.isArray(outputDatumCheck) &&\n      !(outputDatumCheck instanceof Float32Array)\n    ) {\n      if (!this.outputLookup) {\n        const lookupTable = new LookupTable(data, 'output');\n        this.outputLookup = lookupTable.table;\n        this.outputLookupLength = lookupTable.length;\n      }\n      formattedData = data.map(\n        (datumParam, index): IFeedForwardNormalizedTrainingData => {\n          const array = lookup.toArray(\n            this.outputLookup as INumberHash,\n            datumParam.output as INumberHash,\n            this.inputLookupLength as number\n          );\n          return {\n            input: formattedData[index].input as Float32Array,\n            output: array,\n          };\n        },\n        this\n      );\n    }\n    return formattedData as IFeedForwardNormalizedTrainingData[];\n  }\n\n  transferData(\n    formattedData: IFeedForwardNormalizedTrainingData[]\n  ): IFeedForwardGPUTrainingData[] {\n    const transferredData = new Array(formattedData.length);\n    const transferInput = makeKernel(\n      function (value: number[]): number {\n        return value[this.thread.x];\n      },\n      {\n        output: [formattedData[0].input.length],\n        immutable: true,\n      }\n    );\n    const transferOutput = makeKernel(\n      function (this: IKernelFunctionThis, value: number[]): number {\n        return value[this.thread.x];\n      },\n      {\n        output: [formattedData[0].output.length],\n        immutable: true,\n      }\n    );\n\n    for (let i = 0; i < formattedData.length; i++) {\n      const formattedDatum = formattedData[i];\n      transferredData[i] = {\n        input: transferInput(formattedDatum.input),\n        output: transferOutput(formattedDatum.output),\n      };\n    }\n    return transferredData;\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {\n   *  {\n   *    error: number,\n   *    misclasses: Array\n   *  }\n   * }\n   */\n  test(): void {\n    throw new Error(`${this.constructor.name}-test is not yet implemented`);\n  }\n\n  /**\n   *\n   */\n  toJSON(): IFeedForwardJSON {\n    if (!this.layers) {\n      this.initialize();\n    }\n    if (\n      !this._model ||\n      !this.layers ||\n      !this._inputLayer ||\n      !this._hiddenLayers ||\n      !this._outputLayer\n    ) {\n      throw new Error('network is not initialized');\n    }\n    const jsonLayers = [];\n    for (let i = 0; i < this.layers.length; i++) {\n      const layer = this.layers[i];\n      const jsonLayer = layer.toJSON();\n      if (layer.hasOwnProperty('inputLayer')) {\n        jsonLayer.inputLayerIndex = this.layers.indexOf(\n          layer.inputLayer as ILayer\n        );\n      } else if (\n        layer.hasOwnProperty('inputLayer1') &&\n        layer.hasOwnProperty('inputLayer2')\n      ) {\n        jsonLayer.inputLayer1Index = this.layers.indexOf(\n          layer.inputLayer1 as ILayer\n        );\n        jsonLayer.inputLayer2Index = this.layers.indexOf(\n          layer.inputLayer2 as ILayer\n        );\n      }\n      jsonLayers.push(jsonLayer);\n    }\n\n    return {\n      type: this.constructor.name,\n      sizes:\n        this.options.sizes ??\n        [this._inputLayer.height]\n          .concat(this._hiddenLayers.map((l) => l.height))\n          .concat([this._outputLayer.height]),\n      outputLayerIndex: this.layers.indexOf(this._outputLayer),\n      layers: jsonLayers as ILayerJSON[],\n      inputLayerIndex: this.layers.indexOf(this._inputLayer),\n    };\n  }\n\n  static fromJSON(\n    json: IFeedForwardJSON,\n    getLayer?: (\n      layerJson: ILayerJSON,\n      inputLayer1?: ILayer,\n      inputLayer2?: ILayer\n    ) => ILayer\n  ): FeedForward {\n    const jsonLayers = json.layers;\n    const layers: ILayer[] = [];\n    const inputLayer = getLayer\n      ? layerFromJSON(jsonLayers[0]) ?? getLayer(jsonLayers[0])\n      : layerFromJSON(jsonLayers[0]);\n\n    if (!inputLayer) throw new Error('unable to find layer');\n\n    layers.push(inputLayer);\n\n    for (let i = 1; i < jsonLayers.length; i++) {\n      const jsonLayer = jsonLayers[i];\n      if (\n        typeof jsonLayer.inputLayerIndex === 'undefined' &&\n        typeof jsonLayer.inputLayer1Index === 'undefined' &&\n        typeof jsonLayer.inputLayer2Index === 'undefined'\n      ) {\n        const layer = getLayer\n          ? layerFromJSON(jsonLayer) ?? getLayer(jsonLayer)\n          : layerFromJSON(jsonLayer);\n        if (!layer) throw new Error('unable to find layer');\n        layers.push(layer);\n      } else if (typeof jsonLayer.inputLayerIndex === 'number') {\n        const inputLayer = layers[jsonLayer.inputLayerIndex];\n        if (!inputLayer) {\n          throw new Error('inputLayer1 not found');\n        }\n        const layer = getLayer\n          ? layerFromJSON(jsonLayer, inputLayer) ??\n            getLayer(jsonLayer, inputLayer)\n          : layerFromJSON(jsonLayer, inputLayer);\n        if (!layer) throw new Error('unable to find layer');\n        layers.push(layer);\n      } else {\n        if (typeof jsonLayer.inputLayer1Index !== 'number') {\n          throw new Error(\n            'Cannot create network from provided JSON. inputLayer1Index not defined.'\n          );\n        }\n        if (typeof jsonLayer.inputLayer2Index !== 'number') {\n          throw new Error(\n            'Cannot create network from provided JSON. inputLayer2Index not defined.'\n          );\n        }\n        const inputLayer1 = layers[jsonLayer.inputLayer1Index];\n        const inputLayer2 = layers[jsonLayer.inputLayer2Index];\n\n        if (inputLayer1 === undefined)\n          throw new Error(\n            `Cannot create network from provided JSON. layer of index ${jsonLayer.inputLayer1Index} not found.`\n          );\n        if (inputLayer2 === undefined)\n          throw new Error(\n            `Cannot create network from provided JSON. layer of index ${jsonLayer.inputLayer2Index} not found.`\n          );\n\n        const layer = getLayer\n          ? layerFromJSON(jsonLayer, inputLayer1, inputLayer2) ??\n            getLayer(jsonLayer, inputLayer1, inputLayer2)\n          : layerFromJSON(jsonLayer, inputLayer1, inputLayer2);\n\n        if (!layer) throw new Error('unable to find layer');\n        layers.push(layer);\n      }\n    }\n\n    return new this({ ...json, layers });\n  }\n\n  /**\n   *\n   * @returns {Function}\n   */\n  toFunction(): void {\n    throw new Error(\n      `${this.constructor.name}-toFunction is not yet implemented`\n    );\n  }\n\n  /**\n   * This will create a TrainStream (WriteStream) for us to send the training data to.\n   * @param opts training options\n   * @returns {TrainStream|*}\n   */\n  createTrainStream(): void {\n    throw new Error(\n      `${this.constructor.name}-createTrainStream is not yet implemented`\n    );\n  }\n}\n","export interface ILikelyNet<InputType, OutputType> {\n  run: (input: InputType) => OutputType;\n}\n\nexport function likely<\n  NetworkType extends ILikelyNet<\n    Parameters<NetworkType['run']>[0],\n    ReturnType<NetworkType['run']>\n  >\n>(\n  input: Parameters<NetworkType['run']>[0],\n  net: NetworkType\n): ReturnType<NetworkType['run']> | null {\n  if (!net) {\n    throw new TypeError(\n      `Required parameter 'net' is of type ${typeof net}. Must be of type 'brain.NeuralNetwork'`\n    );\n  }\n\n  const output = net.run(input);\n  let maxProp = null;\n  let maxValue = -1;\n\n  Object.entries(output).forEach(([key, value]) => {\n    if (\n      typeof value !== 'undefined' &&\n      typeof value === 'number' &&\n      value > maxValue\n    ) {\n      maxProp = key;\n      maxValue = value;\n    }\n  });\n\n  return maxProp;\n}\n","export function arraysToFloat32Arrays(arrays: number[][]): Float32Array[] {\n  const result: Float32Array[] = [];\n  for (let i = 0; i < arrays.length; i++) {\n    result.push(Float32Array.from(arrays[i]));\n  }\n  return result;\n}\n\nexport function inputOutputArraysToFloat32Arrays(\n  input: number[][],\n  output: number[][]\n): Float32Array[] {\n  const result: Float32Array[] = [];\n  for (let i = 0; i < input.length; i++) {\n    result.push(Float32Array.from(input[i]));\n  }\n  for (let i = 0; i < output.length; i++) {\n    result.push(Float32Array.from(output[i]));\n  }\n  return result;\n}\n\nexport function arrayToFloat32Arrays(array: number[]): Float32Array[] {\n  const result: Float32Array[] = [];\n  for (let i = 0; i < array.length; i++) {\n    result.push(Float32Array.from([array[i]]));\n  }\n  return result;\n}\n\nexport function inputOutputArrayToFloat32Arrays(\n  input: number[],\n  output: number[]\n): Float32Array[] {\n  const result: Float32Array[] = [];\n  for (let i = 0; i < input.length; i++) {\n    result.push(Float32Array.from([input[i]]));\n  }\n  for (let i = 0; i < output.length; i++) {\n    result.push(Float32Array.from([output[i]]));\n  }\n  return result;\n}\n\nexport function arrayToFloat32Array(array: number[]): Float32Array {\n  return Float32Array.from(array);\n}\n\nexport function objectsToFloat32Arrays(\n  objects: Array<Record<string, number>>,\n  table: Record<string, number>,\n  length: number\n): Float32Array[] {\n  const results: Float32Array[] = [];\n  for (let i = 0; i < objects.length; i++) {\n    const object = objects[i];\n    const result = new Float32Array(length);\n    for (const p in object) {\n      if (object.hasOwnProperty(p)) {\n        result[table[p]] = object[p];\n      }\n    }\n    results.push(result);\n  }\n  return results;\n}\n\nexport function inputOutputObjectsToFloat32Arrays(\n  input: Array<Record<string, number>>,\n  output: Array<Record<string, number>>,\n  inputTable: Record<string, number>,\n  outputTable: Record<string, number>,\n  inputLength: number,\n  outputLength: number\n): Float32Array[] {\n  const results: Float32Array[] = [];\n  for (let i = 0; i < input.length; i++) {\n    const object = input[i];\n    const result = new Float32Array(inputLength);\n    for (const p in object) {\n      if (object.hasOwnProperty(p)) {\n        result[inputTable[p]] = object[p];\n      }\n    }\n    results.push(result);\n  }\n  for (let i = 0; i < output.length; i++) {\n    const object = output[i];\n    const result = new Float32Array(outputLength);\n    for (const p in object) {\n      if (object.hasOwnProperty(p)) {\n        result[outputTable[p]] = object[p];\n      }\n    }\n    results.push(result);\n  }\n  return results;\n}\n\nexport function objectToFloat32Arrays(\n  object: Record<string, number>\n): Float32Array[] {\n  const result: Float32Array[] = [];\n  for (const p in object) {\n    if (!object.hasOwnProperty(p)) continue;\n    result.push(Float32Array.from([object[p]]));\n  }\n  return result;\n}\n\nexport function inputOutputObjectToFloat32Arrays(\n  input: Record<string, number>,\n  output: Record<string, number>\n): Float32Array[] {\n  const result: Float32Array[] = [];\n  for (const p in input) {\n    if (!input.hasOwnProperty(p)) continue;\n    result.push(Float32Array.from([input[p]]));\n  }\n  for (const p in output) {\n    if (!output.hasOwnProperty(p)) continue;\n    result.push(Float32Array.from([output[p]]));\n  }\n  return result;\n}\n\nexport function objectToFloat32Array(\n  object: Record<string, number>,\n  table: Record<string, number>,\n  length: number\n): Float32Array {\n  const result = new Float32Array(length);\n  for (const p in object) {\n    if (object.hasOwnProperty(p)) {\n      result[table[p]] = object[p];\n    }\n  }\n  return result;\n}\n","export function max(\n  values:\n    | Float32Array\n    | {\n        [key: string]: number;\n      }\n): number {\n  if (Array.isArray(values) || values instanceof Float32Array) {\n    return Math.max(...values);\n  } else {\n    return Math.max(...Object.values(values));\n  }\n}\n","export function mse(errors: Float32Array): number {\n  // mean squared error\n  let sum = 0;\n  for (let i = 0; i < errors.length; i++) {\n    sum += errors[i] ** 2;\n  }\n  return sum / errors.length;\n}\n","import { Thaw } from 'thaw.js';\nimport { ITrainingStatus } from './feed-forward';\nimport { INumberHash, lookup } from './lookup';\nimport {\n  INeuralNetworkBinaryTestResult,\n  INeuralNetworkState,\n  INeuralNetworkTestResult,\n} from './neural-network-types';\nimport { arrayToFloat32Array } from './utilities/cast';\nimport { LookupTable } from './utilities/lookup-table';\nimport { max } from './utilities/max';\nimport { mse } from './utilities/mse';\nimport { randos } from './utilities/randos';\nimport { zeros } from './utilities/zeros';\n\ntype NeuralNetworkFormatter =\n  | ((v: INumberHash) => Float32Array)\n  | ((v: number[]) => Float32Array);\n\nexport function getTypedArrayFn(\n  value: INeuralNetworkData,\n  table: INumberHash | null\n): null | NeuralNetworkFormatter {\n  if ((value as Float32Array).buffer instanceof ArrayBuffer) {\n    return null;\n  }\n  if (Array.isArray(value)) {\n    return arrayToFloat32Array;\n  }\n  if (!table) throw new Error('table is not Object');\n  const { length } = Object.keys(table);\n  return (v: INumberHash): Float32Array => {\n    const array = new Float32Array(length);\n    for (const p in table) {\n      if (!table.hasOwnProperty(p)) continue;\n      if (typeof v[p] !== 'number') continue;\n      array[table[p]] = v[p] || 0;\n    }\n    return array;\n  };\n}\n\nexport type NeuralNetworkActivation =\n  | 'sigmoid'\n  | 'relu'\n  | 'leaky-relu'\n  | 'tanh';\n\nexport interface IJSONLayer {\n  biases: number[];\n  weights: number[][];\n}\n\nexport interface INeuralNetworkJSON {\n  type: string;\n  sizes: number[];\n  layers: IJSONLayer[];\n  inputLookup: INumberHash | null;\n  inputLookupLength: number;\n  outputLookup: INumberHash | null;\n  outputLookupLength: number;\n  options: INeuralNetworkOptions;\n  trainOpts: INeuralNetworkTrainOptionsJSON;\n}\n\nexport interface INeuralNetworkOptions {\n  inputSize: number;\n  outputSize: number;\n  binaryThresh: number;\n  hiddenLayers?: number[];\n}\n\nexport function defaults(): INeuralNetworkOptions {\n  return {\n    inputSize: 0,\n    outputSize: 0,\n    binaryThresh: 0.5,\n  };\n}\n\nexport interface INeuralNetworkTrainOptionsJSON {\n  activation: NeuralNetworkActivation | string;\n  iterations: number;\n  errorThresh: number;\n  log: boolean;\n  logPeriod: number;\n  leakyReluAlpha: number;\n  learningRate: number;\n  momentum: number;\n  callbackPeriod: number;\n  timeout: number | 'Infinity';\n  praxis?: 'adam';\n  beta1: number;\n  beta2: number;\n  epsilon: number;\n}\n\nexport interface INeuralNetworkPreppedTrainingData<T> {\n  status: ITrainingStatus;\n  preparedData: Array<INeuralNetworkDatumFormatted<T>>;\n  endTime: number;\n}\n\nexport interface INeuralNetworkTrainOptions {\n  activation: NeuralNetworkActivation | string;\n  iterations: number;\n  errorThresh: number;\n  log: boolean | ((status: INeuralNetworkState) => void);\n  logPeriod: number;\n  leakyReluAlpha: number;\n  learningRate: number;\n  momentum: number;\n  callback?: (status: { iterations: number; error: number }) => void;\n  callbackPeriod: number;\n  timeout: number;\n  praxis?: 'adam';\n  beta1: number;\n  beta2: number;\n  epsilon: number;\n}\n\nexport function trainDefaults(): INeuralNetworkTrainOptions {\n  return {\n    activation: 'sigmoid',\n    iterations: 20000, // the maximum times to iterate the training data\n    errorThresh: 0.005, // the acceptable error percentage from training data\n    log: false, // true to use console.log, when a function is supplied it is used\n    logPeriod: 10, // iterations between logging out\n    leakyReluAlpha: 0.01,\n    learningRate: 0.3, // multiply's against the input and the delta then adds to momentum\n    momentum: 0.1, // multiply's against the specified \"change\" then adds to learning rate for change\n    callbackPeriod: 10, // the number of iterations through the training data between callback calls\n    timeout: Infinity, // the max number of milliseconds to train for\n    beta1: 0.9,\n    beta2: 0.999,\n    epsilon: 1e-8,\n  };\n}\n\nexport type INeuralNetworkData = number[] | Float32Array | Partial<INumberHash>;\n\n// TODO: should be replaced by ITrainingDatum\nexport interface INeuralNetworkDatum<InputType, OutputType> {\n  input: InputType;\n  output: OutputType;\n}\n\nexport interface INeuralNetworkDatumFormatted<T> {\n  input: T;\n  output: T;\n}\n\nexport class NeuralNetwork<\n  InputType extends INeuralNetworkData,\n  OutputType extends INeuralNetworkData\n> {\n  options: INeuralNetworkOptions = defaults();\n  trainOpts: INeuralNetworkTrainOptions = trainDefaults();\n  sizes: number[] = [];\n  outputLayer = -1;\n  biases: Float32Array[] = [];\n  weights: Float32Array[][] = []; // weights for bias nodes\n  outputs: Float32Array[] = [];\n  // state for training\n  deltas: Float32Array[] = [];\n  changes: Float32Array[][] = []; // for momentum\n  errors: Float32Array[] = [];\n\n  errorCheckInterval = 1;\n\n  inputLookup: INumberHash | null = null;\n  inputLookupLength = 0;\n  outputLookup: INumberHash | null = null;\n  outputLookupLength = 0;\n\n  _formatInput: NeuralNetworkFormatter | null = null;\n  _formatOutput: NeuralNetworkFormatter | null = null;\n\n  runInput: (input: Float32Array) => Float32Array = (input: Float32Array) => {\n    this.setActivation();\n    return this.runInput(input);\n  };\n\n  calculateDeltas: (output: Float32Array) => void = (\n    output: Float32Array\n  ): void => {\n    this.setActivation();\n    return this.calculateDeltas(output);\n  };\n\n  // adam\n  biasChangesLow: Float32Array[] = [];\n  biasChangesHigh: Float32Array[] = [];\n  changesLow: Float32Array[][] = [];\n  changesHigh: Float32Array[][] = [];\n  iterations = 0;\n\n  constructor(\n    options: Partial<INeuralNetworkOptions & INeuralNetworkTrainOptions> = {}\n  ) {\n    this.options = { ...this.options, ...options };\n    this.updateTrainingOptions(options);\n\n    const { inputSize, hiddenLayers, outputSize } = this.options;\n    if (inputSize && outputSize) {\n      this.sizes = [inputSize].concat(hiddenLayers ?? []).concat([outputSize]);\n    }\n  }\n\n  /**\n   *\n   * Expects this.sizes to have been set\n   */\n  initialize(): void {\n    if (!this.sizes.length) {\n      throw new Error('Sizes must be set before initializing');\n    }\n\n    this.outputLayer = this.sizes.length - 1;\n    this.biases = new Array(this.outputLayer); // weights for bias nodes\n    this.weights = new Array(this.outputLayer);\n    this.outputs = new Array(this.outputLayer);\n\n    // state for training\n    this.deltas = new Array(this.outputLayer);\n    this.changes = new Array(this.outputLayer); // for momentum\n    this.errors = new Array(this.outputLayer);\n\n    for (let layerIndex = 0; layerIndex <= this.outputLayer; layerIndex++) {\n      const size = this.sizes[layerIndex];\n      this.deltas[layerIndex] = zeros(size);\n      this.errors[layerIndex] = zeros(size);\n      this.outputs[layerIndex] = zeros(size);\n\n      if (layerIndex > 0) {\n        this.biases[layerIndex] = randos(size);\n        this.weights[layerIndex] = new Array(size);\n        this.changes[layerIndex] = new Array(size);\n\n        for (let nodeIndex = 0; nodeIndex < size; nodeIndex++) {\n          const prevSize = this.sizes[layerIndex - 1];\n          this.weights[layerIndex][nodeIndex] = randos(prevSize);\n          this.changes[layerIndex][nodeIndex] = zeros(prevSize);\n        }\n      }\n    }\n\n    this.setActivation();\n    if (this.trainOpts.praxis === 'adam') {\n      this._setupAdam();\n    }\n  }\n\n  setActivation(activation?: NeuralNetworkActivation): void {\n    const value = activation ?? this.trainOpts.activation;\n    switch (value) {\n      case 'sigmoid':\n        this.runInput = this._runInputSigmoid;\n        this.calculateDeltas = this._calculateDeltasSigmoid;\n        break;\n      case 'relu':\n        this.runInput = this._runInputRelu;\n        this.calculateDeltas = this._calculateDeltasRelu;\n        break;\n      case 'leaky-relu':\n        this.runInput = this._runInputLeakyRelu;\n        this.calculateDeltas = this._calculateDeltasLeakyRelu;\n        break;\n      case 'tanh':\n        this.runInput = this._runInputTanh;\n        this.calculateDeltas = this._calculateDeltasTanh;\n        break;\n      default:\n        throw new Error(\n          `Unknown activation ${value}. Available activations are: 'sigmoid', 'relu', 'leaky-relu', 'tanh'`\n        );\n    }\n  }\n\n  get isRunnable(): boolean {\n    return this.sizes.length > 0;\n  }\n\n  run(input: Partial<InputType>): OutputType {\n    if (!this.isRunnable) {\n      throw new Error('network not runnable');\n    }\n    let formattedInput: Float32Array;\n    if (this.inputLookup) {\n      formattedInput = lookup.toArray(\n        this.inputLookup,\n        (input as unknown) as INumberHash,\n        this.inputLookupLength\n      );\n    } else {\n      formattedInput = (input as unknown) as Float32Array;\n    }\n    this.validateInput(formattedInput);\n    const output = this.runInput(formattedInput).slice(0);\n    if (this.outputLookup) {\n      return (lookup.toObject(\n        this.outputLookup,\n        output\n      ) as unknown) as OutputType;\n    }\n    return (output as unknown) as OutputType;\n  }\n\n  _runInputSigmoid(input: Float32Array): Float32Array {\n    this.outputs[0] = input; // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const activeLayer = this.sizes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n      const activeOutputs = this.outputs[layer];\n      for (let node = 0; node < activeLayer; node++) {\n        const weights = activeWeights[node];\n\n        let sum = activeBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        // sigmoid\n        activeOutputs[node] = 1 / (1 + Math.exp(-sum));\n      }\n      output = input = activeOutputs;\n    }\n    if (!output) {\n      throw new Error('output was empty');\n    }\n    return output;\n  }\n\n  _runInputRelu(input: Float32Array): Float32Array {\n    this.outputs[0] = input; // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const activeSize = this.sizes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n      const activeOutputs = this.outputs[layer];\n      for (let node = 0; node < activeSize; node++) {\n        const weights = activeWeights[node];\n\n        let sum = activeBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        // relu\n        activeOutputs[node] = sum < 0 ? 0 : sum;\n      }\n      output = input = activeOutputs;\n    }\n    if (!output) {\n      throw new Error('output was empty');\n    }\n    return output;\n  }\n\n  _runInputLeakyRelu(input: Float32Array): Float32Array {\n    this.outputs[0] = input; // set output state of input layer\n    const { leakyReluAlpha } = this.trainOpts;\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const activeSize = this.sizes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n      const activeOutputs = this.outputs[layer];\n      for (let node = 0; node < activeSize; node++) {\n        const weights = activeWeights[node];\n\n        let sum = activeBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        // leaky relu\n        activeOutputs[node] = Math.max(sum, leakyReluAlpha * sum);\n      }\n      output = input = activeOutputs;\n    }\n    if (!output) {\n      throw new Error('output was empty');\n    }\n    return output;\n  }\n\n  _runInputTanh(input: Float32Array): Float32Array {\n    this.outputs[0] = input; // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const activeSize = this.sizes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n      const activeOutputs = this.outputs[layer];\n      for (let node = 0; node < activeSize; node++) {\n        const weights = activeWeights[node];\n\n        let sum = activeBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        // tanh\n        activeOutputs[node] = Math.tanh(sum);\n      }\n      output = input = activeOutputs;\n    }\n    if (!output) {\n      throw new Error('output was empty');\n    }\n    return output;\n  }\n\n  /**\n   *\n   * Verifies network sizes are initialized\n   * If they are not it will initialize them based off the data set.\n   */\n  verifyIsInitialized(\n    preparedData: Array<INeuralNetworkDatumFormatted<Float32Array>>\n  ): void {\n    if (this.sizes.length && this.outputLayer > 0) return;\n\n    this.sizes = [];\n    this.sizes.push(preparedData[0].input.length);\n    if (!this.options.hiddenLayers) {\n      this.sizes.push(\n        Math.max(3, Math.floor(preparedData[0].input.length / 2))\n      );\n    } else {\n      this.options.hiddenLayers.forEach((size) => {\n        this.sizes.push(size);\n      });\n    }\n    this.sizes.push(preparedData[0].output.length);\n\n    this.initialize();\n  }\n\n  updateTrainingOptions(trainOpts: Partial<INeuralNetworkTrainOptions>): void {\n    const merged = { ...this.trainOpts, ...trainOpts };\n    this.validateTrainingOptions(merged);\n    this.trainOpts = merged;\n    this.setLogMethod(this.trainOpts.log);\n  }\n\n  validateTrainingOptions(options: INeuralNetworkTrainOptions): void {\n    const validations: { [fnName: string]: () => boolean } = {\n      activation: () => {\n        return ['sigmoid', 'relu', 'leaky-relu', 'tanh'].includes(\n          options.activation\n        );\n      },\n      iterations: () => {\n        const val = options.iterations;\n        return typeof val === 'number' && val > 0;\n      },\n      errorThresh: () => {\n        const val = options.errorThresh;\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      log: () => {\n        const val = options.log;\n        return typeof val === 'function' || typeof val === 'boolean';\n      },\n      logPeriod: () => {\n        const val = options.logPeriod;\n        return typeof val === 'number' && val > 0;\n      },\n      leakyReluAlpha: () => {\n        const val = options.leakyReluAlpha;\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      learningRate: () => {\n        const val = options.learningRate;\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      momentum: () => {\n        const val = options.momentum;\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      callback: () => {\n        const val = options.callback;\n        return typeof val === 'function' || val === undefined;\n      },\n      callbackPeriod: () => {\n        const val = options.callbackPeriod;\n        return typeof val === 'number' && val > 0;\n      },\n      timeout: () => {\n        const val = options.timeout;\n        return typeof val === 'number' && val > 0;\n      },\n      praxis: () => {\n        const val = options.praxis;\n        return !val || val === 'adam';\n      },\n      beta1: () => {\n        const val = options.beta1;\n        return val > 0 && val < 1;\n      },\n      beta2: () => {\n        const val = options.beta2;\n        return val > 0 && val < 1;\n      },\n      epsilon: () => {\n        const val = options.epsilon;\n        return val > 0 && val < 1;\n      },\n    };\n    for (const p in validations) {\n      const v = (options as unknown) as { [v: string]: string };\n      if (!validations[p]()) {\n        throw new Error(\n          `[${p}, ${v[p]}] is out of normal training range, your network will probably not train.`\n        );\n      }\n    }\n  }\n\n  /**\n   *\n   *  Gets JSON of trainOpts object\n   *    NOTE: Activation is stored directly on JSON object and not in the training options\n   */\n  getTrainOptsJSON(): INeuralNetworkTrainOptionsJSON {\n    const {\n      activation,\n      iterations,\n      errorThresh,\n      log,\n      logPeriod,\n      leakyReluAlpha,\n      learningRate,\n      momentum,\n      callbackPeriod,\n      timeout,\n      praxis,\n      beta1,\n      beta2,\n      epsilon,\n    } = this.trainOpts;\n    return {\n      activation,\n      iterations,\n      errorThresh,\n      log:\n        typeof log === 'function'\n          ? true\n          : typeof log === 'boolean'\n          ? log\n          : false,\n      logPeriod,\n      leakyReluAlpha,\n      learningRate,\n      momentum,\n      callbackPeriod,\n      timeout: timeout === Infinity ? 'Infinity' : timeout,\n      praxis,\n      beta1,\n      beta2,\n      epsilon,\n    };\n  }\n\n  setLogMethod(log: boolean | ((state: INeuralNetworkState) => void)): void {\n    if (typeof log === 'function') {\n      this.trainOpts.log = log;\n    } else if (log) {\n      this.trainOpts.log = this.logTrainingStatus;\n    } else {\n      this.trainOpts.log = false;\n    }\n  }\n\n  logTrainingStatus(status: INeuralNetworkState): void {\n    console.log(\n      `iterations: ${status.iterations}, training error: ${status.error}`\n    );\n  }\n\n  calculateTrainingError(\n    data: Array<INeuralNetworkDatumFormatted<Float32Array>>\n  ): number {\n    let sum = 0;\n    for (let i = 0; i < data.length; ++i) {\n      sum += this.trainPattern(data[i], true) as number;\n    }\n    return sum / data.length;\n  }\n\n  trainPatterns(data: Array<INeuralNetworkDatumFormatted<Float32Array>>): void {\n    for (let i = 0; i < data.length; ++i) {\n      this.trainPattern(data[i]);\n    }\n  }\n\n  trainingTick(\n    data: Array<INeuralNetworkDatumFormatted<Float32Array>>,\n    status: INeuralNetworkState,\n    endTime: number\n  ): boolean {\n    const {\n      callback,\n      callbackPeriod,\n      errorThresh,\n      iterations,\n      log,\n      logPeriod,\n    } = this.trainOpts;\n\n    if (\n      status.iterations >= iterations ||\n      status.error <= errorThresh ||\n      Date.now() >= endTime\n    ) {\n      return false;\n    }\n\n    status.iterations++;\n\n    if (log && status.iterations % logPeriod === 0) {\n      status.error = this.calculateTrainingError(data);\n      (log as (state: INeuralNetworkState) => void)(status);\n    } else if (status.iterations % this.errorCheckInterval === 0) {\n      status.error = this.calculateTrainingError(data);\n    } else {\n      this.trainPatterns(data);\n    }\n\n    if (callback && status.iterations % callbackPeriod === 0) {\n      callback({\n        iterations: status.iterations,\n        error: status.error,\n      });\n    }\n    return true;\n  }\n\n  prepTraining(\n    data: Array<INeuralNetworkDatum<InputType, OutputType>>,\n    options: Partial<INeuralNetworkTrainOptions> = {}\n  ): INeuralNetworkPreppedTrainingData<Float32Array> {\n    this.updateTrainingOptions(options);\n    const preparedData = this.formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized(preparedData);\n    this.validateData(preparedData);\n    return {\n      preparedData,\n      status,\n      endTime,\n    };\n  }\n\n  train(\n    data: Array<INeuralNetworkDatum<Partial<InputType>, Partial<OutputType>>>,\n    options: Partial<INeuralNetworkTrainOptions> = {}\n  ): INeuralNetworkState {\n    const { preparedData, status, endTime } = this.prepTraining(\n      data as Array<INeuralNetworkDatum<InputType, OutputType>>,\n      options\n    );\n\n    while (true) {\n      if (!this.trainingTick(preparedData, status, endTime)) {\n        break;\n      }\n    }\n    return status;\n  }\n\n  async trainAsync(\n    data: Array<INeuralNetworkDatum<InputType, OutputType>>,\n    options: Partial<INeuralNetworkTrainOptions> = {}\n  ): Promise<ITrainingStatus> {\n    const { preparedData, status, endTime } = this.prepTraining(data, options);\n\n    return await new Promise((resolve, reject) => {\n      try {\n        const thawedTrain: Thaw = new Thaw(\n          new Array(this.trainOpts.iterations),\n          {\n            delay: true,\n            each: () =>\n              this.trainingTick(preparedData, status, endTime) ||\n              thawedTrain.stop(),\n            done: () => resolve(status),\n          }\n        );\n        thawedTrain.tick();\n      } catch (trainError) {\n        reject(trainError);\n      }\n    });\n  }\n\n  trainPattern(\n    value: INeuralNetworkDatumFormatted<Float32Array>,\n    logErrorRate?: boolean\n  ): number | null {\n    // forward propagate\n    this.runInput(value.input);\n\n    // back propagate\n    this.calculateDeltas(value.output);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return mse(this.errors[this.outputLayer]);\n    }\n    return null;\n  }\n\n  _calculateDeltasSigmoid(target: Float32Array): void {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const activeSize = this.sizes[layer];\n      const activeOutput = this.outputs[layer];\n      const activeError = this.errors[layer];\n      const activeDeltas = this.deltas[layer];\n      const nextLayer = this.weights[layer + 1];\n\n      for (let node = 0; node < activeSize; node++) {\n        const output = activeOutput[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        } else {\n          const deltas = this.deltas[layer + 1];\n          for (let k = 0; k < deltas.length; k++) {\n            error += deltas[k] * nextLayer[k][node];\n          }\n        }\n        activeError[node] = error;\n        activeDeltas[node] = error * output * (1 - output);\n      }\n    }\n  }\n\n  _calculateDeltasRelu(target: Float32Array): void {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const currentSize = this.sizes[layer];\n      const currentOutputs = this.outputs[layer];\n      const nextWeights = this.weights[layer + 1];\n      const nextDeltas = this.deltas[layer + 1];\n      const currentErrors = this.errors[layer];\n      const currentDeltas = this.deltas[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        const output = currentOutputs[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        } else {\n          for (let k = 0; k < nextDeltas.length; k++) {\n            error += nextDeltas[k] * nextWeights[k][node];\n          }\n        }\n        currentErrors[node] = error;\n        currentDeltas[node] = output > 0 ? error : 0;\n      }\n    }\n  }\n\n  _calculateDeltasLeakyRelu(target: Float32Array): void {\n    const alpha = this.trainOpts.leakyReluAlpha;\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const currentSize = this.sizes[layer];\n      const currentOutputs = this.outputs[layer];\n      const nextDeltas = this.deltas[layer + 1];\n      const nextWeights = this.weights[layer + 1];\n      const currentErrors = this.errors[layer];\n      const currentDeltas = this.deltas[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        const output = currentOutputs[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        } else {\n          for (let k = 0; k < nextDeltas.length; k++) {\n            error += nextDeltas[k] * nextWeights[k][node];\n          }\n        }\n        currentErrors[node] = error;\n        currentDeltas[node] = output > 0 ? error : alpha * error;\n      }\n    }\n  }\n\n  _calculateDeltasTanh(target: Float32Array): void {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const currentSize = this.sizes[layer];\n      const currentOutputs = this.outputs[layer];\n      const nextDeltas = this.deltas[layer + 1];\n      const nextWeights = this.weights[layer + 1];\n      const currentErrors = this.errors[layer];\n      const currentDeltas = this.deltas[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        const output = currentOutputs[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        } else {\n          for (let k = 0; k < nextDeltas.length; k++) {\n            error += nextDeltas[k] * nextWeights[k][node];\n          }\n        }\n        currentErrors[node] = error;\n        currentDeltas[node] = (1 - output * output) * error;\n      }\n    }\n  }\n\n  /**\n   *\n   * Changes weights of networks\n   */\n  adjustWeights(): void {\n    const { learningRate, momentum } = this.trainOpts;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const incoming = this.outputs[layer - 1];\n      const activeSize = this.sizes[layer];\n      const activeDelta = this.deltas[layer];\n      const activeChanges = this.changes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n\n      for (let node = 0; node < activeSize; node++) {\n        const delta = activeDelta[node];\n\n        for (let k = 0; k < incoming.length; k++) {\n          let change = activeChanges[node][k];\n\n          change = learningRate * delta * incoming[k] + momentum * change;\n\n          activeChanges[node][k] = change;\n          activeWeights[node][k] += change;\n        }\n        activeBiases[node] += learningRate * delta;\n      }\n    }\n  }\n\n  _setupAdam(): void {\n    this.biasChangesLow = [];\n    this.biasChangesHigh = [];\n    this.changesLow = [];\n    this.changesHigh = [];\n    this.iterations = 0;\n\n    for (let layer = 0; layer <= this.outputLayer; layer++) {\n      const size = this.sizes[layer];\n      if (layer > 0) {\n        this.biasChangesLow[layer] = zeros(size);\n        this.biasChangesHigh[layer] = zeros(size);\n        this.changesLow[layer] = new Array(size);\n        this.changesHigh[layer] = new Array(size);\n\n        for (let node = 0; node < size; node++) {\n          const prevSize = this.sizes[layer - 1];\n          this.changesLow[layer][node] = zeros(prevSize);\n          this.changesHigh[layer][node] = zeros(prevSize);\n        }\n      }\n    }\n\n    this.adjustWeights = this._adjustWeightsAdam;\n  }\n\n  _adjustWeightsAdam(): void {\n    this.iterations++;\n\n    const { iterations } = this;\n    const { beta1, beta2, epsilon, learningRate } = this.trainOpts;\n\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const incoming = this.outputs[layer - 1];\n      const currentSize = this.sizes[layer];\n      const currentDeltas = this.deltas[layer];\n      const currentChangesLow = this.changesLow[layer];\n      const currentChangesHigh = this.changesHigh[layer];\n      const currentWeights = this.weights[layer];\n      const currentBiases = this.biases[layer];\n      const currentBiasChangesLow = this.biasChangesLow[layer];\n      const currentBiasChangesHigh = this.biasChangesHigh[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        const delta = currentDeltas[node];\n\n        for (let k = 0; k < incoming.length; k++) {\n          const gradient = delta * incoming[k];\n          const changeLow =\n            currentChangesLow[node][k] * beta1 + (1 - beta1) * gradient;\n          const changeHigh =\n            currentChangesHigh[node][k] * beta2 +\n            (1 - beta2) * gradient * gradient;\n\n          const momentumCorrection =\n            changeLow / (1 - Math.pow(beta1, iterations));\n          const gradientCorrection =\n            changeHigh / (1 - Math.pow(beta2, iterations));\n\n          currentChangesLow[node][k] = changeLow;\n          currentChangesHigh[node][k] = changeHigh;\n          currentWeights[node][k] +=\n            (learningRate * momentumCorrection) /\n            (Math.sqrt(gradientCorrection) + epsilon);\n        }\n\n        const biasGradient = currentDeltas[node];\n        const biasChangeLow =\n          currentBiasChangesLow[node] * beta1 + (1 - beta1) * biasGradient;\n        const biasChangeHigh =\n          currentBiasChangesHigh[node] * beta2 +\n          (1 - beta2) * biasGradient * biasGradient;\n\n        const biasMomentumCorrection =\n          currentBiasChangesLow[node] / (1 - Math.pow(beta1, iterations));\n        const biasGradientCorrection =\n          currentBiasChangesHigh[node] / (1 - Math.pow(beta2, iterations));\n\n        currentBiasChangesLow[node] = biasChangeLow;\n        currentBiasChangesHigh[node] = biasChangeHigh;\n        currentBiases[node] +=\n          (learningRate * biasMomentumCorrection) /\n          (Math.sqrt(biasGradientCorrection) + epsilon);\n      }\n    }\n  }\n\n  validateData(data: Array<INeuralNetworkDatumFormatted<Float32Array>>): void {\n    const inputSize = this.sizes[0];\n    const outputSize = this.sizes[this.sizes.length - 1];\n    const { length } = data;\n    for (let i = 0; i < length; i++) {\n      const { input, output } = data[i];\n      if (input.length !== inputSize) {\n        throw new Error(\n          `input at index ${i} length ${input.length} must be ${inputSize}`\n        );\n      }\n      if (data[i].output.length !== outputSize) {\n        throw new Error(\n          `output at index ${i} length ${output.length} must be ${outputSize}`\n        );\n      }\n    }\n  }\n\n  validateInput(formattedInput: Float32Array): void {\n    const inputSize = this.sizes[0];\n    if (formattedInput.length !== inputSize) {\n      throw new Error(\n        `input length ${formattedInput.length} must match options.inputSize of ${inputSize}`\n      );\n    }\n  }\n\n  formatData(\n    data: Array<INeuralNetworkDatum<InputType, OutputType>>\n  ): Array<INeuralNetworkDatumFormatted<Float32Array>> {\n    if (!Array.isArray(data[0].input)) {\n      if (this.inputLookup) {\n        this.inputLookupLength = Object.keys(this.inputLookup).length;\n      } else {\n        const inputLookup = new LookupTable(data, 'input');\n        this.inputLookup = inputLookup.table;\n        this.inputLookupLength = inputLookup.length;\n      }\n    }\n\n    if (!Array.isArray(data[0].output)) {\n      if (this.outputLookup) {\n        this.outputLookupLength = Object.keys(this.outputLookup).length;\n      } else {\n        const lookup = new LookupTable(data, 'output');\n        this.outputLookup = lookup.table;\n        this.outputLookupLength = lookup.length;\n      }\n    }\n\n    if (!this._formatInput) {\n      this._formatInput = getTypedArrayFn(data[0].input, this.inputLookup);\n    }\n\n    if (!this._formatOutput) {\n      this._formatOutput = getTypedArrayFn(data[0].output, this.outputLookup);\n    }\n\n    // turn sparse hash input into arrays with 0s as filler\n    if (this._formatInput && this._formatOutput) {\n      const result: Array<INeuralNetworkDatumFormatted<Float32Array>> = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push({\n          input: (this._formatInput as (v: INumberHash) => Float32Array)(\n            (data[i].input as unknown) as INumberHash\n          ),\n          output: (this._formatOutput as (v: INumberHash) => Float32Array)(\n            (data[i].output as unknown) as INumberHash\n          ),\n        });\n      }\n      return result;\n    }\n    if (this._formatInput) {\n      const result: Array<INeuralNetworkDatumFormatted<Float32Array>> = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push({\n          input: (this._formatInput as (v: INumberHash) => Float32Array)(\n            (data[i].input as unknown) as INumberHash\n          ),\n          output: (data[i].output as unknown) as Float32Array,\n        });\n      }\n      return result;\n    }\n    if (this._formatOutput) {\n      const result: Array<INeuralNetworkDatumFormatted<Float32Array>> = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push({\n          input: (data[i].input as unknown) as Float32Array,\n          output: (this._formatOutput as (v: INumberHash) => Float32Array)(\n            (data[i].output as unknown) as INumberHash\n          ),\n        });\n      }\n      return result;\n    }\n    return (data as unknown) as Array<\n      INeuralNetworkDatumFormatted<Float32Array>\n    >;\n  }\n\n  addFormat(data: INeuralNetworkDatum<InputType, OutputType>): void {\n    if (!Array.isArray(data.input) || typeof data.input[0] !== 'number') {\n      this.inputLookup = lookup.addKeys(\n        (data.input as unknown) as INumberHash,\n        this.inputLookup ?? {}\n      );\n      if (this.inputLookup) {\n        this.inputLookupLength = Object.keys(this.inputLookup).length;\n      }\n    }\n    if (!Array.isArray(data.output) || typeof data.output[0] !== 'number') {\n      this.outputLookup = lookup.addKeys(\n        (data.output as unknown) as INumberHash,\n        this.outputLookup ?? {}\n      );\n      if (this.outputLookup) {\n        this.outputLookupLength = Object.keys(this.outputLookup).length;\n      }\n    }\n  }\n\n  test(\n    data: Array<INeuralNetworkDatum<Partial<InputType>, Partial<OutputType>>>\n  ): INeuralNetworkTestResult | INeuralNetworkBinaryTestResult {\n    const { preparedData } = this.prepTraining(\n      data as Array<INeuralNetworkDatum<InputType, OutputType>>\n    );\n    // for binary classification problems with one output node\n    const isBinary = preparedData[0].output.length === 1;\n    // for classification problems\n    const misclasses = [];\n    // run each pattern through the trained network and collect\n    // error and misclassification statistics\n    let errorSum = 0;\n    if (isBinary) {\n      let falsePos = 0;\n      let falseNeg = 0;\n      let truePos = 0;\n      let trueNeg = 0;\n\n      for (let i = 0; i < preparedData.length; i++) {\n        const output = this.runInput(preparedData[i].input);\n        const target = preparedData[i].output;\n        const actual = output[0] > this.options.binaryThresh ? 1 : 0;\n        const expected = target[0];\n\n        if (actual !== expected) {\n          const misclass = preparedData[i];\n          misclasses.push({\n            input: misclass.input,\n            output: misclass.output,\n            actual,\n            expected,\n          });\n        }\n\n        if (actual === 0 && expected === 0) {\n          trueNeg++;\n        } else if (actual === 1 && expected === 1) {\n          truePos++;\n        } else if (actual === 0 && expected === 1) {\n          falseNeg++;\n        } else if (actual === 1 && expected === 0) {\n          falsePos++;\n        }\n\n        errorSum += mse(\n          output.map((value, i) => {\n            return target[i] - value;\n          })\n        );\n      }\n\n      return {\n        error: errorSum / preparedData.length,\n        misclasses,\n        total: preparedData.length,\n        trueNeg,\n        truePos,\n        falseNeg,\n        falsePos,\n        precision: truePos > 0 ? truePos / (truePos + falsePos) : 0,\n        recall: truePos > 0 ? truePos / (truePos + falseNeg) : 0,\n        accuracy: (trueNeg + truePos) / preparedData.length,\n      };\n    }\n\n    for (let i = 0; i < preparedData.length; i++) {\n      const output = this.runInput(preparedData[i].input);\n      const target = preparedData[i].output;\n      const actual = output.indexOf(max(output));\n      const expected = target.indexOf(max(target));\n\n      if (actual !== expected) {\n        const misclass = preparedData[i];\n        misclasses.push({\n          input: misclass.input,\n          output: misclass.output,\n          actual,\n          expected,\n        });\n      }\n\n      errorSum += mse(\n        output.map((value, i) => {\n          return target[i] - value;\n        })\n      );\n    }\n    return {\n      error: errorSum / preparedData.length,\n      misclasses,\n      total: preparedData.length,\n    };\n  }\n\n  toJSON(): INeuralNetworkJSON {\n    if (!this.isRunnable) {\n      this.initialize();\n    }\n    // use Array.from, keeping json small\n    const jsonLayerWeights = this.weights.map((layerWeights) => {\n      return layerWeights.map((layerWeights) => Array.from(layerWeights));\n    });\n    const jsonLayerBiases = this.biases.map((layerBiases) =>\n      Array.from(layerBiases)\n    );\n    const jsonLayers: IJSONLayer[] = [];\n    const outputLength = this.sizes.length - 1;\n    for (let i = 0; i <= outputLength; i++) {\n      jsonLayers.push({\n        weights: jsonLayerWeights[i] ?? [],\n        biases: jsonLayerBiases[i] ?? [],\n      });\n    }\n    return {\n      type: 'NeuralNetwork',\n      sizes: [...this.sizes],\n      layers: jsonLayers,\n      inputLookup: this.inputLookup ? { ...this.inputLookup } : null,\n      inputLookupLength: this.inputLookupLength,\n      outputLookup: this.outputLookup ? { ...this.outputLookup } : null,\n      outputLookupLength: this.outputLookupLength,\n      options: { ...this.options },\n      trainOpts: this.getTrainOptsJSON(),\n    };\n  }\n\n  fromJSON(json: INeuralNetworkJSON): this {\n    this.options = { ...defaults(), ...json.options };\n    if (json.hasOwnProperty('trainOpts')) {\n      const trainOpts = {\n        ...json.trainOpts,\n        timeout:\n          json.trainOpts.timeout === 'Infinity'\n            ? Infinity\n            : json.trainOpts.timeout,\n      };\n      this.updateTrainingOptions(trainOpts);\n    }\n    this.sizes = json.sizes;\n    this.initialize();\n\n    this.inputLookup = json.inputLookup ? { ...json.inputLookup } : null;\n    this.inputLookupLength = json.inputLookupLength;\n    this.outputLookup = json.outputLookup ? { ...json.outputLookup } : null;\n    this.outputLookupLength = json.outputLookupLength;\n\n    const jsonLayers = json.layers;\n    const layerWeights = this.weights.map((layerWeights, layerIndex) => {\n      return jsonLayers[layerIndex].weights.map((layerWeights) =>\n        Float32Array.from(layerWeights)\n      );\n    });\n    const layerBiases = this.biases.map((layerBiases, layerIndex) =>\n      Float32Array.from(jsonLayers[layerIndex].biases)\n    );\n    for (let i = 0; i <= this.outputLayer; i++) {\n      this.weights[i] = layerWeights[i] || [];\n      this.biases[i] = layerBiases[i] || [];\n    }\n    return this;\n  }\n\n  toFunction(\n    cb?: (source: string) => string\n  ): (input: Partial<InputType>) => OutputType {\n    const { activation, leakyReluAlpha } = this.trainOpts;\n    let needsVar = false;\n    const nodeHandle = (layerIndex: number, nodeIndex: number): string => {\n      if (layerIndex === 0) {\n        return `(input[${nodeIndex}]||0)`;\n      }\n\n      const weights: Float32Array = this.weights[layerIndex][nodeIndex];\n      const bias: number = this.biases[layerIndex][nodeIndex];\n      if (!weights) {\n        throw new Error(\n          `weights at layerIndex ${layerIndex} & nodeIndex ${nodeIndex} not found`\n        );\n      }\n      if (!bias) {\n        throw new Error(\n          `bias as layerIndex ${layerIndex} & nodeIndex ${nodeIndex} not found`\n        );\n      }\n      const weightsArray: string[] = [];\n      weights.forEach((weight: number, subNodeIndex: number): void => {\n        if (weight < 0) {\n          weightsArray.push(\n            `${weight}*${nodeHandle(layerIndex - 1, subNodeIndex)}`\n          );\n        } else {\n          weightsArray.push(\n            `+${weight}*${nodeHandle(layerIndex - 1, subNodeIndex)}`\n          );\n        }\n      });\n      const result = `(${bias.toString()}${weightsArray.join('')})`;\n\n      switch (activation) {\n        case 'sigmoid':\n          return `1/(1+1/Math.exp(${result}))`;\n        case 'relu': {\n          needsVar = true;\n          return `((v=${result})<0?0:v)`;\n        }\n        case 'leaky-relu': {\n          needsVar = true;\n          return `Math.max((v=${result}),${leakyReluAlpha}*v)`;\n        }\n        case 'tanh':\n          return `Math.tanh(${result})`;\n        default:\n          throw new Error(\n            `Unknown activation ${activation}. Available activations are: 'sigmoid', 'relu', 'leaky-relu', 'tanh'`\n          );\n      }\n    };\n\n    function checkKeys(keys: string[]): void {\n      if (keys.find((v) => v.includes('\"'))) {\n        throw new Error(`key contains '\"', which is not compatible`);\n      }\n    }\n\n    const layersAsMath: string[] = [];\n    let result: string;\n\n    let inputLookup = '';\n    if (this.inputLookup) {\n      const keys = Object.keys(this.inputLookup);\n      checkKeys(keys);\n      inputLookup = `input = new Float32Array([${Object.keys(this.inputLookup)\n        .map((key) => `input[\"${key}\"]`)\n        .join(',')}]);`;\n    }\n    if (this.sizes.length < 1) throw new Error('No layers');\n    for (\n      let nodeIndex = 0;\n      nodeIndex < this.sizes[this.outputLayer];\n      nodeIndex++\n    ) {\n      layersAsMath.push(nodeHandle(this.outputLayer, nodeIndex));\n    }\n    if (this.outputLookup) {\n      const keys = Object.keys(this.outputLookup);\n      checkKeys(keys);\n      const values = keys\n        .map((key, i) => `\"${key}\":${layersAsMath[i]}`)\n        .join(',');\n      result = `{${values}}`;\n    } else {\n      result = `[${layersAsMath.join(',')}]`;\n    }\n\n    const source = `${inputLookup}${needsVar ? 'var v;' : ''}return ${result};`;\n    // eslint-disable-next-line @typescript-eslint/no-implied-eval,no-new-func\n    return new Function('input', cb ? cb(source) : source) as (\n      input: Partial<InputType>\n    ) => OutputType;\n  }\n}\n","import {\n  alias,\n  GPU,\n  GPUFunction,\n  IKernelFunctionThis,\n  IKernelMapRunShortcut,\n  IMappedKernelResult,\n  KernelOutput,\n  Texture,\n  utils,\n} from 'gpu.js';\nimport { ITrainingStatus } from './feed-forward';\nimport { INumberHash, lookup } from './lookup';\nimport {\n  IJSONLayer,\n  INeuralNetworkDatum,\n  INeuralNetworkJSON,\n  INeuralNetworkOptions,\n  INeuralNetworkPreppedTrainingData,\n  INeuralNetworkTrainOptions,\n  NeuralNetwork,\n} from './neural-network';\nimport { release } from './utilities/kernel';\n\nexport interface INeuralNetworkGPUDatumFormatted {\n  input: KernelOutput;\n  output: KernelOutput;\n}\n\nexport interface INeuralNetworkGPUPreppedTrainingData\n  extends INeuralNetworkPreppedTrainingData<KernelOutput> {\n  status: ITrainingStatus;\n  endTime: number;\n}\n\ninterface ISizedKernelThis extends IKernelFunctionThis {\n  constants: {\n    size: number;\n  };\n}\n\nfunction weightedSumSigmoid(\n  this: ISizedKernelThis,\n  weights: number[][],\n  biases: number[],\n  inputs: number[]\n): number {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // sigmoid\n  return 1 / (1 + Math.exp(-sum));\n}\n\nfunction weightedSumRelu(\n  this: ISizedKernelThis,\n  weights: number[][],\n  biases: number[],\n  inputs: number[]\n): number {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // relu\n  return sum < 0 ? 0 : sum;\n}\n\nfunction weightedSumLeakyRelu(\n  this: ISizedKernelThis,\n  weights: number[][],\n  biases: number[],\n  inputs: number[]\n): number {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // leaky relu\n  return sum < 0 ? 0 : 0.01 * sum;\n}\n\nfunction weightedSumTanh(\n  this: ISizedKernelThis,\n  weights: number[][],\n  biases: number[],\n  inputs: number[]\n): number {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // tanh\n  return Math.tanh(sum);\n}\n\nfunction calcErrorOutput(output: number, target: number): number {\n  return target - output;\n}\n\nfunction calcDeltasSigmoid(error: number, output: number): number {\n  // sigmoid derivative\n  return error * output * (1 - output);\n}\n\nfunction calcDeltasRelu(error: number, output: number): number {\n  // relu derivative\n  return output > 0 ? error : 0;\n}\n\nfunction calcDeltasLeakyRelu(error: number, output: number): number {\n  // leaky relu derivative\n  return output > 0 ? error : 0.01 * error;\n}\n\nfunction calcDeltasTanh(error: number, output: number): number {\n  // tanh derivative\n  return (1 - output * output) * error;\n}\n\nfunction calcError(\n  x: number,\n  size: number,\n  nextWeights: number[][],\n  nextDeltas: number[]\n): number {\n  let error = 0;\n  for (let k = 0; k < size; k++) {\n    error += nextDeltas[k] * nextWeights[k][x];\n  }\n  return error;\n}\n\ninterface ILearningKernelThis extends IKernelFunctionThis {\n  constants: {\n    momentum: number;\n    learningRate: number;\n  };\n}\n\nfunction calcChanges(\n  learningRate: number,\n  momentum: number,\n  previousChange: number,\n  delta: number,\n  previousOutput: number\n): number {\n  return learningRate * delta * previousOutput + momentum * previousChange;\n}\n\nfunction addWeights(change: number, weight: number): number {\n  return change + weight;\n}\n\nfunction addBiases(\n  this: ILearningKernelThis,\n  biases: number[],\n  deltas: number[]\n): number {\n  return (\n    biases[this.thread.x] + deltas[this.thread.x] * this.constants.learningRate\n  );\n}\n\n// mean squared error, reimplemented for GPU\nfunction mse(this: ISizedKernelThis, errors: number[]): number {\n  let sum = 0;\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += errors[i] ** 2;\n  }\n  return sum / this.constants.size;\n}\n\nexport interface INeuralNetworkGPUOptions extends INeuralNetworkOptions {\n  mode?: 'cpu' | 'gpu';\n}\n\nexport type BackPropagateOutput = (\n  this: IKernelFunctionThis,\n  outputs: KernelOutput,\n  targets: KernelOutput\n) => { result: KernelOutput; error: KernelOutput };\n\nexport type BackPropagateLayer = (\n  this: IKernelFunctionThis,\n  weights: KernelOutput,\n  outputs: KernelOutput,\n  deltas: KernelOutput\n) => { result: KernelOutput; error: KernelOutput };\n\nexport class NeuralNetworkGPU<InputType, OutputType> extends NeuralNetwork<\n  InputType,\n  OutputType\n> {\n  gpu: GPU;\n\n  texturizeInputData: (value: KernelOutput) => KernelOutput = () => {\n    throw new Error('not yet setup');\n  };\n\n  forwardPropagate: Array<\n    (\n      weights: KernelOutput,\n      biases: KernelOutput,\n      inputs: KernelOutput\n    ) => KernelOutput\n  > = [];\n\n  backwardPropagate: Array<BackPropagateOutput | BackPropagateLayer> = [];\n\n  changesPropagate: Array<\n    ((\n      this: IKernelFunctionThis<{\n        size: number;\n        learningRate: number;\n        momentum: number;\n      }>,\n      previousOutputs: number[],\n      deltas: number[],\n      weights: number[][],\n      previousChanges: number[][]\n    ) => IMappedKernelResult) &\n      IKernelMapRunShortcut<{ weights: number[][]; changes: number[][] }>\n  > = [];\n\n  biasesPropagate: Array<\n    (biases: KernelOutput, deltas: KernelOutput) => KernelOutput\n  > = [];\n\n  getMSE: (error: KernelOutput) => KernelOutput = () => {\n    throw new Error('not yet setup');\n  };\n\n  _addMSE: (sum: KernelOutput, error: KernelOutput) => KernelOutput = () => {\n    throw new Error('not yet setup');\n  };\n\n  _divideMSESum: (length: number, sum: KernelOutput) => KernelOutput = () => {\n    throw new Error('not yet setup');\n  };\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  outputs: KernelOutput[] = [];\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  deltas: KernelOutput[] = [];\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  errors: KernelOutput[] = [];\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  weights: KernelOutput[] = [];\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  changes: KernelOutput[] = [];\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  biases: KernelOutput[] = [];\n\n  constructor(options: Partial<INeuralNetworkGPUOptions> = {}) {\n    super(options);\n    this.errorCheckInterval = 100;\n    this.gpu = new GPU({ mode: options.mode });\n  }\n\n  initialize(): void {\n    super.initialize();\n    this.buildRunInput();\n    this.buildCalculateDeltas();\n    this.buildGetChanges();\n    this.buildChangeBiases();\n    this.buildGetMSE();\n  }\n\n  setActivation(): void {}\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  trainPattern(\n    value: INeuralNetworkGPUDatumFormatted,\n    logErrorRate?: boolean\n  ): KernelOutput | null {\n    // forward propagate\n    this.runInput(value.input);\n\n    // back propagate\n    this.calculateDeltas(value.output);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return this.getMSE(this.errors[this.outputLayer]);\n    }\n    return null;\n  }\n\n  calculateTrainingError(data: INeuralNetworkGPUDatumFormatted[]): number {\n    let sum = new Float32Array([0]) as KernelOutput;\n    for (let i = 0; i < data.length; ++i) {\n      const prevSum = sum;\n      const error = this.trainPattern(data[i], true) as KernelOutput;\n      sum = this._addMSE(sum, error);\n      release(error);\n      release(prevSum);\n    }\n    const result = this._divideMSESum(data.length, sum);\n    release(sum);\n    return (result instanceof Texture\n      ? (result.toArray() as number[])\n      : (result as number[]))[0];\n  }\n\n  adjustWeights(): void {\n    this.getChanges();\n    this.changeBiases();\n  }\n\n  buildRunInput(): void {\n    let weightedSum = null;\n\n    switch (this.trainOpts.activation) {\n      case 'sigmoid':\n        weightedSum = weightedSumSigmoid;\n        break;\n      case 'relu':\n        weightedSum = weightedSumRelu;\n        break;\n      case 'leaky-relu':\n        weightedSum = weightedSumLeakyRelu;\n        break;\n      case 'tanh':\n        weightedSum = weightedSumTanh;\n        break;\n      default:\n        throw new Error(\n          `Unknown activation ${this.trainOpts.activation}. Available activations are: 'sigmoid', 'relu', 'leaky-relu', 'tanh'`\n        );\n    }\n\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.forwardPropagate[layer] = this.gpu.createKernel(weightedSum, {\n        output: [this.sizes[layer]],\n        pipeline: true,\n        constants: {\n          size: this.sizes[layer - 1],\n        },\n        immutable: true,\n      });\n    }\n\n    this.texturizeInputData = this.gpu.createKernel(\n      function (value: number[]): number {\n        return value[this.thread.x];\n      },\n      {\n        output: [this.sizes[1]],\n        pipeline: true,\n        immutable: true,\n      }\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  runInput = (input: KernelOutput): KernelOutput => {\n    let output;\n    this.outputs[0] = input;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      release(this.outputs[layer]);\n      this.outputs[layer] = this.forwardPropagate[layer](\n        this.weights[layer],\n        this.biases[layer],\n        input\n      );\n      output = input = this.outputs[layer];\n    }\n    return output;\n  };\n\n  buildCalculateDeltas(): void {\n    let calcDeltas: GPUFunction<[number, number]>;\n    switch (this.trainOpts.activation) {\n      case 'sigmoid':\n        calcDeltas = calcDeltasSigmoid;\n        break;\n      case 'relu':\n        calcDeltas = calcDeltasRelu;\n        break;\n      case 'leaky-relu':\n        calcDeltas = calcDeltasLeakyRelu;\n        break;\n      case 'tanh':\n        calcDeltas = calcDeltasTanh;\n        break;\n      default:\n        throw new Error(\n          `Unknown activation ${this.trainOpts.activation}. Available activations are: 'sigmoid', 'relu', 'leaky-relu', 'tanh'`\n        );\n    }\n\n    calcDeltas = alias(\n      utils.getMinifySafeName(() => calcDeltas),\n      calcDeltas\n    );\n    this.gpu.addFunction(calcDeltas);\n    for (let layer = this.outputLayer; layer > 0; layer--) {\n      if (layer === this.outputLayer) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        this.backwardPropagate[this.outputLayer] = this.gpu.createKernelMap(\n          {\n            error: calcErrorOutput,\n          },\n          function (\n            this: IKernelFunctionThis,\n            outputs: number[],\n            targets: number[]\n          ): number {\n            const output = outputs[this.thread.x];\n            const target = targets[this.thread.x];\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-expect-error\n            return calcDeltas(calcErrorOutput(output, target), output);\n          },\n          {\n            output: [this.sizes[this.outputLayer]],\n            pipeline: true,\n            immutable: true,\n          }\n        );\n      } else {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        this.backwardPropagate[layer] = this.gpu.createKernelMap(\n          {\n            error: calcError,\n          },\n          function (\n            this: ISizedKernelThis,\n            nextWeights: number[][],\n            outputs: number[],\n            nextDeltas: number[]\n          ): number {\n            const output = outputs[this.thread.x];\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-expect-error\n            return calcDeltas(\n              calcError(\n                this.thread.x,\n                this.constants.size,\n                nextWeights,\n                nextDeltas\n              ),\n              output\n            );\n          },\n          {\n            output: [this.sizes[layer]],\n            pipeline: true,\n            constants: {\n              size: this.sizes[layer + 1],\n            },\n            immutable: true,\n          }\n        );\n      }\n    }\n  }\n\n  calculateDeltas = (target: KernelOutput): void => {\n    for (let layer = this.outputLayer; layer > 0; layer--) {\n      release(this.deltas[layer]);\n      release(this.errors[layer]);\n\n      let output;\n      if (layer === this.outputLayer) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        output = this.backwardPropagate[layer](this.outputs[layer], target);\n      } else {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        output = this.backwardPropagate[layer](\n          this.weights[layer + 1],\n          this.outputs[layer],\n          this.deltas[layer + 1]\n        );\n      }\n      this.deltas[layer] = output.result;\n      this.errors[layer] = output.error;\n    }\n  };\n\n  buildGetChanges(): void {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      this.changesPropagate[layer] = this.gpu.createKernelMap(\n        {\n          weights: addWeights,\n          changes: calcChanges,\n        },\n        function (\n          this: IKernelFunctionThis<{\n            size: number;\n            learningRate: number;\n            momentum: number;\n          }>,\n          previousOutputs: number[],\n          deltas: number[],\n          weights: number[][],\n          previousChanges: number[][]\n        ) {\n          const change = calcChanges(\n            this.constants.learningRate,\n            this.constants.momentum,\n            previousChanges[this.thread.y][this.thread.x],\n            deltas[this.thread.y],\n            previousOutputs[this.thread.x]\n          );\n          return addWeights(change, weights[this.thread.y][this.thread.x]);\n        },\n        {\n          output: [this.sizes[layer - 1], this.sizes[layer]],\n          pipeline: true,\n          constants: {\n            size: this.sizes[layer - 1],\n            learningRate: this.trainOpts.learningRate,\n            momentum: this.trainOpts.momentum,\n          },\n          immutable: true,\n        }\n      );\n    }\n  }\n\n  getChanges(): void {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const weights = this.weights[layer];\n      const changes = this.changes[layer];\n      const output = this.changesPropagate[layer](\n        this.outputs[layer - 1],\n        this.deltas[layer],\n        weights,\n        changes\n      );\n      release(weights);\n      release(changes);\n      this.weights[layer] = output.weights;\n      this.changes[layer] = output.changes;\n      release(output.result);\n    }\n  }\n\n  buildChangeBiases(): void {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.biasesPropagate[layer] = this.gpu.createKernel(addBiases, {\n        output: [this.sizes[layer]],\n        pipeline: true,\n        constants: {\n          learningRate: this.trainOpts.learningRate,\n        },\n        immutable: true,\n      });\n    }\n  }\n\n  changeBiases(): void {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const biases = this.biases[layer];\n      this.biases[layer] = this.biasesPropagate[layer](\n        biases,\n        this.deltas[layer]\n      );\n      release(biases);\n    }\n  }\n\n  buildGetMSE(): void {\n    this.getMSE = this.gpu.createKernel(mse, {\n      output: [1],\n      constants: {\n        size: this.sizes[this.outputLayer],\n      },\n      pipeline: true,\n      immutable: true,\n    });\n    this._addMSE = this.gpu.createKernel(\n      function (value1: number[], value2: number[]): number {\n        return value1[0] + value2[0];\n      },\n      {\n        output: [1],\n        pipeline: true,\n        immutable: true,\n      }\n    );\n    this._divideMSESum = this.gpu.createKernel(\n      function (length: number, mseSum: number[]): number {\n        const value = mseSum[0];\n        if (value > 0) {\n          return value / length;\n        }\n        return 0;\n      },\n      {\n        output: [1],\n      }\n    );\n  }\n\n  run(input: InputType): OutputType {\n    if (!this.isRunnable) {\n      throw new Error('network not runnable');\n    }\n    let formattedInput: Float32Array;\n    if (this.inputLookup) {\n      formattedInput = lookup.toArray(\n        this.inputLookup,\n        (input as unknown) as INumberHash,\n        this.inputLookupLength\n      );\n    } else {\n      formattedInput = (input as unknown) as Float32Array;\n    }\n    this.validateInput(formattedInput);\n    const outputTextures = this.runInput(formattedInput);\n    const output =\n      outputTextures instanceof Texture\n        ? outputTextures.toArray()\n        : outputTextures;\n\n    if (this.outputLookup) {\n      return (lookup.toObject(\n        this.outputLookup,\n        output as Float32Array\n      ) as unknown) as OutputType;\n    }\n\n    return (output as unknown) as OutputType;\n  }\n\n  // @ts-expect-error the underlying network works as normal, but we are working on the GPU\n  prepTraining(\n    data: Array<INeuralNetworkDatum<InputType, OutputType>>,\n    options: Partial<INeuralNetworkTrainOptions> = {}\n  ): INeuralNetworkGPUPreppedTrainingData {\n    this.updateTrainingOptions(options);\n    const preparedData = this.formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized(preparedData);\n\n    const texturizeOutputData = this.gpu.createKernel(\n      function (value: number[]): number {\n        return value[this.thread.x];\n      },\n      {\n        output: [preparedData[0].output.length],\n        pipeline: true,\n        immutable: true,\n      }\n    );\n    return {\n      preparedData: preparedData.map((set) => ({\n        input: this.texturizeInputData(set.input),\n        output: texturizeOutputData(set.output),\n      })),\n      status,\n      endTime,\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  toFunction(): (input: InputType) => OutputType {\n    throw new Error(\n      `${this.constructor.name}-toFunction is not yet implemented`\n    );\n  }\n\n  toJSON(): INeuralNetworkJSON {\n    if (this.sizes === null) {\n      this.initialize();\n    }\n    // use Array.from, keeping json small\n    const jsonLayerWeights = this.weights.map((layerWeights) => {\n      return (layerWeights instanceof Texture\n        ? (layerWeights.toArray() as Float32Array[])\n        : (layerWeights as Float32Array[])\n      ).map((layerWeights) => Array.from(layerWeights));\n    });\n    const jsonLayerBiases = this.biases.map((layerBiases) =>\n      Array.from(\n        layerBiases instanceof Texture\n          ? (layerBiases.toArray() as Float32Array)\n          : (layerBiases as Float32Array)\n      )\n    );\n    const jsonLayers: IJSONLayer[] = [];\n    for (let i = 0; i <= this.outputLayer; i++) {\n      jsonLayers.push({\n        weights: jsonLayerWeights[i] ?? [],\n        biases: jsonLayerBiases[i] ?? [],\n      });\n    }\n    return {\n      type: 'NeuralNetworkGPU',\n      sizes: [...this.sizes],\n      layers: jsonLayers,\n      inputLookup: this.inputLookup ? { ...this.inputLookup } : null,\n      inputLookupLength: this.inputLookupLength,\n      outputLookup: this.outputLookup ? { ...this.outputLookup } : null,\n      outputLookupLength: this.outputLookupLength,\n      options: { ...this.options },\n      trainOpts: this.getTrainOptsJSON(),\n    };\n  }\n}\n","import { KernelOutput } from 'gpu.js';\n\nimport { Internal } from './internal';\nimport { release } from '../utilities/kernel';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport class RecurrentConnection extends Internal {\n  settings: ILayerSettings = {};\n  layer: ILayer | null = null;\n  setLayer(layer: ILayer): void {\n    this.layer = layer;\n  }\n\n  get width(): number {\n    if (!this.layer) throw new Error('layer not set');\n    return this.layer.width;\n  }\n\n  set width(value: number) {\n    throw new Error(`${this.constructor.name}-width is not yet implemented`);\n  }\n\n  get height(): number {\n    if (!this.layer) throw new Error('layer not set');\n    return this.layer.height;\n  }\n\n  set height(value: number) {\n    throw new Error(`${this.constructor.name}-height is not yet implemented`);\n  }\n\n  get deltas(): KernelOutput {\n    if (!this.layer) throw new Error('layer not set');\n    return this.layer.deltas;\n  }\n\n  set deltas(deltas: KernelOutput) {\n    if (!this.layer) throw new Error('layer not set');\n    release(this.layer.deltas);\n    this.layer.deltas = deltas;\n  }\n\n  get weights(): KernelOutput {\n    if (!this.layer) throw new Error('layer not set');\n    return this.layer.weights as KernelOutput;\n  }\n\n  set weights(weights: KernelOutput) {\n    if (!this.layer) throw new Error('layer not set');\n    release(this.layer.weights);\n    this.layer.weights = weights;\n  }\n\n  predict(): void {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare(): void {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(): void {\n    throw new Error('no longer using');\n  }\n\n  setupKernels(): void {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels(): void {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n}\n","import { RecurrentConnection } from './layer/recurrent-connection';\nimport {\n  IRecurrentInput,\n  RecurrentInput,\n  RecurrentZeros,\n  ILayer,\n  ILayerSettings,\n} from './layer';\nimport {\n  Activation,\n  EntryPoint,\n  EntryPointType,\n  Filter,\n  Internal,\n  InternalModel,\n  Model,\n  Modifier,\n  Operator,\n  Target,\n} from './layer/types';\nimport { flattenLayers } from './utilities/flatten-layers';\nimport {\n  FeedForward,\n  IFeedForwardOptions,\n  IFeedForwardTrainingOptions,\n  ITrainingStatus,\n} from './feed-forward';\nimport { release, clone } from './utilities/kernel';\nimport { KernelOutput, Texture, TextureArrayOutput } from 'gpu.js';\nimport { OperatorType } from './layer/operator';\nimport { ModifierType } from './layer/modifier';\nimport { FilterType } from './layer/filter';\nimport { ActivationType } from './layer/activation';\nimport { TargetType } from './layer/target';\n\nexport interface IRecurrentTrainingOptions\n  extends IFeedForwardTrainingOptions {}\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-expect-error\nexport interface IRecurrentOptions extends IFeedForwardOptions {\n  hiddenLayers: Array<\n    (\n      inputLayer: ILayer,\n      recurrentInput: IRecurrentInput,\n      index: number\n    ) => ILayer\n  >;\n}\n\nexport interface IRecurrentPreppedTrainingData<T> {\n  status: ITrainingStatus;\n  preparedData: T[][];\n  endTime: number;\n}\n\nexport class Recurrent<\n  T extends TextureArrayOutput = TextureArrayOutput\n> extends FeedForward {\n  trainOpts: IRecurrentTrainingOptions = {};\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  options: IRecurrentOptions;\n  _outputConnection: RecurrentConnection | null = null;\n  _layerSets: ILayer[][] = [];\n  _hiddenLayerOutputIndices: number[] = [];\n  _model: ILayer[] | null = null;\n\n  // TODO: use generics in extend\n  constructor(\n    options: Partial<IRecurrentOptions & IRecurrentTrainingOptions> = {}\n  ) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    super(options);\n  }\n\n  _connectLayers(): {\n    inputLayer: ILayer;\n    hiddenLayers: ILayer[];\n    outputLayer: ILayer;\n  } {\n    if (!this.options.inputLayer) {\n      throw new Error('inputLayer not found');\n    }\n    if (!this.options.outputLayer) {\n      throw new Error('outputLayer not found');\n    }\n    const inputLayer = this.options.inputLayer();\n    const hiddenLayers = this._connectHiddenLayers(inputLayer);\n    const outputLayer = this.options.outputLayer(\n      hiddenLayers[hiddenLayers.length - 1],\n      -1\n    );\n    return {\n      inputLayer,\n      hiddenLayers,\n      outputLayer,\n    };\n  }\n\n  _connectLayersDeep(): ILayer[] {\n    const layers: ILayer[] = [];\n    const previousLayers = this._layerSets[this._layerSets.length - 1];\n    let usedHiddenLayerOutputIndex = 0;\n\n    function findInputLayer(inputLayer: ILayer) {\n      const index = previousLayers.indexOf(inputLayer);\n      if (index < 0) throw new Error('unable to find layer');\n      return layers[index];\n    }\n\n    function layerSettings(layer: ILayer): ILayerSettings {\n      return {\n        ...layer.settings,\n        weights: null,\n        deltas: null,\n        praxis: null,\n      };\n    }\n\n    for (let i = 0; i < previousLayers.length; i++) {\n      const previousLayer = previousLayers[i];\n      let layer: ILayer;\n\n      if (previousLayer instanceof Activation) {\n        layer = new (previousLayer.constructor as ActivationType)(\n          findInputLayer(previousLayer.inputLayer),\n          layerSettings(previousLayer)\n        );\n      } else if (previousLayer instanceof EntryPoint) {\n        layer = new (previousLayer.constructor as EntryPointType)(\n          layerSettings(previousLayer)\n        );\n      } else if (previousLayer instanceof Filter) {\n        layer = new (previousLayer.constructor as FilterType)(\n          layerSettings(previousLayer.inputLayer),\n          findInputLayer(previousLayer.inputLayer)\n        );\n      } else if (previousLayer instanceof Internal) {\n        const previousHiddenLayerOutput =\n          previousLayers[\n            this._hiddenLayerOutputIndices[usedHiddenLayerOutputIndex++]\n          ];\n        if (previousLayer instanceof RecurrentConnection) {\n          throw new Error('unfinished');\n        } else if (previousLayer instanceof RecurrentInput) {\n          layer = new RecurrentInput(previousHiddenLayerOutput);\n        } else if (previousLayer instanceof RecurrentZeros) {\n          layer = new RecurrentInput(previousHiddenLayerOutput);\n        } else {\n          throw new Error(\n            `hidden layer ${previousLayer.constructor.name} extends unknown hidden layer`\n          );\n        }\n      } else if (\n        previousLayer instanceof InternalModel ||\n        previousLayer instanceof Model\n      ) {\n        layer = previousLayer;\n      } else if (previousLayer instanceof Modifier) {\n        layer = new (previousLayer.constructor as ModifierType)(\n          findInputLayer(previousLayer.inputLayer),\n          layerSettings(previousLayer.inputLayer)\n        );\n      } else if (previousLayer instanceof Operator) {\n        layer = new (previousLayer.constructor as OperatorType)(\n          findInputLayer(previousLayer.inputLayer1),\n          findInputLayer(previousLayer.inputLayer2),\n          layerSettings(previousLayer)\n        );\n      } else if (previousLayer instanceof Target) {\n        layer = new (previousLayer.constructor as TargetType)(\n          layerSettings(previousLayer),\n          findInputLayer(previousLayer.inputLayer)\n        );\n      } else {\n        throw new Error(\n          `hidden layer ${previousLayer.constructor.name} extends unknown hidden layer`\n        );\n      }\n      layers.push(layer);\n    }\n\n    return layers;\n  }\n\n  _connectHiddenLayers(previousLayer: ILayer): ILayer[] {\n    const hiddenLayers = [];\n\n    if (!this.options.hiddenLayers) throw new Error('hiddenLayers not defined');\n\n    for (let i = 0; i < this.options.hiddenLayers.length; i++) {\n      const recurrentInput = new RecurrentZeros();\n      const hiddenLayer = this.options.hiddenLayers[i](\n        previousLayer,\n        recurrentInput,\n        i\n      );\n      previousLayer = hiddenLayer;\n      hiddenLayers.push(hiddenLayer);\n    }\n\n    return hiddenLayers;\n  }\n\n  initialize(): void {\n    this._outputConnection = new RecurrentConnection();\n    let layerSet: ILayer[];\n    if (this.options.layers) {\n      layerSet = this._connectOptionsLayers();\n    } else {\n      const { inputLayer, hiddenLayers, outputLayer } = this._connectLayers();\n      layerSet = flattenLayers([inputLayer, ...hiddenLayers, outputLayer]);\n      this._hiddenLayerOutputIndices = hiddenLayers.map((l) =>\n        layerSet.indexOf(l)\n      );\n      this._inputLayer = inputLayer;\n      this._hiddenLayers = hiddenLayers;\n      this._outputLayer = outputLayer;\n    }\n    this.layers = layerSet;\n    this._layerSets = [layerSet];\n    this._model = layerSet.filter(\n      (l) => l instanceof Model || l instanceof InternalModel\n    );\n    this.initializeLayers(layerSet);\n  }\n\n  initializeDeep(): void {\n    const layers = this._connectLayersDeep();\n    for (let i = 0; i < layers.length; i++) {\n      const layer = layers[i];\n      layer.setupKernels(true);\n      layer.reuseKernels(this._layerSets[0][i]);\n    }\n    this._layerSets.push(layers);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  run(inputs: T[]): T[] {\n    while (this._layerSets.length <= inputs.length) {\n      this.initializeDeep();\n    }\n    const result = this.runInputs(inputs);\n    if (result instanceof Texture) {\n      return result.toArray() as T[];\n    }\n    return result as T[];\n  }\n\n  runInput(input: KernelOutput): KernelOutput {\n    throw new Error('use .runInputs()');\n  }\n\n  runInputs(inputs: T[]): KernelOutput {\n    while (this._layerSets.length < inputs.length) {\n      this.initializeDeep();\n    }\n    const max = inputs.length - 1; // last output will be compared with last index\n    for (let x = 0; x <= max; x++) {\n      const layerSet = this._layerSets[x];\n      layerSet[0].predict(inputs[x]);\n      for (let i = 1; i < layerSet.length; i++) {\n        layerSet[i].predict();\n      }\n    }\n    const lastLayerUsed = this._layerSets[max];\n    const result = lastLayerUsed[lastLayerUsed.length - 1].weights;\n    this.end();\n    return result as KernelOutput;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  train(\n    data: T[][],\n    options: Partial<IRecurrentTrainingOptions> = {}\n  ): ITrainingStatus {\n    const { preparedData, status, endTime } = this._prepTraining(data, options);\n    let continueTicking = true;\n    const calculateError = (): number =>\n      this._calculateTrainingError(preparedData);\n    const trainPatters = (): void => this._trainPatterns(preparedData);\n    while (continueTicking) {\n      continueTicking = this._trainingTick(\n        status,\n        endTime,\n        calculateError,\n        trainPatters\n      );\n    }\n    return status;\n  }\n\n  end(): void {\n    const x = this._layerSets.length - 1;\n    const lastLayerSet = this._layerSets[x];\n    lastLayerSet[0].predict([new Float32Array([0])]);\n    for (let i = 1; i < lastLayerSet.length; i++) {\n      lastLayerSet[i].predict();\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  transferData(formattedData: T[][]): T[][] {\n    return formattedData;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  _prepTraining(\n    data: T[][],\n    options: Partial<IRecurrentTrainingOptions>\n  ): IRecurrentPreppedTrainingData<T> {\n    this._updateTrainingOptions(options);\n    const endTime = this.trainOpts.timeout\n      ? Date.now() + this.trainOpts.timeout\n      : 0;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized();\n\n    return {\n      preparedData: this.transferData(data),\n      status,\n      endTime,\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  _calculateTrainingError(data: T[][]): number {\n    if (!this.meanSquaredError) {\n      throw new Error('this.meanSquaredError not setup');\n    }\n    let sum: KernelOutput = new Float32Array(1);\n    for (let i = 0; i < data.length; ++i) {\n      const prevSum = sum;\n      const error = this._trainPattern(data[i], true) as KernelOutput;\n      sum = this.meanSquaredError.add(sum, error);\n      release(error);\n      release(prevSum);\n    }\n    const result = this.meanSquaredError.divide(data.length, sum);\n    release(sum);\n    if (result instanceof Texture) {\n      const resultArray = result.toArray() as number[];\n      return resultArray[0];\n    }\n    return (result as number[])[0];\n  }\n\n  // TODO: more types\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  formatData(data: Float32Array): Float32Array {\n    return data;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  _calculateDeltas(target: T[]): void {\n    const lastLayerSet = this._layerSets[this._layerSets.length - 1];\n    // Iterate from the second to last layer backwards, propagating 0's\n    for (let i = lastLayerSet.length - 2; i >= 0; i--) {\n      lastLayerSet[i].compare();\n    }\n\n    for (let x = target.length - 2; x >= 0; x--) {\n      const layerSet = this._layerSets[x];\n      layerSet[layerSet.length - 1].compare(target[x + 1]);\n      for (let i = layerSet.length - 2; i >= 0; i--) {\n        layerSet[i].compare();\n      }\n    }\n  }\n\n  adjustWeights(): void {\n    const _model = this._model as ILayer[];\n    for (let i = 0; i < _model.length; i++) {\n      _model[i].learn(this.options.learningRate ?? 0);\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  _trainPatterns(data: T[][]): void {\n    for (let i = 0; i < data.length; ++i) {\n      this._trainPattern(data[i], false);\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  _trainPattern(inputs: T[], logErrorRate: boolean): KernelOutput | null {\n    // forward propagate\n    this.runInputs(inputs);\n\n    // back propagate\n    this._calculateDeltas(inputs);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      if (!this.meanSquaredError) {\n        throw new Error('this.meanSquaredError not setup');\n      }\n      let error: KernelOutput = new Float32Array(1);\n      for (let i = 0, max = inputs.length - 2; i <= max; i++) {\n        const layerSet = this._layerSets[i];\n        const lastLayer = layerSet[layerSet.length - 1];\n        const prevError: KernelOutput = error;\n        error = this.meanSquaredError.addAbsolute(\n          prevError,\n          lastLayer.errors as KernelOutput\n        );\n        release(prevError);\n      }\n      return clone(this.meanSquaredError.divide(inputs.length, error));\n    }\n    return null;\n  }\n}\n","import { zeros } from '../../utilities/zeros';\n\nexport interface IMatrixJSON {\n  rows: number;\n  columns: number;\n  weights: number[];\n}\n/**\n * A matrix\n */\nexport class Matrix {\n  rows = 0;\n  columns = 0;\n  weights: Float32Array;\n  deltas: Float32Array;\n\n  constructor(rows?: number, columns?: number) {\n    if (rows) this.rows = rows;\n    if (columns) this.columns = columns;\n\n    this.weights = zeros(this.rows * this.columns);\n    this.deltas = zeros(this.rows * this.columns);\n  }\n\n  getWeight(row: number, col: number): number {\n    // slow but careful accessor function\n    // we want row-major order\n    const ix = this.columns * row + col;\n\n    if (ix < 0 || ix >= this.weights.length) {\n      throw new Error('get accessor is skewed');\n    }\n\n    return this.weights[ix];\n  }\n\n  setWeight(row: number, col: number, v: number): Matrix {\n    // slow but careful accessor function\n    const ix = this.columns * row + col;\n\n    if (ix < 0 || ix >= this.weights.length) {\n      throw new Error('set accessor is skewed');\n    }\n\n    this.weights[ix] = v;\n\n    return this;\n  }\n\n  getDelta(row: number, col: number): number {\n    // slow but careful accessor function\n    // we want row-major order\n    const ix = this.columns * row + col;\n\n    if (ix < 0 || ix >= this.deltas.length) {\n      throw new Error('get accessor is skewed');\n    }\n\n    return this.deltas[ix];\n  }\n\n  setDelta(row: number, col: number, v: number): Matrix {\n    // slow but careful accessor function\n    const ix = this.columns * row + col;\n\n    if (ix < 0 || ix >= this.weights.length) {\n      throw new Error('set accessor is skewed');\n    }\n\n    this.deltas[ix] = v;\n\n    return this;\n  }\n\n  toJSON(): IMatrixJSON {\n    return {\n      rows: this.rows,\n      columns: this.columns,\n      weights: Array.from(this.weights.slice(0)),\n    };\n  }\n\n  static fromJSON(json: IMatrixJSON): Matrix {\n    const matrix = new Matrix(json.rows, json.columns);\n\n    for (let i = 0, max = json.rows * json.columns; i < max; i++) {\n      matrix.weights[i] = json.weights[i]; // copy over weights\n    }\n\n    return matrix;\n  }\n\n  static fromArray(weights: Float32Array[] | number[][]): Matrix {\n    const matrix = new Matrix(weights.length, weights[0].length);\n    matrix.fromArray(weights);\n    return matrix;\n  }\n\n  deltasToArray(): number[][] {\n    return this.toArray('deltas');\n  }\n\n  weightsToArray(): number[][] {\n    return this.toArray('weights');\n  }\n\n  toArray(prop: 'weights' | 'deltas' = 'weights'): number[][] {\n    const result: number[][] = new Array(this.rows);\n    this.iterate({\n      row: (rowIndex): void => {\n        result[rowIndex] = new Array(this.columns);\n      },\n      column: (rowIndex, columnIndex): void => {\n        if (prop === 'weights') {\n          result[rowIndex][columnIndex] = this.getWeight(rowIndex, columnIndex);\n        } else if (prop === 'deltas') {\n          result[rowIndex][columnIndex] = this.getDelta(rowIndex, columnIndex);\n        }\n      },\n    });\n    return result;\n  }\n\n  fromArray(\n    array: number[][] | Float32Array[],\n    prop: 'weights' | 'deltas' = 'weights'\n  ): this {\n    if (array.length !== this.rows) {\n      throw new Error('rows do not match');\n    }\n    if (array[0].length !== this.columns) {\n      throw new Error('columns do not match');\n    }\n    this.iterate({\n      column: (rowIndex, columnIndex): void => {\n        const value = array[rowIndex][columnIndex];\n        if (typeof value !== 'number') {\n          throw new Error('value not number');\n        }\n        if (prop === 'weights') {\n          this.setWeight(rowIndex, columnIndex, value);\n        } else if (prop === 'deltas') {\n          this.setDelta(rowIndex, columnIndex, value);\n        }\n      },\n    });\n    return this;\n  }\n\n  iterate(callbacks: {\n    column?: (rowIndex: number, columnIndex: number) => void;\n    row?: (rowIndex: number) => void;\n  }): this {\n    const rows = this.rows;\n    const columns = this.columns;\n    for (let rowIndex = 0; rowIndex < rows; rowIndex++) {\n      if (callbacks.row) {\n        callbacks.row(rowIndex);\n      }\n      for (let columnIndex = 0; columnIndex < columns; columnIndex++) {\n        if (callbacks.column) {\n          callbacks.column(rowIndex, columnIndex);\n        }\n      }\n    }\n    return this;\n  }\n}\n","import { Matrix } from '.';\nimport { randomFloat } from '../../utilities/random';\n\n/** return Matrix but filled with random numbers from gaussian\n */\nexport class RandomMatrix extends Matrix {\n  std: number;\n\n  constructor(rows: number, columns: number, std: number) {\n    super(rows, columns);\n\n    this.std = std;\n\n    for (let i = 0, max = this.weights.length; i < max; i++) {\n      this.weights[i] = randomFloat(-std, std);\n    }\n  }\n}\n","import { Value, IRNNDatum } from '../recurrent/rnn-data-types';\n\nexport interface IDataFormatter {\n  indexTable: { [value: string]: number };\n  toIndexesInputOutput: (input: Value, output?: Value) => number[];\n  toIndexes: (input: string) => number[];\n  toCharacters: (output: number[]) => string[];\n  characters: Array<string | number>;\n  specialIndexes: number[];\n  toFunctionString: () => string;\n  formatDataIn: (input?: Value, output?: Value) => number[];\n  formatDataOut: (input: number[], output: number[]) => string;\n  format: (data: Array<IRNNDatum | Value>) => number[][];\n  isSetup: boolean;\n  toJSON: () => IDataFormatterJSON;\n}\n\nexport class DataFormatter implements IDataFormatter {\n  indexTable: { [key: string]: number; [key: number]: number } = {};\n  characterTable: { [key: number]: string | number | null } = {};\n  characters: Array<string | number> = [];\n  specialIndexes: number[] = [];\n  isSetup = false;\n\n  constructor(private values?: Array<IRNNDatum | Value>, maxThreshold = 0) {\n    if (values === undefined) return;\n\n    this.setup(values, maxThreshold);\n  }\n\n  setup(values: Array<IRNNDatum | Value>, maxThreshold = 0): void {\n    if (this.isSetup) throw new Error('DataFormatter is already setup');\n    this.values = values;\n    // go over all characters and keep track of all unique ones seen\n    // count up all characters\n\n    this.buildCharactersFromIterable(values);\n    this.buildTables(maxThreshold);\n    if ((values[0] as IRNNDatum).input) {\n      this.addInputOutput();\n    }\n    this.addUnrecognized();\n    this.isSetup = true;\n  }\n\n  buildCharactersFromIterable(values: Array<IRNNDatum | Value>): void {\n    const tempCharactersTable: { [character: string]: boolean } = {};\n    for (\n      let dataFormatterIndex = 0, dataFormatterLength = values.length;\n      dataFormatterIndex < dataFormatterLength;\n      dataFormatterIndex++\n    ) {\n      const characters = values[dataFormatterIndex];\n\n      // if (typeof characters === 'string') {\n      //   const character = characters;\n      //   if (tempCharactersTable.hasOwnProperty(character)) continue;\n      //   tempCharactersTable[character] = true;\n      //   this.characters.push(character);\n      if (characters.hasOwnProperty('length')) {\n        const iteratable = characters as string[] | string;\n        for (\n          let characterIndex = 0, charactersLength = iteratable.length;\n          characterIndex < charactersLength;\n          characterIndex++\n        ) {\n          const character = iteratable[characterIndex];\n          if (tempCharactersTable.hasOwnProperty(character)) continue;\n          tempCharactersTable[character] = true;\n          this.characters.push(character);\n        }\n      } else if (typeof characters === 'number') {\n        if (tempCharactersTable.hasOwnProperty(characters)) continue;\n        tempCharactersTable[characters] = true;\n        this.characters.push(characters);\n      } else if (typeof characters === 'boolean') {\n        const character = characters.toString();\n        if (tempCharactersTable.hasOwnProperty(character)) continue;\n        tempCharactersTable[character] = true;\n        this.characters.push(character);\n      } else if (\n        Array.isArray(characters) &&\n        typeof characters[0] === 'string'\n      ) {\n        for (let i = 0; i < characters.length; i++) {\n          const character = characters[i] as string;\n          if (tempCharactersTable.hasOwnProperty(character)) continue;\n          tempCharactersTable[character] = true;\n          this.characters.push(character);\n        }\n      } else if (\n        Array.isArray(characters) &&\n        (typeof characters[0] === 'number' ||\n          typeof characters[0] === 'boolean')\n      ) {\n        for (let i = 0; i < characters.length; i++) {\n          const character = characters[i].toString();\n          if (tempCharactersTable.hasOwnProperty(dataFormatterIndex)) continue;\n          tempCharactersTable[character] = true;\n          this.characters.push(character);\n        }\n      } else if (\n        characters.hasOwnProperty('input') &&\n        characters.hasOwnProperty('output')\n      ) {\n        const { input, output } = (characters as unknown) as IRNNDatum;\n        if (Array.isArray(input)) {\n          this.addCharacters(input, tempCharactersTable);\n        } else {\n          this.addCharacters(input.toString(), tempCharactersTable);\n        }\n\n        if (Array.isArray(output)) {\n          this.addCharacters(output, tempCharactersTable);\n        } else {\n          this.addCharacters(output.toString(), tempCharactersTable);\n        }\n      } else {\n        throw new Error('Unhandled value');\n      }\n    }\n  }\n\n  addCharacters(\n    characters: string | string[] | boolean[] | number[],\n    charactersTable: { [character: string]: boolean }\n  ): void {\n    for (let i = 0; i < characters.length; i++) {\n      const character = characters[i].toString();\n      if (charactersTable.hasOwnProperty(character)) continue;\n      charactersTable[character] = true;\n      this.characters.push(character);\n    }\n  }\n\n  buildTables(maxThreshold: number): void {\n    // filter by count threshold and create pointers\n    const charactersLength = this.characters.length;\n    for (\n      let characterIndex = 0;\n      characterIndex < charactersLength;\n      characterIndex++\n    ) {\n      const character = this.characters[characterIndex];\n      if (characterIndex >= maxThreshold) {\n        // add character to dataFormatter\n        this.indexTable[character] = characterIndex;\n        this.characterTable[characterIndex] = character;\n      }\n    }\n  }\n\n  toIndexes(value: Value, maxThreshold = 0): number[] {\n    const result = [];\n    const { indexTable } = this;\n\n    switch (typeof value) {\n      case 'number':\n      case 'boolean':\n        value = value.toString();\n    }\n\n    for (let i = 0, max = value.length; i < max; i++) {\n      const character = value[i].toString();\n      let index = indexTable[character];\n      if (index === undefined) {\n        if (indexTable.unrecognized) {\n          index = indexTable.unrecognized;\n        } else {\n          throw new Error(`unrecognized character \"${character}\"`);\n        }\n      }\n      if (index < maxThreshold) continue;\n      result.push(index);\n    }\n    return result;\n  }\n\n  toIndexesInputOutput(\n    input: Value,\n    output?: Value,\n    maxThreshold = 0\n  ): number[] {\n    const result: number[] = this.toIndexesValue(input, maxThreshold, true);\n\n    if (typeof output === 'undefined') return result;\n    return result.concat(this.toIndexesValue(output, maxThreshold, false));\n  }\n\n  toIndexesValue(\n    value: Value,\n    maxThreshold: number,\n    isInput: boolean\n  ): number[] {\n    if (typeof value === 'string') {\n      value = value.split('');\n    } else if (typeof value === 'number' || typeof value === 'boolean') {\n      value = value.toString().split('');\n    } else if (\n      Array.isArray(value) &&\n      (typeof (value as number[])[0] === 'number' ||\n        typeof (value as boolean[])[0] === 'boolean' ||\n        typeof (value as string[])[0] === 'string')\n    ) {\n      value = (value as string[]).map((v) => v.toString());\n    } else {\n      throw new Error('unrecognized value');\n    }\n    if (isInput) {\n      value = value.concat(['stop-input', 'start-output']);\n    }\n    return this.toIndexes(value, maxThreshold);\n  }\n\n  toCharacters(indices: number[], maxThreshold = 0): string[] {\n    const result: string[] = [];\n    const { indexTable, characterTable } = this;\n\n    for (let i = 0, max = indices.length; i < max; i++) {\n      const index = indices[i];\n      if (index < maxThreshold) continue;\n      let character = characterTable[index];\n      if (character === undefined) {\n        if (indexTable.unrecognized) {\n          character = characterTable[indexTable.unrecognized];\n        } else {\n          throw new Error(`unrecognized index \"${index}\"`);\n        }\n      } else if (character !== null) {\n        result.push(character.toString());\n      }\n    }\n\n    return result;\n  }\n\n  toString(indices: number[], maxThreshold: number): string {\n    return this.toCharacters(indices, maxThreshold).join('');\n  }\n\n  addInputOutput(): void {\n    this.addSpecial('stop-input');\n    this.addSpecial('start-output');\n  }\n\n  addUnrecognized(): void {\n    this.addSpecial('unrecognized');\n  }\n\n  static fromAllPrintable(\n    maxThreshold: number,\n    values = ['\\n']\n  ): DataFormatter {\n    for (let i = 32; i <= 126; i++) {\n      values.push(String.fromCharCode(i));\n    }\n    return new DataFormatter(values, maxThreshold);\n  }\n\n  static fromAllPrintableInputOutput(\n    maxThreshold: number,\n    values = ['\\n']\n  ): DataFormatter {\n    const dataFormatter = DataFormatter.fromAllPrintable(maxThreshold, values);\n    dataFormatter.addInputOutput();\n    dataFormatter.addUnrecognized();\n    return dataFormatter;\n  }\n\n  static fromStringInputOutput(\n    string: string,\n    maxThreshold: number\n  ): DataFormatter {\n    const values = Array.from(new Set(string)).join('');\n    const dataFormatter = new DataFormatter(values.split(''), maxThreshold);\n    dataFormatter.addInputOutput();\n    dataFormatter.addUnrecognized();\n    dataFormatter.isSetup = true;\n    return dataFormatter;\n  }\n\n  static fromArrayInputOutput(\n    data: IRNNDatum[],\n    maxThreshold?: number\n  ): DataFormatter {\n    const values: Array<string | string[]> = [];\n\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      values.push(validateAndCast(datum.input), validateAndCast(datum.output));\n    }\n    const flatArray: string[] = Array.isArray(values)\n      ? (values as string[][]).flat()\n      : values;\n    const dataFormatter = new DataFormatter(\n      Array.from(new Set(flatArray)),\n      maxThreshold\n    );\n    dataFormatter.addInputOutput();\n    dataFormatter.addUnrecognized();\n    dataFormatter.isSetup = true;\n    return dataFormatter;\n  }\n\n  static fromString(string: string, maxThreshold = 0): DataFormatter {\n    const values = Array.from(new Set(string)).join('');\n    return new DataFormatter(values.split(''), maxThreshold);\n  }\n\n  toJSON(): IDataFormatterJSON {\n    return {\n      indexTable: this.indexTable,\n      characterTable: this.characterTable,\n      values: this.values as Value[],\n      characters: this.characters,\n      specialIndexes: this.specialIndexes,\n    };\n  }\n\n  /** TODO: Type better, The type of json is not \"string that is a valid JSON\", it is a POJO in the shape of DataFormatter.\n   * this method re-hydrates the the data as an instance of DataFormatter.\n   */\n  static fromJSON(json: IDataFormatterJSON): DataFormatter {\n    const dataFormatter = new DataFormatter();\n    dataFormatter.indexTable = json.indexTable;\n    dataFormatter.characterTable = json.characterTable;\n    dataFormatter.values = json.values;\n    dataFormatter.characters = json.characters;\n    dataFormatter.specialIndexes = json.specialIndexes;\n    return dataFormatter;\n  }\n\n  addSpecial(special: string | number, character = null): void {\n    const specialIndex = (this.indexTable[special] = this.characters.length);\n    this.characterTable[specialIndex] = character;\n    this.specialIndexes.push(this.characters.length);\n    this.characters.push(special);\n  }\n\n  toFunctionString(): string {\n    return `\nvar characterTable = ${JSON.stringify(this.characterTable)};\nvar indexTable = ${JSON.stringify(this.indexTable)};\nvar characters = ${JSON.stringify(this.characters)};\nvar dataFormatter = {\n  toIndexes: function ${this.toIndexes.toString()},\n  toIndexesInputOutput: function ${this.toIndexesInputOutput.toString()},\n  toCharacters: function ${this.toCharacters.toString()},\n  toIndexesValue: function ${this.toIndexesValue.toString()},\n};`;\n  }\n\n  formatDataIn(input?: Value, output?: Value): number[] {\n    if (input === undefined) return [];\n    if (Array.isArray(input) && typeof input[0] === 'number') {\n      return input as number[];\n    }\n    if (this.indexTable?.hasOwnProperty('stop-input')) {\n      return this.toIndexesInputOutput(input, output);\n    }\n    return this.toIndexes(input);\n  }\n\n  formatDataOut(input: number[], output: number[]): string {\n    return this.toCharacters(output).join('');\n  }\n\n  format(data: Array<IRNNDatum | Value>): number[][] {\n    if (\n      typeof data[0] === 'number' &&\n      !Array.isArray(data[0]) &&\n      (!data[0].hasOwnProperty('input') || !data[0].hasOwnProperty('output'))\n    ) {\n      return data as number[][];\n    }\n    const result: number[][] = [];\n    if (\n      typeof data[0] === 'string' ||\n      typeof data[0] === 'number' ||\n      Array.isArray(data[0])\n    ) {\n      if (!this.isSetup) {\n        this.setup(data);\n        for (let i = 0; i < data.length; i++) {\n          result.push(this.formatDataIn(validateAndCast(data[i] as Value)));\n        }\n      } else {\n        for (let i = 0, max = data.length; i < max; i++) {\n          result.push(this.formatDataIn(data[i] as Value));\n        }\n      }\n    } else if ((data[0] as IRNNDatum).input && (data[0] as IRNNDatum).output) {\n      if (!this.isSetup) {\n        this.setup(data);\n      }\n      for (let i = 0, max = data.length; i < max; i++) {\n        result.push(\n          this.formatDataIn(\n            validateAndCast((data[i] as IRNNDatum).input),\n            validateAndCast((data[i] as IRNNDatum).output)\n          )\n        );\n      }\n    } else {\n      throw new Error('unrecognized data');\n    }\n    return result;\n  }\n}\n\nfunction validateAndCast(value: Value): string | string[] {\n  if (typeof value === 'string') return value;\n  if (typeof value === 'number') return value.toString();\n  if (typeof value === 'boolean') return value.toString();\n  if (Array.isArray(value) && typeof value[0] === 'string')\n    return value as string[];\n  if (typeof value[0] === 'boolean') {\n    return (value as boolean[]).map((v: boolean) => v.toString());\n  }\n  if (typeof value[0] === 'number') {\n    return (value as number[]).map((v: number) => v.toString());\n  }\n  throw new Error(\n    'unrecognized value, expected string[], string, number[], number, boolean[], or boolean'\n  );\n}\n\nexport interface IDataFormatterJSON {\n  indexTable: { [key: string]: number; [key: number]: number };\n  characterTable: { [key: number]: string | number | null };\n  values: Value[];\n  characters: Array<string | number>;\n  specialIndexes: number[];\n}\n","import { Matrix } from '.';\n\nexport function copy(product: Matrix, left: Matrix): void {\n  product.rows = left.rows;\n  product.columns = left.columns;\n  product.weights = left.weights.slice(0);\n  product.deltas = left.deltas.slice(0);\n}\n","import { Matrix } from '.';\n\n/**\n * add {left} and {right} matrix weights into {into}\n */\nexport function add(product: Matrix, left: Matrix, right: Matrix): void {\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = left.weights[i] + right.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * adds {from} deltas to {left} and {right} deltas\n */\nexport function addB(product: Matrix, left: Matrix, right: Matrix): void {\n  for (let i = 0; i < product.deltas.length; i++) {\n    left.deltas[i] = product.deltas[i];\n    right.deltas[i] = product.deltas[i];\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * makes matrix weights and deltas all ones\n */\nexport function allOnes(product: Matrix): void {\n  for (let i = 0; i < product.weights.length; i++) {\n    product.weights[i] = 1;\n    product.deltas[i] = 0;\n  }\n}\n","import { Matrix } from '.';\n\nexport function cloneNegative(product: Matrix, left: Matrix): void {\n  product.rows = left.rows;\n  product.columns = left.columns;\n  product.weights = left.weights.slice(0);\n  product.deltas = left.deltas.slice(0);\n\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = -left.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * multiply {left} and {right} matrix weights to {into}\n */\nexport function multiply(product: Matrix, left: Matrix, right: Matrix): void {\n  const leftRows = left.rows;\n  const leftColumns = left.columns;\n  const rightColumns = right.columns;\n\n  // loop over rows of left\n  for (let leftRow = 0; leftRow < leftRows; leftRow++) {\n    const leftRowBase = leftColumns * leftRow;\n    const rightRowBase = rightColumns * leftRow;\n\n    // loop over cols of right\n    for (let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n      // dot product loop\n      let dot = 0;\n\n      // loop over columns of left\n      for (let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n        const rightColumnBase = rightColumns * leftColumn;\n        const leftIndex = leftRowBase + leftColumn;\n        const rightIndex = rightColumnBase + rightColumn;\n        dot += left.weights[leftIndex] * right.weights[rightIndex];\n        left.deltas[leftIndex] = 0;\n        right.deltas[rightIndex] = 0;\n      }\n\n      product.weights[rightRowBase + rightColumn] = dot;\n    }\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * multiplies {from} deltas to {left} and {right}\n */\nexport function multiplyB(product: Matrix, left: Matrix, right: Matrix): void {\n  const leftRows = left.rows;\n  const leftColumns = left.columns;\n  const rightColumns = right.columns;\n\n  // loop over rows of left\n  for (let leftRowRoot = 0; leftRowRoot < leftRows; leftRowRoot++) {\n    const leftRowBase = leftColumns * leftRowRoot;\n    const rightRowBase = rightColumns * leftRowRoot;\n\n    // loop over cols of right\n    for (let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n      // loop over columns of left\n      for (let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n        const rightColumnBase = rightColumns * leftColumn;\n        const leftRow = leftRowBase + leftColumn;\n        const rightRow = rightColumnBase + rightColumn;\n        const backPropagateValue = product.deltas[rightRowBase + rightColumn];\n        left.deltas[leftRow] += right.weights[rightRow] * backPropagateValue;\n        right.deltas[rightRow] += left.weights[leftRow] * backPropagateValue;\n      }\n    }\n  }\n}\n","import { Matrix } from '.';\n\nexport function multiplyElement(\n  product: Matrix,\n  left: Matrix,\n  right: Matrix\n): void {\n  const { weights } = left;\n\n  for (let i = 0; i < weights.length; i++) {\n    product.weights[i] = left.weights[i] * right.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * multiplies {left} and {right} weight by {from} deltas into {left} and {right} deltas\n */\nexport function multiplyElementB(\n  product: Matrix,\n  left: Matrix,\n  right: Matrix\n): void {\n  for (let i = 0; i < left.weights.length; i++) {\n    left.deltas[i] = right.weights[i] * product.deltas[i];\n    right.deltas[i] = left.weights[i] * product.deltas[i];\n  }\n}\n","import { Matrix } from '.';\n\n/**\n *\n * relu {m} weights to {into} weights\n */\nexport function relu(product: Matrix, left: Matrix): void {\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = Math.max(0, left.weights[i]); // relu\n    product.deltas[i] = 0;\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * adds {from} deltas to {m} deltas when {m} weights are above other a threshold of 0\n */\nexport function reluB(product: Matrix, left: Matrix): void {\n  for (let i = 0; i < product.deltas.length; i++) {\n    left.deltas[i] = left.weights[i] > 0 ? product.deltas[i] : 0;\n  }\n}\n","import { Matrix } from '.';\n\nexport function rowPluck(\n  product: Matrix,\n  left: Matrix,\n  rowPluckIndex: number\n): void {\n  const { columns } = left;\n  const rowBase = columns * rowPluckIndex;\n\n  for (let column = 0; column < columns; column++) {\n    product.weights[column] = left.weights[rowBase + column];\n    product.deltas[column] = 0;\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * adds {from} deltas into {m} deltas\n */\nexport function rowPluckB(\n  product: Matrix,\n  left: Matrix,\n  rowIndex: number\n): void {\n  const { columns } = left;\n  const rowBase = columns * rowIndex;\n\n  for (let column = 0; column < columns; column++) {\n    left.deltas[rowBase + column] = product.deltas[column];\n  }\n}\n","import { Matrix } from '.';\n\nexport function sigmoid(product: Matrix, left: Matrix): void {\n  // sigmoid nonlinearity\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = 1 / (1 + Math.exp(-left.weights[i]));\n    product.deltas[i] = 0;\n  }\n}\n\n// function sig(x) {\n//   // helper function for computing sigmoid\n//   return 1 / (1 + Math.exp(-x));\n// }\n","import { Matrix } from '.';\n\nexport function sigmoidB(product: Matrix, left: Matrix): void {\n  for (let i = 0; i < product.deltas.length; i++) {\n    const mwi = product.weights[i];\n    left.deltas[i] = mwi * (1 - mwi) * product.deltas[i];\n  }\n}\n","import { Matrix } from '.';\n\nexport function softmax(matrix: Matrix): Matrix {\n  // probability volume\n  const result = new Matrix(matrix.rows, matrix.columns);\n  let maxVal = -999999;\n\n  for (let i = 0; i < matrix.weights.length; i++) {\n    if (matrix.weights[i] > maxVal) {\n      maxVal = matrix.weights[i];\n    }\n  }\n\n  let s = 0;\n  for (let i = 0; i < matrix.weights.length; i++) {\n    result.weights[i] = Math.exp(matrix.weights[i] - maxVal);\n    s += result.weights[i];\n  }\n\n  for (let i = 0; i < matrix.weights.length; i++) {\n    result.weights[i] /= s;\n  }\n\n  // no backward pass here needed\n  // since we will use the computed probabilities outside\n  // to set gradients directly on m\n  return result;\n}\n","import { Matrix } from '.';\n\nexport function tanh(product: Matrix, left: Matrix): void {\n  // tanh nonlinearity\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = Math.tanh(left.weights[i]);\n    product.deltas[i] = 0;\n  }\n}\n","import { Matrix } from '.';\n\nexport function tanhB(product: Matrix, left: Matrix): void {\n  for (let i = 0; i < product.deltas.length; i++) {\n    // grad for z = tanh(x) is (1 - z^2)\n    const mwi = product.weights[i];\n    left.deltas[i] = (1 - mwi * mwi) * product.deltas[i];\n  }\n}\n","import { Matrix } from '.';\nimport { add } from './add';\nimport { addB } from './add-b';\nimport { allOnes } from './all-ones';\nimport { cloneNegative } from './clone-negative';\nimport { multiply } from './multiply';\nimport { multiplyB } from './multiply-b';\nimport { multiplyElement } from './multiply-element';\nimport { multiplyElementB } from './multiply-element-b';\nimport { relu } from './relu';\nimport { reluB } from './relu-b';\nimport { rowPluck } from './row-pluck';\nimport { rowPluckB } from './row-pluck-b';\nimport { sigmoid } from './sigmoid';\nimport { sigmoidB } from './sigmoid-b';\nimport { softmax } from './softmax';\nimport { tanh } from './tanh';\nimport { tanhB } from './tanh-b';\n\ntype PropagateIndex = (product: Matrix, left: Matrix, index: number) => void;\ntype PropagateProduct = (product: Matrix) => void;\ntype PropagateProductFromLeft = (product: Matrix, left: Matrix) => void;\ntype PropagateProductFromLeftRight = (\n  product: Matrix,\n  left: Matrix,\n  right: Matrix\n) => void;\ntype PropagateFunction =\n  | PropagateIndex\n  | PropagateProduct\n  | PropagateProductFromLeft\n  | PropagateProductFromLeftRight;\n\nexport interface IState {\n  name: string;\n  product: Matrix;\n  left?: Matrix;\n  right?: Matrix;\n  forwardFn: PropagateFunction;\n  backpropagationFn: PropagateFunction;\n}\n\nexport class Equation {\n  states: IState[] = [];\n  inputValue?: Float32Array;\n  inputRow = 0;\n\n  add(left: Matrix, right: Matrix): Matrix {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n\n    const product = new Matrix(left.rows, left.columns);\n\n    this.states.push({\n      name: 'add',\n      product,\n      left,\n      right,\n      forwardFn: add,\n      backpropagationFn: addB,\n    });\n\n    return product;\n  }\n\n  allOnes(rows: number, columns: number): Matrix {\n    const product = new Matrix(rows, columns);\n\n    this.states.push({\n      name: 'allOnes',\n      product,\n      left: product,\n      forwardFn: allOnes,\n      backpropagationFn: () => {},\n    });\n\n    return product;\n  }\n\n  cloneNegative(matrix: Matrix): Matrix {\n    const product = new Matrix(matrix.rows, matrix.columns);\n\n    this.states.push({\n      name: 'cloneNegative',\n      product,\n      left: matrix,\n      forwardFn: cloneNegative,\n      backpropagationFn: () => {},\n    });\n\n    return product;\n  }\n\n  /**\n   * connects two matrices together by subtract\n   */\n  subtract(left: Matrix, right: Matrix): Matrix {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n\n    return this.add(\n      this.add(this.allOnes(left.rows, left.columns), this.cloneNegative(left)),\n      right\n    );\n  }\n\n  /**\n   * connects two matrices together by multiply\n   */\n  multiply(left: Matrix, right: Matrix): Matrix {\n    if (left.columns !== right.rows) {\n      throw new Error('misaligned matrices');\n    }\n\n    const product = new Matrix(left.rows, right.columns);\n\n    this.states.push({\n      name: 'multiply',\n      product,\n      left,\n      right,\n      forwardFn: multiply,\n      backpropagationFn: multiplyB,\n    });\n\n    return product;\n  }\n\n  /**\n   * connects two matrices together by multiplyElement\n   */\n  multiplyElement(left: Matrix, right: Matrix): Matrix {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n\n    const product = new Matrix(left.rows, left.columns);\n\n    this.states.push({\n      name: 'multiplyElement',\n      product,\n      left,\n      right,\n      forwardFn: multiplyElement,\n      backpropagationFn: multiplyElementB,\n    });\n\n    return product;\n  }\n\n  /**\n   * connects a matrix to relu\n   */\n  relu(matrix: Matrix): Matrix {\n    const product = new Matrix(matrix.rows, matrix.columns);\n\n    this.states.push({\n      name: 'relu',\n      product,\n      left: matrix,\n      forwardFn: relu,\n      backpropagationFn: reluB,\n    });\n\n    return product;\n  }\n\n  /**\n   * input a matrix\n   */\n  input(input: Matrix): Matrix {\n    this.states.push({\n      name: 'input',\n      product: input,\n      forwardFn: (product: Matrix) => {\n        if (!this.inputValue) return;\n        if (this.inputValue.length !== product.weights.length) {\n          throw new Error('this.inputValue is of wrong dimensions');\n        }\n        product.weights = input.weights = this.inputValue;\n      },\n      backpropagationFn: () => {},\n    });\n\n    return input;\n  }\n\n  /**\n   * connects a matrix via a row\n   */\n  inputMatrixToRow(matrix: Matrix): Matrix {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    const product = new Matrix(matrix.columns, 1);\n\n    this.states.push({\n      name: 'inputMatrixToRow',\n      product,\n      left: matrix,\n      get right() {\n        return (self.inputRow as unknown) as Matrix;\n      },\n      forwardFn: rowPluck,\n      backpropagationFn: rowPluckB,\n    });\n\n    return product;\n  }\n\n  /**\n   * connects a matrix to sigmoid\n   */\n  sigmoid(matrix: Matrix): Matrix {\n    const product = new Matrix(matrix.rows, matrix.columns);\n\n    this.states.push({\n      name: 'sigmoid',\n      product,\n      left: matrix,\n      forwardFn: sigmoid,\n      backpropagationFn: sigmoidB,\n    });\n\n    return product;\n  }\n\n  /**\n   * connects a matrix to tanh\n   */\n  tanh(matrix: Matrix): Matrix {\n    const product = new Matrix(matrix.rows, matrix.columns);\n\n    this.states.push({\n      name: 'tanh',\n      product,\n      left: matrix,\n      forwardFn: tanh,\n      backpropagationFn: tanhB,\n    });\n\n    return product;\n  }\n\n  /**\n   *\n   * Observe a matrix for debugging\n   */\n  observe(matrix: Matrix): Matrix {\n    this.states.push({\n      name: 'observe',\n      product: new Matrix(),\n      forwardFn: () => {},\n      backpropagationFn: () => {},\n    });\n\n    return matrix;\n  }\n\n  /**\n   * Run index through equations via forward propagation\n   */\n  runIndex(rowIndex = 0): Matrix {\n    this.inputRow = rowIndex;\n    let state = this.states[0];\n\n    for (let i = 0, max = this.states.length; i < max; i++) {\n      state = this.states[i];\n\n      if (!state.hasOwnProperty('forwardFn')) continue;\n      (state.forwardFn as PropagateProductFromLeftRight)(\n        state.product,\n        state.left as Matrix,\n        state.right as Matrix\n      );\n    }\n\n    return state.product;\n  }\n\n  /**\n   * Run value through equations via forward propagation\n   */\n  runInput(inputValue: Float32Array): Matrix {\n    this.inputValue = inputValue;\n    let state = this.states[0];\n\n    for (let i = 0, max = this.states.length; i < max; i++) {\n      state = this.states[i];\n\n      if (!state.hasOwnProperty('forwardFn')) continue;\n      (state.forwardFn as PropagateProductFromLeftRight)(\n        state.product,\n        state.left as Matrix,\n        state.right as Matrix\n      );\n    }\n\n    return state.product;\n  }\n\n  /**\n   * Run value through equations via back propagation\n   */\n  backpropagate(): Matrix {\n    let i = this.states.length;\n    let state = this.states[0];\n\n    while (i-- > 0) {\n      state = this.states[i];\n\n      if (!state.hasOwnProperty('backpropagationFn')) continue;\n      (state.backpropagationFn as PropagateProductFromLeftRight)(\n        state.product,\n        state.left as Matrix,\n        state.right as Matrix\n      );\n    }\n\n    return state.product;\n  }\n\n  /**\n   * Run index through equations via back propagation\n   */\n  backpropagateIndex(rowIndex = 0): Matrix {\n    this.inputRow = rowIndex;\n\n    let i = this.states.length;\n    let state = this.states[0];\n\n    while (i-- > 0) {\n      state = this.states[i];\n\n      if (!state.hasOwnProperty('backpropagationFn')) continue;\n      (state.backpropagationFn as PropagateProductFromLeftRight)(\n        state.product,\n        state.left as Matrix,\n        state.right as Matrix\n      );\n    }\n\n    return state.product;\n  }\n\n  /**\n   * Predict a target value from equation\n   */\n  predictTarget(input: Float32Array, target: Float32Array): number {\n    let errorSum = 0;\n    const output = this.runInput(input);\n\n    for (let i = 0; i < output.weights.length; i++) {\n      const error = output.weights[i] - target[i];\n      // set gradients into log probabilities\n      errorSum += Math.abs(error);\n      // write gradients into log probabilities\n      output.deltas[i] = error;\n    }\n\n    return errorSum;\n  }\n\n  /**\n   * Predict a target index from equation\n   */\n  predictTargetIndex(input: number, target: number): number {\n    const output = this.runIndex(input);\n    // set gradients into log probabilities\n    const logProbabilities = output; // interpret output as log probabilities\n    const probabilities = softmax(output); // compute the softmax probabilities\n\n    // write gradients into log probabilities\n    logProbabilities.deltas = probabilities.weights.slice(0);\n    logProbabilities.deltas[target] -= 1;\n\n    // accumulate base 2 log prob and do smoothing\n    return -Math.log2(probabilities.weights[target]);\n  }\n}\n","import { Matrix } from '.';\n\nexport function maxI(matrix: Matrix): number {\n  // argmax of array w\n  const { weights } = matrix;\n  let maxv = weights[0];\n  let maxix = 0;\n\n  for (let i = 1; i < weights.length; i++) {\n    const v = weights[i];\n    if (v < maxv) continue;\n\n    maxix = i;\n    maxv = v;\n  }\n\n  return maxix;\n}\n","import { Matrix } from '.';\nimport { randomFloat } from '../../utilities/random';\n\nexport function sampleI(matrix: Matrix): number {\n  // sample argmax from w, assuming w are\n  // probabilities that sum to one\n  const r = randomFloat(0, 1);\n  const w = matrix.weights;\n  let x = 0;\n  let i = 0;\n\n  while (true) {\n    x += w[i];\n\n    if (x > r) {\n      return i;\n    }\n\n    i++;\n  }\n}\n","import { Log } from '../feed-forward';\nimport { INeuralNetworkTrainOptions } from '../neural-network';\nimport {\n  DataFormatter,\n  IDataFormatter,\n  IDataFormatterJSON,\n} from '../utilities/data-formatter';\nimport { randomFloat } from '../utilities/random';\nimport { zeros } from '../utilities/zeros';\nimport { IMatrixJSON, Matrix } from './matrix';\nimport { copy } from './matrix/copy';\nimport { Equation } from './matrix/equation';\nimport { maxI } from './matrix/max-i';\nimport { RandomMatrix } from './matrix/random-matrix';\nimport { sampleI } from './matrix/sample-i';\nimport { softmax } from './matrix/softmax';\nimport { IRNNDatum, Value } from './rnn-data-types';\n\nexport interface IRNNModel {\n  isInitialized: boolean;\n  input: Matrix;\n  hiddenLayers: IRNNHiddenLayerModel[];\n  output: Matrix;\n  equations: Equation[];\n  allMatrices: Matrix[];\n  equationConnections: Matrix[][];\n  outputConnector: RandomMatrix | Matrix;\n}\n\nexport interface IRNNOptions {\n  inputSize: number;\n  inputRange: number;\n  hiddenLayers: number[];\n  outputSize: number;\n  decayRate: number;\n  smoothEps: number;\n  regc: number;\n  clipval: number;\n  maxPredictionLength: number;\n  dataFormatter: IDataFormatter;\n  json?: IRNNJSON;\n}\n\nexport interface IRNNJSONOptions {\n  inputSize: number;\n  inputRange: number;\n  hiddenLayers: number[];\n  outputSize: number;\n  decayRate: number;\n  smoothEps: number;\n  regc: number;\n  clipval: number;\n  maxPredictionLength: number;\n  dataFormatter: IDataFormatterJSON;\n}\n\nexport interface IRNNTrainingOptions {\n  iterations: number;\n  errorThresh: number;\n  log: boolean | ((status: string) => void);\n  logPeriod: number;\n  learningRate: number;\n  callback?: (status: IRNNStatus) => void;\n  callbackPeriod: number;\n  timeout: number;\n}\n\nexport interface IRNNJSONTrainOptions {\n  iterations: number;\n  errorThresh: number;\n  log: boolean | ((status: string) => void);\n  logPeriod: number;\n  learningRate: number;\n  callback?: (status: IRNNStatus) => void;\n  callbackPeriod: number;\n  timeout: number | 'Infinity';\n}\n\nexport const trainDefaults: IRNNTrainingOptions = {\n  iterations: 20000,\n  errorThresh: 0.005,\n  log: false,\n  logPeriod: 10,\n  learningRate: 0.01,\n  callbackPeriod: 10,\n  timeout: Infinity,\n};\n\nexport interface IRNNHiddenLayer {\n  [key: string]: RandomMatrix | Matrix;\n}\n\nexport interface IRNNHiddenLayerModel extends IRNNHiddenLayer {\n  // wxh\n  weight: RandomMatrix;\n  // whh\n  transition: RandomMatrix;\n  // bhh\n  bias: Matrix;\n}\n\nexport const defaults = (): IRNNOptions => {\n  return {\n    inputSize: 20,\n    inputRange: 20,\n    hiddenLayers: [20, 20],\n    outputSize: 20,\n    decayRate: 0.999,\n    smoothEps: 1e-8,\n    regc: 0.000001,\n    clipval: 5,\n    maxPredictionLength: 100,\n    dataFormatter: new DataFormatter(),\n  };\n};\n\nexport interface IRNNStatus {\n  iterations: number;\n  error: number;\n}\n\nexport interface IRNNPreppedTrainingData {\n  status: IRNNStatus;\n  preparedData: number[][];\n  endTime: number;\n}\n\nexport class RNN {\n  options: IRNNOptions = { ...defaults() };\n  trainOpts: IRNNTrainingOptions = { ...trainDefaults };\n  stepCache: { [index: number]: Float32Array } = {};\n  runs = 0;\n  ratioClipped = 0;\n  model: IRNNModel = Object.seal({\n    isInitialized: false,\n    input: new Matrix(0, 0),\n    hiddenLayers: [],\n    output: new Matrix(0, 0),\n    equations: [],\n    allMatrices: [],\n    equationConnections: [],\n    outputConnector: new RandomMatrix(0, 0, 0.08),\n  });\n\n  initialLayerInputs: Matrix[] = [];\n\n  constructor(options: Partial<IRNNOptions & IRNNTrainingOptions> = {}) {\n    this.options = { ...this.options, ...options };\n    this.updateTrainingOptions({\n      ...trainDefaults,\n      // ...options,\n    });\n\n    if (options.json) {\n      this.fromJSON(options.json);\n    }\n  }\n\n  initialize(): void {\n    const { dataFormatter } = this.options;\n    if (dataFormatter?.characters.length) {\n      this.options.inputSize = this.options.inputRange = this.options.outputSize =\n        dataFormatter.characters.length;\n    }\n    this.model = this.mapModel();\n  }\n\n  createHiddenLayers(): IRNNHiddenLayer[] {\n    const { hiddenLayers, inputSize } = this.options;\n    const hiddenLayersModel: IRNNHiddenLayer[] = [];\n    // 0 is end, so add 1 to offset\n    hiddenLayersModel.push(this.getHiddenLayer(hiddenLayers[0], inputSize));\n    let prevSize = hiddenLayers[0];\n\n    for (let d = 1; d < hiddenLayers.length; d++) {\n      // loop over depths\n      const hiddenSize = hiddenLayers[d];\n      hiddenLayersModel.push(this.getHiddenLayer(hiddenSize, prevSize));\n      prevSize = hiddenSize;\n    }\n    return hiddenLayersModel;\n  }\n\n  getHiddenLayer(hiddenSize: number, prevSize: number): IRNNHiddenLayer {\n    return {\n      // wxh\n      weight: new RandomMatrix(hiddenSize, prevSize, 0.08),\n      // whh\n      transition: new RandomMatrix(hiddenSize, hiddenSize, 0.08),\n      // bhh\n      bias: new Matrix(hiddenSize, 1),\n    };\n  }\n\n  getEquation(\n    equation: Equation,\n    inputMatrix: Matrix,\n    previousResult: Matrix,\n    hiddenLayer: IRNNHiddenLayer\n  ): Matrix {\n    if (!hiddenLayer.weight || !hiddenLayer.transition || !hiddenLayer.bias) {\n      throw new Error('hiddenLayer does not have expected properties');\n    }\n    const relu = equation.relu.bind(equation);\n    const add = equation.add.bind(equation);\n    const multiply = equation.multiply.bind(equation);\n\n    return relu(\n      add(\n        add(\n          multiply(hiddenLayer.weight, inputMatrix),\n          multiply(hiddenLayer.transition, previousResult)\n        ),\n        hiddenLayer.bias\n      )\n    );\n  }\n\n  createInputMatrix(): RandomMatrix {\n    const { inputRange, inputSize } = this.options;\n    if (inputRange < 1)\n      throw new Error('this.options.inputRange not an expected number');\n    if (inputSize < 1)\n      throw new Error('this.options.inputSize not an expected number');\n\n    // 0 is end, so add 1 to offset\n    return new RandomMatrix(inputRange + 1, inputSize, 0.08);\n  }\n\n  createOutputMatrices(): { outputConnector: RandomMatrix; output: Matrix } {\n    const { outputSize, hiddenLayers } = this.options;\n    const lastHiddenSize = last(hiddenLayers);\n\n    // 0 is end, so add 1 to offset\n    return {\n      // whd\n      outputConnector: new RandomMatrix(outputSize + 1, lastHiddenSize, 0.08),\n      // 0 is end, so add 1 to offset\n      // bd\n      output: new Matrix(outputSize + 1, 1),\n    };\n  }\n\n  bindEquation(): void {\n    const { model } = this;\n    const { hiddenLayers } = this.options;\n    const equation = new Equation();\n    const outputs: Matrix[] = [];\n    const equationConnection =\n      model.equationConnections.length > 0\n        ? last(model.equationConnections)\n        : this.initialLayerInputs;\n    // 0 index\n    let output = this.getEquation(\n      equation,\n      equation.inputMatrixToRow(model.input),\n      equationConnection[0],\n      model.hiddenLayers[0]\n    );\n    outputs.push(output);\n    // 1+ indices\n    for (let i = 1, max = hiddenLayers.length; i < max; i++) {\n      if (!equationConnection[i]) {\n        throw new Error(`Cannot find equation at index ${i}`);\n      }\n      output = this.getEquation(\n        equation,\n        output,\n        equationConnection[i],\n        model.hiddenLayers[i]\n      );\n      outputs.push(output);\n    }\n\n    model.equationConnections.push(outputs);\n    equation.add(\n      equation.multiply(model.outputConnector, output),\n      model.output\n    );\n    model.equations.push(equation);\n  }\n\n  mapModel(): IRNNModel {\n    const allMatrices: Matrix[] = [];\n    this.initialLayerInputs = this.options.hiddenLayers.map(\n      (size) => new Matrix(size, 1)\n    );\n\n    const input = this.createInputMatrix();\n    allMatrices.push(input);\n\n    const hiddenLayers = this.createHiddenLayers() as IRNNHiddenLayerModel[];\n    if (!hiddenLayers.length) throw new Error('net.hiddenLayers not set');\n    for (let i = 0, max = hiddenLayers.length; i < max; i++) {\n      const hiddenMatrix: IRNNHiddenLayerModel = hiddenLayers[i];\n      for (const property in hiddenMatrix) {\n        if (!hiddenMatrix.hasOwnProperty(property)) continue;\n        allMatrices.push(hiddenMatrix[property]);\n      }\n    }\n\n    const { output, outputConnector } = this.createOutputMatrices();\n    allMatrices.push(outputConnector);\n    allMatrices.push(output);\n\n    return Object.seal({\n      isInitialized: true,\n      input,\n      hiddenLayers,\n      output,\n      equations: [],\n      allMatrices,\n      equationConnections: [],\n      outputConnector,\n    });\n  }\n\n  trainInput(input: number[]): number {\n    this.runs++;\n    const { model } = this;\n    const max = input.length;\n    let log2ppl = 0;\n    let equation;\n    while (model.equations.length <= input.length + 1) {\n      // last is zero\n      this.bindEquation();\n    }\n    for (\n      let inputIndex = -1, inputMax = input.length;\n      inputIndex < inputMax;\n      inputIndex++\n    ) {\n      // start and end tokens are zeros\n      const equationIndex = inputIndex + 1;\n      equation = model.equations[equationIndex];\n\n      const source = inputIndex === -1 ? 0 : input[inputIndex] + 1; // first step: start with START token\n      const target = inputIndex === max - 1 ? 0 : input[inputIndex + 1] + 1; // last step: end with END token\n      log2ppl += equation.predictTargetIndex(source, target);\n    }\n    return Math.pow(2, log2ppl / (max - 1)) / 100;\n  }\n\n  backpropagate(input: number[]): void {\n    let i = input.length;\n    const { model } = this;\n    const { equations } = model;\n    while (i > 0) {\n      equations[i].backpropagateIndex(input[i - 1] + 1);\n      i--;\n    }\n    equations[0].backpropagateIndex(0);\n  }\n\n  adjustWeights(): void {\n    const { regc, clipval, decayRate, smoothEps } = this.options;\n    const { trainOpts, model, stepCache } = this;\n    const { learningRate } = trainOpts;\n    const { allMatrices } = model;\n    let numClipped = 0;\n    let numTot = 0;\n    for (let matrixIndex = 0; matrixIndex < allMatrices.length; matrixIndex++) {\n      const matrix = allMatrices[matrixIndex];\n      const { weights, deltas } = matrix;\n      if (!(matrixIndex in stepCache)) {\n        stepCache[matrixIndex] = zeros(matrix.rows * matrix.columns);\n      }\n      const cache = stepCache[matrixIndex];\n      for (let i = 0; i < weights.length; i++) {\n        let r = deltas[i];\n        const w = weights[i];\n        // rmsprop adaptive learning rate\n        cache[i] = cache[i] * decayRate + (1 - decayRate) * r * r;\n        // gradient clip\n        if (r > clipval) {\n          r = clipval;\n          numClipped++;\n        } else if (r < -clipval) {\n          r = -clipval;\n          numClipped++;\n        }\n        numTot++;\n        // update (and regularize)\n        weights[i] =\n          w + (-learningRate * r) / Math.sqrt(cache[i] + smoothEps) - regc * w;\n      }\n    }\n    this.ratioClipped = numClipped / numTot;\n  }\n\n  get isRunnable(): boolean {\n    if (this.model && this.model.equations.length === 0) {\n      console.error(`No equations bound, did you run train()?`);\n      return false;\n    }\n\n    return true;\n  }\n\n  checkRunnable(): void {\n    if (!this.isRunnable) {\n      throw new Error('Network not runnable');\n    }\n  }\n\n  run(rawInput: Value = [], isSampleI = false, temperature = 1): string {\n    const maxPredictionLength: number =\n      this.options.maxPredictionLength +\n      (rawInput !== null ? (rawInput as string).length : 0) +\n      (this.options.dataFormatter\n        ? this.options.dataFormatter.specialIndexes.length\n        : 0);\n\n    this.checkRunnable();\n\n    const input: number[] =\n      this.options.dataFormatter && (rawInput as string).length > 0\n        ? this.options.dataFormatter.formatDataIn(rawInput)\n        : (rawInput as number[]);\n    const { model } = this;\n    const output = [];\n    let i = 0;\n    while (true) {\n      const previousIndex =\n        i === 0 ? 0 : i < input.length ? input[i - 1] + 1 : output[i - 1];\n      while (model.equations.length <= i) {\n        this.bindEquation();\n      }\n      const equation = model.equations[i];\n      // sample predicted letter\n      const outputMatrix = equation.runIndex(previousIndex);\n      const logProbabilities = new Matrix(\n        model.output.rows,\n        model.output.columns\n      );\n      copy(logProbabilities, outputMatrix);\n      if (temperature !== 1 && isSampleI) {\n        /**\n         * scale log probabilities by temperature and re-normalize\n         * if temperature is high, logProbabilities will go towards zero\n         * and the softmax outputs will be more diffuse. if temperature is\n         * very low, the softmax outputs will be more peaky\n         */\n        for (let j = 0, max = logProbabilities.weights.length; j < max; j++) {\n          logProbabilities.weights[j] /= temperature;\n        }\n      }\n\n      const probs = softmax(logProbabilities);\n      const nextIndex = isSampleI ? sampleI(probs) : maxI(probs);\n\n      i++;\n      if (nextIndex === 0) {\n        // END token predicted, break out\n        break;\n      }\n      if (i >= maxPredictionLength) {\n        // something is wrong\n        break;\n      }\n\n      output.push(nextIndex);\n    }\n\n    /**\n     * we slice the input length here, not because output contains it, but it will be erroneous as we are sending the\n     * network what is contained in input, so the data is essentially guessed by the network what could be next, till it\n     * locks in on a value.\n     * Kind of like this, values are from input:\n     * 0 -> 4 (or in English: \"beginning on input\" -> \"I have no idea? I'll guess what they want next!\")\n     * 2 -> 2 (oh how interesting, I've narrowed down values...)\n     * 1 -> 9 (oh how interesting, I've now know what the values are...)\n     * then the output looks like: [4, 2, 9,...]\n     * so we then remove the erroneous data to get our true output\n     */\n    return this.options.dataFormatter.formatDataOut(\n      input,\n      output.slice(input.length).map((value) => value - 1)\n    );\n  }\n\n  /**\n   *\n   * Verifies network sizes are initialized\n   * If they are not it will initialize them\n   */\n  verifyIsInitialized(): void {\n    if (!this.model.isInitialized) {\n      this.initialize();\n    }\n  }\n\n  /**\n   *\n   * @param options\n   *    Supports all `trainDefaults` properties\n   *    also supports:\n   *       learningRate: (number),\n   *       momentum: (number),\n   *       activation: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\n   */\n  updateTrainingOptions(options: Partial<IRNNTrainingOptions>): void {\n    this.trainOpts = { ...trainDefaults, ...options };\n    this.validateTrainingOptions(this.trainOpts as INeuralNetworkTrainOptions);\n    this.setLogMethod(options.log ?? this.trainOpts.log);\n    // TODO: Remove this?\n    // this.activation = options.activation || this.activation;\n  }\n\n  validateTrainingOptions(options: INeuralNetworkTrainOptions): void {\n    const validations: { [fnName: string]: () => boolean } = {\n      iterations: () => {\n        const val = options.iterations;\n        return typeof val === 'number' && val > 0;\n      },\n      errorThresh: () => {\n        const val = options.errorThresh;\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      log: () => {\n        const val = options.log;\n        return typeof val === 'function' || typeof val === 'boolean';\n      },\n      logPeriod: () => {\n        const val = options.logPeriod;\n        return typeof val === 'number' && val > 0;\n      },\n      learningRate: () => {\n        const val = options.learningRate;\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      callback: () => {\n        const val = options.callback;\n        return typeof val === 'function' || val === undefined;\n      },\n      callbackPeriod: () => {\n        const val = options.callbackPeriod;\n        return typeof val === 'number' && val > 0;\n      },\n      timeout: () => {\n        const val = options.timeout;\n        return typeof val === 'number' && val > 0;\n      },\n    };\n    for (const p in validations) {\n      const v = (options as unknown) as { [v: string]: string };\n      if (!validations[p]()) {\n        throw new Error(\n          `[${p}, ${v[p]}] is out of normal training range, your network will probably not train.`\n        );\n      }\n    }\n  }\n\n  setLogMethod(log: Log | undefined | boolean): void {\n    if (typeof log === 'function') {\n      this.trainOpts.log = log;\n    } else if (log) {\n      this.trainOpts.log = console.log;\n    } else {\n      this.trainOpts.log = false;\n    }\n  }\n\n  protected prepTraining(\n    data: Array<Value | IRNNDatum>,\n    options: Partial<IRNNTrainingOptions>\n  ): IRNNPreppedTrainingData {\n    this.updateTrainingOptions(options);\n    const preparedData = this.options.dataFormatter.format(data);\n    const endTime = Date.now() + (this.trainOpts.timeout ?? 0);\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized();\n\n    return {\n      preparedData,\n      status,\n      endTime,\n    };\n  }\n\n  train(\n    data: Array<Value | IRNNDatum>,\n    trainOpts: Partial<IRNNTrainingOptions> = {}\n  ): IRNNStatus {\n    this.trainOpts = trainOpts = {\n      ...trainDefaults,\n      ...trainOpts,\n    };\n    const {\n      iterations,\n      errorThresh,\n      logPeriod,\n      callback,\n      callbackPeriod,\n    } = this.trainOpts;\n    const log = trainOpts.log === true ? console.log : trainOpts.log;\n    let error = Infinity;\n    let i;\n\n    let inputs: number[][];\n    if (this.options?.dataFormatter) {\n      inputs = this.options.dataFormatter.format(data);\n    } else if (\n      Array.isArray(data) &&\n      Array.isArray(data[0]) &&\n      typeof (data as number[][])[0][0] === 'number'\n    ) {\n      inputs = data as number[][];\n    } else {\n      throw new Error('training not in expected format of number[][]');\n    }\n\n    this.verifyIsInitialized();\n\n    for (i = 0; i < iterations && error > errorThresh; i++) {\n      let sum = 0;\n      for (let j = 0; j < inputs.length; j++) {\n        const err = this.trainPattern(inputs[j], true);\n        sum += err;\n      }\n      error = sum / data.length;\n\n      if (isNaN(error)) {\n        throw new Error(\n          'Network error rate is unexpected NaN, check network configurations and try again. Most probably input format is not correct or training data is not enough. '\n        );\n      }\n      if (log && i % logPeriod === 0) {\n        log(`iterations: ${i}, training error: ${error}`);\n      }\n      if (callback && i % callbackPeriod === 0) {\n        callback({ error, iterations: i });\n      }\n    }\n\n    return {\n      error,\n      iterations: i,\n    };\n  }\n\n  addFormat(): void {\n    throw new Error('not yet implemented');\n  }\n\n  toJSON(): IRNNJSON {\n    if (!this.model.isInitialized) {\n      this.initialize();\n    }\n    const { model, options } = this;\n\n    return {\n      type: this.constructor.name,\n      options: { ...options, dataFormatter: options.dataFormatter.toJSON() },\n      trainOpts: {\n        ...this.trainOpts,\n        timeout:\n          this.trainOpts.timeout === Infinity\n            ? 'Infinity'\n            : this.trainOpts.timeout,\n      },\n      input: model.input.toJSON(),\n      hiddenLayers: model.hiddenLayers.map((hiddenLayer) => {\n        const layers: { [index: string]: IMatrixJSON } = {};\n        for (const p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          layers[p] = hiddenLayer[p].toJSON();\n        }\n        return layers;\n      }),\n      outputConnector: this.model.outputConnector.toJSON(),\n      output: this.model.output.toJSON(),\n    };\n  }\n\n  fromJSON(json: IRNNJSON): this {\n    const { options } = json;\n    const allMatrices = [];\n    const input = Matrix.fromJSON(json.input);\n    allMatrices.push(input);\n    const hiddenLayers: IRNNHiddenLayerModel[] = [];\n\n    json.hiddenLayers.forEach((hiddenLayer) => {\n      const layers: { [index: string]: Matrix } = {};\n      for (const p in hiddenLayer) {\n        layers[p] = Matrix.fromJSON(hiddenLayer[p]);\n        allMatrices.push(layers[p]);\n      }\n      hiddenLayers.push(layers as IRNNHiddenLayerModel);\n    });\n\n    const outputConnector = Matrix.fromJSON(json.outputConnector);\n    allMatrices.push(outputConnector);\n    const output = Matrix.fromJSON(json.output);\n    allMatrices.push(output);\n\n    if (options.dataFormatter) {\n      this.options = {\n        ...defaults(),\n        ...options,\n        dataFormatter: DataFormatter.fromJSON(options.dataFormatter),\n      };\n    } else {\n      this.options = {\n        ...defaults(),\n        ...options,\n        dataFormatter: new DataFormatter(),\n      };\n    }\n\n    this.model = Object.seal({\n      isInitialized: true,\n      input,\n      hiddenLayers,\n      output,\n      allMatrices,\n      outputConnector,\n      equations: [],\n      equationConnections: [],\n    });\n    this.initialLayerInputs = this.options.hiddenLayers.map(\n      (size) => new Matrix(size, 1)\n    );\n    this.bindEquation();\n    return this;\n  }\n\n  toFunction(cb?: (src: string) => string): RNNFunction {\n    const { model } = this;\n    const { equations } = this.model;\n    const equation = equations[1];\n    const { states } = equation;\n    const jsonString = JSON.stringify(this.toJSON());\n\n    function previousConnectionIndex(m: Matrix): number {\n      const connection = model.equationConnections[0];\n      const { states } = equations[0];\n      for (let i = 0, max = states.length; i < max; i++) {\n        if (states[i].product === m) {\n          return i;\n        }\n      }\n      return connection.indexOf(m);\n    }\n\n    function matrixOrigin(m: Matrix, stateIndex: number): string {\n      for (let i = 0, max = states.length; i < max; i++) {\n        const state = states[i];\n\n        if (i === stateIndex) {\n          const j = previousConnectionIndex(m);\n          if (j > -1 && (m === state.left || m === state.right)) {\n            return `typeof prevStates[${j}] === 'object' ? prevStates[${j}].product : new Matrix(${m.rows}, ${m.columns})`;\n          }\n          return `new Matrix(${m.rows}, ${m.columns})`;\n        }\n\n        if (m === state.product) return `states[${i}].product`;\n        if (m === state.right) return `states[${i}].right`;\n        if (m === state.left) return `states[${i}].left`;\n      }\n      return '';\n    }\n\n    function matrixToString(m: Matrix, stateIndex: number): string {\n      if (!m || !m.rows || !m.columns) return 'null';\n\n      if (m === model.input) return `json.input`;\n      if (m === model.outputConnector) return `json.outputConnector`;\n      if (m === model.output) return `json.output`;\n\n      for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\n        const hiddenLayer = model.hiddenLayers[i];\n        for (const p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          if (hiddenLayer[p] !== m) continue;\n          return `json.hiddenLayers[${i}].${p}`;\n        }\n      }\n\n      return matrixOrigin(m, stateIndex);\n    }\n\n    function toInner(fnString: string): string {\n      // crude, but should be sufficient for now\n      // function() { body }\n      const fnParts = fnString.toString().split('{');\n      fnParts.shift();\n      // body }\n      const fnBodyString = fnParts.join('{');\n      const fnBodyParts = fnBodyString.split('}');\n      fnBodyParts.pop();\n      // body\n      return fnBodyParts\n        .join('}')\n        .split('\\n')\n        .join('\\n        ')\n        .replace('product.deltas[i] = 0;', '')\n        .replace('product.deltas[column] = 0;', '')\n        .replace('left.deltas[leftIndex] = 0;', '')\n        .replace('right.deltas[rightIndex] = 0;', '')\n        .replace('product.deltas = left.deltas.slice(0);', '');\n    }\n\n    function fileName(fnName: string): string {\n      return `src/recurrent/matrix/${fnName.replace(/[A-Z]/g, function (value) {\n        return `-${value.toLowerCase()}`;\n      })}.js`;\n    }\n\n    const statesRaw = [];\n    const usedFunctionNames: { [methodName: string]: boolean } = {};\n    const innerFunctionsSwitch = [];\n    for (let i = 0, max = states.length; i < max; i++) {\n      const state = states[i];\n      statesRaw.push(`states[${i}] = {\n      name: '${state.forwardFn.name}',\n      left: ${state.left ? matrixToString(state.left, i) : 'undefined'},\n      right: ${state.right ? matrixToString(state.right, i) : 'undefined'},\n      product: ${matrixToString(state.product, i)}\n    }`);\n\n      const fnName = state.forwardFn.name;\n      if (!usedFunctionNames[fnName]) {\n        usedFunctionNames[fnName] = true;\n        innerFunctionsSwitch.push(\n          `        case '${fnName}': //compiled from ${fileName(fnName)}\n          ${toInner(state.forwardFn.toString())}\n          break;`\n        );\n      }\n    }\n\n    const src = `\n  if (typeof rawInput === 'undefined') rawInput = [];\n  if (typeof isSampleI === 'undefined') isSampleI = false;\n  if (typeof temperature === 'undefined') temperature = 1;\n  var json = ${jsonString};\n  ${\n    this.options.dataFormatter\n      ? `${this.options.dataFormatter.toFunctionString()};\n  Object.assign(dataFormatter, json.options.dataFormatter);`\n      : ''\n  }\n  ${\n    this.options.dataFormatter &&\n    typeof this.options.dataFormatter.formatDataIn === 'function'\n      ? `const formatDataIn = function (input, output) { ${toInner(\n          this.options.dataFormatter.formatDataIn.toString()\n        )} }.bind(dataFormatter);`\n      : ''\n  }\n  ${\n    this.options.dataFormatter !== null &&\n    typeof this.options.dataFormatter.formatDataOut === 'function'\n      ? `const formatDataOut = function formatDataOut(input, output) { ${toInner(\n          this.options.dataFormatter.formatDataOut.toString()\n        )} }.bind(dataFormatter);`\n      : ''\n  }\n  var maxPredictionLength =\n    ${this.options.maxPredictionLength} +\n    rawInput.length +\n    ${\n      this.options.dataFormatter\n        ? this.options.dataFormatter.specialIndexes.length\n        : 0\n    };\n  var input = ${\n    this.options.dataFormatter &&\n    typeof this.options.dataFormatter.formatDataIn === 'function'\n      ? 'formatDataIn(rawInput)'\n      : 'rawInput'\n  };\n  var _i = 0;\n  var output = [];\n  var states = [];\n  var prevStates;\n  while (true) {\n    var previousIndex = (_i === 0\n        ? 0\n        : _i < input.length\n          ? input[_i - 1] + 1\n          : output[_i - 1])\n          ;\n    var rowPluckIndex = previousIndex;\n    prevStates = states;\n    states = [];\n    ${statesRaw.join(';\\n    ')};\n    for (var stateIndex = 0, stateMax = ${\n      statesRaw.length\n    }; stateIndex < stateMax; stateIndex++) {\n      var state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n      switch (state.name) {\n${innerFunctionsSwitch.join('\\n')}\n      }\n    }\n\n    var logProbabilities = state.product;\n    if (temperature !== 1 && isSampleI) {\n      for (var q = 0, nq = logProbabilities.weights.length; q < nq; q++) {\n        logProbabilities.weights[q] /= temperature;\n      }\n    }\n\n    var probs = softmax(logProbabilities);\n    var nextIndex = isSampleI ? sampleI(probs) : maxI(probs);\n\n    _i++;\n    if (nextIndex === 0) {\n      break;\n    }\n    if (_i >= maxPredictionLength) {\n      break;\n    }\n\n    output.push(nextIndex);\n  }\n  ${\n    this.options.dataFormatter &&\n    typeof this.options.dataFormatter.formatDataOut === 'function'\n      ? 'return formatDataOut(input, output.slice(input.length).map(function(value) { return value - 1; }))'\n      : 'return output.slice(input.length).map(function(value) { return value - 1; })'\n  };\n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n  }\n  ${zeros.toString()}\n  ${softmax.toString().replace('_1.Matrix', 'Matrix')}\n  ${randomFloat.toString()}\n  ${sampleI.toString()}\n  ${maxI.toString()}`;\n    // eslint-disable-next-line\n    return new Function(\n      'rawInput',\n      'isSampleI',\n      'temperature',\n      cb ? cb(src) : src\n    ) as RNNFunction;\n  }\n\n  trainPattern(input: number[], logErrorRate?: boolean): number {\n    const error = this.trainInput(input);\n    this.backpropagate(input);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return error;\n    }\n    return 0;\n  }\n}\n\nexport interface IRNNJSON {\n  type: string;\n  options: IRNNJSONOptions;\n  trainOpts: IRNNJSONTrainOptions;\n  input: IMatrixJSON;\n  hiddenLayers: Array<{ [index: string]: IMatrixJSON }>;\n  outputConnector: IMatrixJSON;\n  output: IMatrixJSON;\n}\n\nexport function last<T>(values: T[]): T {\n  return values[values.length - 1];\n}\n\nexport type RNNFunction = (\n  rawInput?: Array<Value | IRNNDatum> | string,\n  isSampleI?: boolean,\n  temperature?: number\n) => string;\n","import { Matrix } from './matrix';\nimport { Equation } from './matrix/equation';\nimport { RandomMatrix } from './matrix/random-matrix';\nimport { IRNNHiddenLayer, RNN } from './rnn';\n\nexport interface IGRUHiddenLayer extends IRNNHiddenLayer {\n  updateGateInputMatrix: RandomMatrix;\n  updateGateHiddenMatrix: RandomMatrix;\n  updateGateBias: Matrix;\n  resetGateInputMatrix: RandomMatrix;\n  resetGateHiddenMatrix: RandomMatrix;\n  resetGateBias: Matrix;\n  cellWriteInputMatrix: RandomMatrix;\n  cellWriteHiddenMatrix: RandomMatrix;\n  cellWriteBias: Matrix;\n}\n\nexport class GRU extends RNN {\n  getHiddenLayer(hiddenSize: number, prevSize: number): IRNNHiddenLayer {\n    return getGRUHiddenLayer(hiddenSize, prevSize);\n  }\n\n  getEquation(\n    equation: Equation,\n    inputMatrix: Matrix,\n    previousResult: Matrix,\n    hiddenLayer: IRNNHiddenLayer\n  ): Matrix {\n    return getGRUEquation(\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer as IGRUHiddenLayer\n    );\n  }\n}\n\nexport function getGRUHiddenLayer(\n  hiddenSize: number,\n  prevSize: number\n): IGRUHiddenLayer {\n  return {\n    // update Gate\n    // wzxh\n    updateGateInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wzhh\n    updateGateHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bz\n    updateGateBias: new Matrix(hiddenSize, 1),\n    // reset Gate\n    // wrxh\n    resetGateInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wrhh\n    resetGateHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // br\n    resetGateBias: new Matrix(hiddenSize, 1),\n    // cell write parameters\n    // wcxh\n    cellWriteInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wchh\n    cellWriteHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bc\n    cellWriteBias: new Matrix(hiddenSize, 1),\n  };\n}\n\nexport function getGRUEquation(\n  equation: Equation,\n  inputMatrix: Matrix,\n  previousResult: Matrix,\n  hiddenLayer: IGRUHiddenLayer\n): Matrix {\n  if (\n    !hiddenLayer.updateGateInputMatrix ||\n    !hiddenLayer.updateGateHiddenMatrix ||\n    !hiddenLayer.updateGateBias ||\n    !hiddenLayer.resetGateInputMatrix ||\n    !hiddenLayer.resetGateHiddenMatrix ||\n    !hiddenLayer.resetGateBias ||\n    !hiddenLayer.cellWriteInputMatrix ||\n    !hiddenLayer.cellWriteHiddenMatrix ||\n    !hiddenLayer.cellWriteBias\n  ) {\n    throw new Error('hiddenLayer does not have expected properties');\n  }\n\n  const sigmoid = equation.sigmoid.bind(equation);\n  const add = equation.add.bind(equation);\n  const multiply = equation.multiply.bind(equation);\n  const multiplyElement = equation.multiplyElement.bind(equation);\n  const tanh = equation.tanh.bind(equation);\n  const allOnes = equation.allOnes.bind(equation);\n  const cloneNegative = equation.cloneNegative.bind(equation);\n\n  // update gate\n  const updateGate = sigmoid(\n    add(\n      add(\n        multiply(hiddenLayer.updateGateInputMatrix, inputMatrix),\n        multiply(hiddenLayer.updateGateHiddenMatrix, previousResult)\n      ),\n      hiddenLayer.updateGateBias\n    )\n  );\n\n  // reset gate\n  const resetGate = sigmoid(\n    add(\n      add(\n        multiply(hiddenLayer.resetGateInputMatrix, inputMatrix),\n        multiply(hiddenLayer.resetGateHiddenMatrix, previousResult)\n      ),\n      hiddenLayer.resetGateBias\n    )\n  );\n\n  // cell\n  const cell = tanh(\n    add(\n      add(\n        multiply(hiddenLayer.cellWriteInputMatrix, inputMatrix),\n        multiply(\n          hiddenLayer.cellWriteHiddenMatrix,\n          multiplyElement(resetGate, previousResult)\n        )\n      ),\n      hiddenLayer.cellWriteBias\n    )\n  );\n\n  // compute hidden state as gated, saturated cell activations\n  // negate updateGate\n  return add(\n    multiplyElement(\n      add(\n        allOnes(updateGate.rows, updateGate.columns),\n        cloneNegative(updateGate)\n      ),\n      cell\n    ),\n    multiplyElement(previousResult, updateGate)\n  );\n}\n","export class ArrayLookupTable {\n  length = 0;\n  table: { [key: string]: number } = {};\n\n  constructor(\n    data: Array<{\n      input: Array<Record<string, number>>;\n      output: Array<Record<string, number>>;\n    }>,\n    public prop: 'input' | 'output'\n  ) {\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      const ioValue = datum[prop];\n      for (let j = 0; j < ioValue.length; j++) {\n        const value = ioValue[j];\n        for (const p in value) {\n          if (!value.hasOwnProperty(p)) continue;\n          if (this.table.hasOwnProperty(p)) continue;\n          this.table[p] = this.length++;\n        }\n      }\n    }\n  }\n}\n","import {\n  FormattableData,\n  InputOutputValue,\n  INumberArray,\n  INumberHash,\n  ITrainingDatum,\n  lookup,\n} from '../lookup';\nimport { ArrayLookupTable } from '../utilities/array-lookup-table';\nimport {\n  arraysToFloat32Arrays,\n  arrayToFloat32Arrays,\n  inputOutputArraysToFloat32Arrays,\n  inputOutputArrayToFloat32Arrays,\n  inputOutputObjectsToFloat32Arrays,\n  inputOutputObjectToFloat32Arrays,\n  objectToFloat32Array,\n  objectToFloat32Arrays,\n} from '../utilities/cast';\nimport { LookupTable } from '../utilities/lookup-table';\nimport { randomFloat } from '../utilities/random';\nimport { IMatrixJSON, Matrix } from './matrix';\nimport { Equation } from './matrix/equation';\nimport { maxI } from './matrix/max-i';\nimport { RandomMatrix } from './matrix/random-matrix';\nimport { sampleI } from './matrix/sample-i';\nimport { softmax } from './matrix/softmax';\nimport {\n  defaults as rnnDefaults,\n  IRNNHiddenLayer,\n  IRNNHiddenLayerModel,\n  IRNNOptions,\n  IRNNStatus,\n  IRNNTrainingOptions,\n  last,\n  RNN,\n  trainDefaults as rnnTrainDefaults,\n} from './rnn';\n\nexport type ValuesOf<\n  T extends InputOutputValue | InputOutputValue[]\n> = T[number];\n\nexport interface IRNNTimeStepOptions extends IRNNTimeStepJSONOptions {\n  inputSize: number;\n  inputRange: number;\n  hiddenLayers: number[];\n  outputSize: number;\n  decayRate: number;\n  smoothEps: number;\n  regc: number;\n  clipval: number;\n  maxPredictionLength: number;\n  json?: IRNNTimeStepJSON;\n}\n\nexport interface IRNNTimeStepJSONOptions {\n  inputSize: number;\n  inputRange: number;\n  hiddenLayers: number[];\n  outputSize: number;\n  decayRate: number;\n  smoothEps: number;\n  regc: number;\n  clipval: number;\n  maxPredictionLength: number;\n}\n\nexport interface IRNNTimeStepJSON {\n  type: string;\n  options: IRNNTimeStepJSONOptions;\n  hiddenLayers: Array<{ [index: string]: IMatrixJSON }>;\n  outputConnector: IMatrixJSON;\n  output: IMatrixJSON;\n  inputLookup: INumberHash | null;\n  inputLookupLength: number;\n  outputLookup: INumberHash | null;\n  outputLookupLength: number;\n}\n\nexport interface IMisclass {\n  value: FormattableData;\n  actual: FormattableData;\n}\n\nexport interface ITestResults {\n  misclasses: IMisclass[];\n  error: number;\n  total: number;\n}\n\nexport interface IRNNTimeStepModel {\n  isInitialized: boolean;\n  hiddenLayers: IRNNHiddenLayer[];\n  output: Matrix;\n  equations: Equation[];\n  allMatrices: Matrix[];\n  equationConnections: Matrix[][];\n  outputConnector: RandomMatrix | Matrix;\n}\n\nexport const defaults = (): IRNNOptions => {\n  return {\n    ...rnnDefaults(),\n    inputSize: 1,\n    hiddenLayers: [20],\n    outputSize: 1,\n    inputRange: 0,\n  };\n};\n\nexport class RNNTimeStep extends RNN {\n  inputLookupLength = 0;\n  inputLookup: INumberHash | null = null;\n  outputLookup: INumberHash | null = null;\n  outputLookupLength = 0;\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  model: IRNNTimeStepModel = Object.seal({\n    isInitialized: false,\n    hiddenLayers: [],\n    output: new Matrix(0, 0),\n    equations: [],\n    allMatrices: [],\n    equationConnections: [],\n    outputConnector: new RandomMatrix(0, 0, 0.08),\n  });\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  options: IRNNTimeStepOptions = defaults();\n  constructor(\n    options: Partial<IRNNTimeStepOptions & IRNNTrainingOptions> = {}\n  ) {\n    super();\n    this.options = { ...this.options, ...options };\n    this.updateTrainingOptions({\n      ...trainDefaults,\n      ...options,\n    });\n\n    if (options.json) {\n      this.fromJSON(options.json);\n    }\n  }\n\n  createInputMatrix(): RandomMatrix {\n    throw new Error('Input Matrices do not exist on RNNTimeStep');\n  }\n\n  createOutputMatrices(): { outputConnector: RandomMatrix; output: Matrix } {\n    const { outputSize } = this.options;\n    const lastHiddenSize = last(this.options.hiddenLayers);\n\n    // whd\n    const outputConnector = new RandomMatrix(outputSize, lastHiddenSize, 0.08);\n    // bd\n    const output = new RandomMatrix(outputSize, 1, 0.08);\n    return { output, outputConnector };\n  }\n\n  bindEquation(): void {\n    const { model, options } = this;\n    const { hiddenLayers, inputSize } = options;\n    const layers = model.hiddenLayers;\n    const equation = new Equation();\n    const outputs = [];\n    const equationConnection =\n      model.equationConnections.length > 0\n        ? model.equationConnections[model.equationConnections.length - 1]\n        : this.initialLayerInputs;\n    // 0 index\n    let output = this.getEquation(\n      equation,\n      equation.input(new Matrix(inputSize, 1)),\n      equationConnection[0],\n      layers[0]\n    );\n    outputs.push(output);\n    // 1+ indices\n    for (let i = 1, max = hiddenLayers.length; i < max; i++) {\n      output = this.getEquation(\n        equation,\n        output,\n        equationConnection[i],\n        layers[i]\n      );\n      outputs.push(output);\n    }\n\n    model.equationConnections.push(outputs);\n    equation.add(\n      equation.multiply(model.outputConnector, output),\n      model.output\n    );\n    model.equations.push(equation);\n  }\n\n  initialize(): void {\n    this.model = this.mapModel();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  mapModel(): IRNNTimeStepModel {\n    const allMatrices: Matrix[] = [];\n    this.initialLayerInputs = this.options.hiddenLayers.map(\n      (size) => new Matrix(size, 1)\n    );\n\n    const hiddenLayers = this.createHiddenLayers();\n    for (let i = 0, max = hiddenLayers.length; i < max; i++) {\n      const hiddenMatrix = hiddenLayers[i];\n      for (const property in hiddenMatrix) {\n        if (!hiddenMatrix.hasOwnProperty(property)) continue;\n        allMatrices.push(hiddenMatrix[property]);\n      }\n    }\n\n    const { outputConnector, output } = this.createOutputMatrices();\n\n    allMatrices.push(outputConnector);\n    allMatrices.push(output);\n    return Object.seal({\n      isInitialized: true,\n      hiddenLayers,\n      output,\n      equations: [],\n      allMatrices,\n      equationConnections: [],\n      outputConnector,\n    });\n  }\n\n  backpropagate(): void {\n    for (let i = this.model.equations.length - 1; i > -1; i--) {\n      this.model.equations[i].backpropagate();\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  run<InputType extends InputOutputValue | InputOutputValue[]>(\n    rawInput: InputType\n  ): ValuesOf<InputType> {\n    const shape = lookup.dataShape(rawInput).join(',');\n    switch (shape) {\n      case 'array,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.runArray(rawInput as Float32Array);\n      case 'array,array,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.runArrayOfArray(rawInput as Float32Array[]);\n      case 'object,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.runObject(rawInput as INumberHash); // Backward compatibility, will be result of `unknown` and need casting.  Better to just use net.runObject() directly\n      case 'array,object,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.runArrayOfObject(rawInput as INumberHash[]);\n      default:\n        throw new Error(`Unrecognized data shape ${shape}`);\n    }\n  }\n\n  forecast<InputType extends InputOutputValue | InputOutputValue[]>(\n    rawInput: InputType,\n    count = 1\n  ): InputType {\n    const shape = lookup.dataShape(rawInput).join(',');\n    switch (shape) {\n      case 'array,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.forecastArray(rawInput as Float32Array, count);\n      case 'array,array,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.forecastArrayOfArray(rawInput as Float32Array[], count);\n      case 'object,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.runObject(rawInput as INumberHash);\n      case 'array,object,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.forecastArrayOfObject(rawInput as INumberHash[], count);\n      default:\n        throw new Error(`Unrecognized data shape ${shape}`);\n    }\n  }\n\n  forecastArray(input: Float32Array, count = 1): Float32Array {\n    this.checkRunnable();\n    const { model } = this;\n    const { equations } = model;\n    const length = input.length + count;\n    while (equations.length <= length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    let equationIndex = 0;\n    if (this.options.inputSize === 1) {\n      for (let i = 0; i < input.length; i++) {\n        lastOutput = equations[equationIndex++].runInput(\n          Float32Array.from([input[i]])\n        );\n      }\n    } else {\n      for (let i = 0; i < input.length; i++) {\n        lastOutput = equations[equationIndex++].runInput(Float32Array.from([]));\n      }\n    }\n    if (!lastOutput) {\n      throw new Error('lastOutput not set');\n    }\n    const result = [lastOutput.weights[0]];\n    for (let i = 0, max = count - 1; i < max; i++) {\n      lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n      result.push(lastOutput.weights[0]);\n    }\n    this.end();\n    return Float32Array.from(result);\n  }\n\n  forecastArrayOfArray(input: Float32Array[], count = 1): Float32Array[] {\n    this.checkRunnable();\n    const { model } = this;\n    const { equations } = model;\n    const length = input.length + count;\n    while (equations.length <= length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    let equationIndex = 0;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[equationIndex++].runInput(input[i]);\n    }\n    if (!lastOutput) {\n      throw new Error('lastOutput not set');\n    }\n    const result = [Float32Array.from(lastOutput.weights)];\n    for (let i = 0, max = count - 1; i < max; i++) {\n      lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n      result.push(Float32Array.from(lastOutput.weights.slice(0)));\n    }\n    this.end();\n    return result;\n  }\n\n  forecastArrayOfObject(input: INumberHash[], count = 1): INumberHash[] {\n    if (!this.inputLookup) {\n      throw new Error('this.inputLookup not set');\n    }\n    if (!this.outputLookup) {\n      throw new Error('this.outputLookup not set');\n    }\n    const formattedData = input.map((value) =>\n      lookup.toArray(\n        this.inputLookup as INumberHash,\n        value,\n        this.inputLookupLength\n      )\n    );\n    return this.forecastArrayOfArray(formattedData, count).map((value) =>\n      lookup.toObject(this.outputLookup as INumberHash, value)\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  train(\n    data: FormattableData[],\n    trainOpts: Partial<IRNNTrainingOptions> = {}\n  ): IRNNStatus {\n    this.trainOpts = trainOpts = {\n      ...rnnTrainDefaults,\n      ...trainOpts,\n    };\n    // Don't destructure here because this.setSize() can reset this.options.\n    if (this.options.inputSize === 1 && this.options.outputSize === 1) {\n      this.setSize(data);\n    }\n    this.verifySize();\n\n    const formattedData = this.formatData(data);\n    let error = Infinity;\n    let i;\n\n    this.verifyIsInitialized();\n    const {\n      iterations,\n      errorThresh,\n      logPeriod,\n      callback,\n      callbackPeriod,\n    } = this.trainOpts;\n    const log = trainOpts.log === true ? console.log : trainOpts.log;\n    for (i = 0; i < iterations && error > errorThresh; i++) {\n      let sum = 0;\n      for (let j = 0; j < formattedData.length; j++) {\n        const err = this.trainPattern(formattedData[j], true);\n        sum += err;\n      }\n      error = sum / formattedData.length;\n\n      if (isNaN(error))\n        throw new Error(\n          'Network error rate is unexpected NaN, check network configurations and try again. Most probably input format is not correct or training data is not enough. '\n        );\n      if (log && i % logPeriod === 0) {\n        log(`iterations: ${i}, training error: ${error}`);\n      }\n      if (callback && i % callbackPeriod === 0) {\n        callback({ error, iterations: i });\n      }\n    }\n\n    return {\n      error,\n      iterations: i,\n    };\n  }\n\n  trainArrayOfArray(input: Float32Array[]): number {\n    if (input.length < 2) {\n      throw new Error('input must be an array of 2 or more');\n    }\n    const { equations } = this.model;\n    while (equations.length < input.length) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    for (let i = 0, max = input.length - 1; i < max; i++) {\n      errorSum += equations[i].predictTarget(input[i], input[i + 1]);\n    }\n    this.end();\n    return errorSum / input.length;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  trainPattern(input: Float32Array[], logErrorRate?: boolean): number {\n    const error = this.trainArrayOfArray(input);\n    this.backpropagate();\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return error;\n    }\n    return 0;\n  }\n\n  setSize(data: FormattableData[]): void {\n    let size = 0;\n    const dataShape = lookup.dataShape(data).join(',');\n    switch (dataShape) {\n      case 'array,array,number':\n      case 'array,object,number':\n      case 'array,datum,array,number':\n      case 'array,datum,object,number':\n        size = 1;\n        // probably 1\n        break;\n      case 'array,array,array,number':\n        size = (data as number[][][])[0][0].length;\n        break;\n      case 'array,array,object,number':\n        // inputs and outputs should match\n        size = Object.keys(lookup.toTable2D(data as INumberHash[][])).length;\n        break;\n      case 'array,datum,array,array,number':\n        size = ((data as unknown) as Array<{\n          [key: string]: number[][];\n        }>)[0].input[0].length;\n        break;\n      case 'array,datum,array,object,number':\n        size = Object.keys(\n          lookup.toInputTable2D(\n            data as Array<{ input: Array<{ [key: string]: number }> }>\n          )\n        ).length;\n        break;\n      default:\n        throw new Error('unknown data shape or configuration');\n    }\n    this.options = Object.seal({\n      ...this.options,\n      inputSize: size,\n      outputSize: size,\n    });\n  }\n\n  verifySize(): void {\n    if (this.options.inputSize || this.options.outputSize) {\n      if (this.options.inputSize !== this.options.outputSize) {\n        throw new Error('manually set inputSize and outputSize mismatch');\n      }\n    }\n  }\n\n  runArray(input: Float32Array): number {\n    this.checkRunnable();\n    const { equations } = this.model;\n    while (equations.length <= input.length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[i].runInput(new Float32Array([input[i]]));\n    }\n    this.end();\n    return (lastOutput as Matrix).weights[0];\n  }\n\n  runArrayOfArray(input: Float32Array[]): Float32Array {\n    this.checkRunnable();\n    const { model } = this;\n    const { equations } = model;\n    while (equations.length <= input.length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    for (let i = 0; i < input.length; i++) {\n      const outputMatrix = equations[i].runInput(input[i]);\n      lastOutput = outputMatrix.weights;\n    }\n    this.end();\n    return lastOutput ?? Float32Array.from([]);\n  }\n\n  runObject(input: INumberHash): INumberHash {\n    if (!this.inputLookup) {\n      throw new Error('this.inputLookup not set');\n    }\n    if (!this.outputLookup) {\n      throw new Error('this.outputLookup not set');\n    }\n    if (!this.outputLookupLength) {\n      throw new Error('this.outputLookupLength not set');\n    }\n    if (this.inputLookup === this.outputLookup) {\n      const inputArray = lookup.toArrayShort(this.inputLookup, input);\n      return lookup.toObjectPartial(\n        this.outputLookup,\n        this.forecastArray(\n          inputArray,\n          this.outputLookupLength - inputArray.length\n        ),\n        inputArray.length\n      );\n    }\n    return lookup.toObject(\n      this.outputLookup,\n      this.forecastArray(\n        lookup.toArray(this.inputLookup, input, this.inputLookupLength),\n        this.outputLookupLength\n      )\n    );\n  }\n\n  runArrayOfObject(input: INumberHash[]): INumberHash {\n    if (this.inputLookup === null) {\n      throw new Error('this.inputLookup not set');\n    }\n    if (this.outputLookup === null) {\n      throw new Error('this.outputLookup not set');\n    }\n    const formattedInput = input.map((value) =>\n      lookup.toArray(\n        this.inputLookup as INumberHash,\n        value,\n        this.inputLookupLength\n      )\n    );\n    return this.forecastArrayOfArray(formattedInput, 1).map((value) =>\n      lookup.toObject(this.outputLookup as INumberHash, value)\n    )[0];\n  }\n\n  runArrayOfObjectOfArray(input: INumberHash[]): INumberHash {\n    if (!this.inputLookup) {\n      throw new Error('this.inputLookup not set');\n    }\n    if (!this.outputLookup) {\n      throw new Error('this.outputLookup not set');\n    }\n    return lookup.toObject(\n      this.outputLookup,\n      this.runArrayOfArray(\n        lookup.toArrays(this.inputLookup, input, this.inputLookupLength)\n      )\n    );\n  }\n\n  end(): void {\n    this.model.equations[this.model.equations.length - 1].runInput(\n      new Float32Array(this.options.outputSize)\n    );\n  }\n\n  requireInputOutputOfOne(): void {\n    if (this.options.inputSize !== 1) {\n      throw new Error('inputSize must be 1 for this data size');\n    }\n    if (this.options.outputSize !== 1) {\n      throw new Error('outputSize must be 1 for this data size');\n    }\n  }\n\n  // Handles data shape of 'array,number'\n  formatArray(data: number[]): Float32Array[][] {\n    const result = [];\n    this.requireInputOutputOfOne();\n    for (let i = 0; i < data.length; i++) {\n      result.push(Float32Array.from([data[i]]));\n    }\n    return [result];\n  }\n\n  // Handles data shape of 'array,array,number'\n  formatArrayOfArray(data: number[][]): Float32Array[][] {\n    const result = [];\n    const { inputSize, outputSize } = this.options;\n    if (inputSize === 1 && outputSize === 1) {\n      for (let i = 0; i < data.length; i++) {\n        result.push(arrayToFloat32Arrays(data[i]));\n      }\n      return result;\n    }\n    if (inputSize !== data[0].length) {\n      throw new Error('inputSize must match data input size');\n    }\n    if (outputSize !== data[0].length) {\n      throw new Error('outputSize must match data output size');\n    }\n    for (let i = 0; i < data.length; i++) {\n      result.push(Float32Array.from(data[i]));\n    }\n    return [result];\n  }\n\n  // Handles data shape of 'array,object,number'\n  formatArrayOfObject(data: INumberHash[]): Float32Array[][] {\n    this.requireInputOutputOfOne();\n    if (!this.inputLookup) {\n      const lookupTable = new LookupTable(data);\n      this.inputLookup = this.outputLookup = lookupTable.table;\n      this.inputLookupLength = this.outputLookupLength = lookupTable.length;\n    }\n    const result = [];\n    for (let i = 0; i < data.length; i++) {\n      result.push(objectToFloat32Arrays(data[i]));\n    }\n    return result;\n  }\n\n  // Handles data shape of 'array,object,number' when this.options.inputSize > 1\n  formatArrayOfObjectMulti(data: INumberHash[]): Float32Array[][] {\n    if (!this.inputLookup) {\n      const lookupTable = new LookupTable(data);\n      this.inputLookup = this.outputLookup = lookupTable.table;\n      this.inputLookupLength = this.outputLookupLength = lookupTable.length;\n    }\n    const result = [];\n    for (let i = 0; i < data.length; i++) {\n      result.push([\n        objectToFloat32Array(data[i], this.inputLookup, this.inputLookupLength),\n      ]);\n    }\n    return result;\n  }\n\n  // Handles data shape of 'array,datum,array,number'\n  formatArrayOfDatumOfArray(data: ITrainingDatum[]): Float32Array[][] {\n    const result = [];\n    this.requireInputOutputOfOne();\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      result.push(\n        inputOutputArrayToFloat32Arrays(\n          datum.input as number[],\n          datum.output as number[]\n        )\n      );\n    }\n    return result;\n  }\n\n  // Handles data shape of 'array,datum,object,number'\n  formatArrayOfDatumOfObject(data: ITrainingDatum[]): Float32Array[][] {\n    this.requireInputOutputOfOne();\n    if (!this.inputLookup) {\n      const inputLookup = new LookupTable(data, 'input');\n      this.inputLookup = inputLookup.table;\n      this.inputLookupLength = inputLookup.length;\n    }\n    if (!this.outputLookup) {\n      const outputLookup = new LookupTable(data, 'output');\n      this.outputLookup = outputLookup.table;\n      this.outputLookupLength = outputLookup.length;\n    }\n    const result = [];\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      result.push(\n        inputOutputObjectToFloat32Arrays(\n          datum.input as INumberHash,\n          datum.output as INumberHash\n        )\n      );\n    }\n    return result;\n  }\n\n  // Handles data shape of 'array,array,array,number'\n  formatArrayOfArrayOfArray(data: number[][][]): Float32Array[][] {\n    const result = [];\n    for (let i = 0; i < data.length; i++) {\n      result.push(arraysToFloat32Arrays(data[i]));\n    }\n    return result;\n  }\n\n  // Handles data shape of 'array,array,object,number'\n  formatArrayOfArrayOfObject(data: INumberHash[][]): Float32Array[][] {\n    if (!this.inputLookup) {\n      const lookupTable = new LookupTable(data);\n      this.inputLookup = this.outputLookup = lookupTable.table;\n      this.inputLookupLength = this.outputLookupLength = lookupTable.length;\n    }\n    const result = [];\n    for (let i = 0; i < data.length; i++) {\n      const array = [];\n      for (let j = 0; j < data[i].length; j++) {\n        array.push(\n          objectToFloat32Array(\n            data[i][j],\n            this.inputLookup,\n            this.inputLookupLength\n          )\n        );\n      }\n      result.push(array);\n    }\n    return result;\n  }\n\n  // Handles data shape of 'array,datum,array,array,number'\n  formatArrayOfDatumOfArrayOfArray(data: ITrainingDatum[]): Float32Array[][] {\n    const result = [];\n    const { inputSize, outputSize } = this.options;\n    if (inputSize !== (data[0].input as INumberArray[][])[0].length) {\n      throw new Error('inputSize must match data input size');\n    }\n    if (outputSize !== (data[0].output as INumberArray[][])[0].length) {\n      throw new Error('outputSize must match data output size');\n    }\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      result.push(\n        inputOutputArraysToFloat32Arrays(\n          datum.input as number[][],\n          datum.output as number[][]\n        )\n      );\n    }\n    return result;\n  }\n\n  // 'Handles data shape of array,datum,array,object,number'\n  formatArrayOfDatumOfArrayOfObject(\n    data: Array<{\n      input: Array<Record<string, number>>;\n      output: Array<Record<string, number>>;\n    }>\n  ): Float32Array[][] {\n    if (!this.inputLookup) {\n      const inputLookup = new ArrayLookupTable(data, 'input');\n      this.inputLookup = inputLookup.table;\n      this.inputLookupLength = inputLookup.length;\n    }\n    if (!this.outputLookup) {\n      const outputLookup = new ArrayLookupTable(data, 'output');\n      this.outputLookup = outputLookup.table;\n      this.outputLookupLength = outputLookup.length;\n    }\n    if (!this.outputLookupLength) {\n      throw new Error('this.outputLookupLength not set to usable number');\n    }\n    const result = [];\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      result.push(\n        inputOutputObjectsToFloat32Arrays(\n          datum.input,\n          datum.output,\n          this.inputLookup,\n          this.outputLookup,\n          this.inputLookupLength,\n          this.outputLookupLength\n        )\n      );\n    }\n    return result;\n  }\n\n  formatData(data: FormattableData[]): Float32Array[][] {\n    const dataShape = lookup.dataShape(data).join(',');\n    switch (dataShape) {\n      case 'array,number':\n        return this.formatArray(data as number[]);\n      case 'array,array,number':\n        return this.formatArrayOfArray(data as number[][]);\n      case 'array,object,number':\n        if (this.options.inputSize === 1) {\n          return this.formatArrayOfObject(data as INumberHash[]);\n        } else {\n          return this.formatArrayOfObjectMulti(data as INumberHash[]);\n        }\n      case 'array,datum,array,number':\n        return this.formatArrayOfDatumOfArray(data as ITrainingDatum[]);\n      case 'array,datum,object,number':\n        return this.formatArrayOfDatumOfObject(data as ITrainingDatum[]);\n      case 'array,array,array,number':\n        return this.formatArrayOfArrayOfArray(data as number[][][]);\n      case 'array,array,object,number':\n        return this.formatArrayOfArrayOfObject(data as INumberHash[][]);\n      case 'array,datum,array,array,number':\n        return this.formatArrayOfDatumOfArrayOfArray(data as ITrainingDatum[]);\n      case 'array,datum,array,object,number':\n        return this.formatArrayOfDatumOfArrayOfObject(\n          data as Array<{\n            input: Array<Record<string, number>>;\n            output: Array<Record<string, number>>;\n          }>\n        );\n      default:\n        throw new Error('unknown data shape or configuration');\n    }\n  }\n\n  test(data: FormattableData[]): ITestResults {\n    // for classification problems\n    const misclasses = [];\n    // run each pattern through the trained network and collect\n    // error and misclassification statistics\n    let errorSum = 0;\n    const formattedData = this.formatData(data);\n    for (let i = 0; i < formattedData.length; i++) {\n      const input = formattedData[i];\n      const output = this.run(input.splice(0, input.length - 1));\n      const target = input[input.length - 1];\n      let errors = 0;\n      let errorCount = 0;\n      for (let j = 0; j < output.length; j++) {\n        errorCount++;\n        const error = target[j] - output[j];\n        // mse\n        errors += error * error;\n      }\n      errorSum += errors / errorCount;\n      const errorsAbs = Math.abs(errors);\n      if (errorsAbs > this.trainOpts.errorThresh) {\n        const misclass = (data as number[][][])[i];\n        misclasses.push({\n          value: misclass,\n          actual: output,\n        });\n      }\n    }\n    return {\n      error: errorSum / formattedData.length,\n      misclasses,\n      total: formattedData.length,\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  addFormat(value: FormattableData): void {\n    const dataShape = lookup.dataShape(value).join(',');\n    switch (dataShape) {\n      case 'array,array,number':\n      case 'datum,array,array,number':\n      case 'array,number':\n      case 'datum,array,number':\n        return;\n      case 'datum,object,number': {\n        this.inputLookup = lookup.addKeys(\n          (value as ITrainingDatum).input as INumberHash,\n          this.inputLookup ?? {}\n        );\n        if (this.inputLookup) {\n          this.inputLookupLength = Object.keys(this.inputLookup).length;\n        }\n        this.outputLookup = lookup.addKeys(\n          (value as ITrainingDatum).output as INumberHash,\n          this.outputLookup ?? {}\n        );\n        if (this.outputLookup) {\n          this.outputLookupLength = Object.keys(this.outputLookup).length;\n        }\n        break;\n      }\n      case 'object,number': {\n        this.inputLookup = this.outputLookup = lookup.addKeys(\n          value as INumberHash,\n          this.inputLookup ?? {}\n        );\n        if (this.inputLookup) {\n          this.inputLookupLength = this.outputLookupLength = Object.keys(\n            this.inputLookup\n          ).length;\n        }\n        break;\n      }\n      case 'array,object,number': {\n        const typedValue = value as INumberHash[];\n        for (let i = 0; i < typedValue.length; i++) {\n          this.inputLookup = this.outputLookup = lookup.addKeys(\n            typedValue[i],\n            this.inputLookup ?? {}\n          );\n          if (this.inputLookup) {\n            this.inputLookupLength = this.outputLookupLength = Object.keys(\n              this.inputLookup\n            ).length;\n          }\n        }\n        break;\n      }\n      case 'datum,array,object,number': {\n        const typedValue = value as ITrainingDatum;\n        const typedInput = typedValue.input as INumberHash[];\n        for (let i = 0; i < typedInput.length; i++) {\n          this.inputLookup = lookup.addKeys(\n            typedInput[i],\n            this.inputLookup ?? {}\n          );\n          if (this.inputLookup) {\n            this.inputLookupLength = Object.keys(this.inputLookup).length;\n          }\n        }\n        const typedOutput = typedValue.output as INumberHash[];\n        for (let i = 0; i < typedOutput.length; i++) {\n          this.outputLookup = lookup.addKeys(\n            typedOutput[i],\n            this.outputLookup ?? {}\n          );\n          if (this.outputLookup) {\n            this.outputLookupLength = Object.keys(this.outputLookup).length;\n          }\n        }\n        break;\n      }\n\n      default:\n        throw new Error('unknown data shape or configuration');\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  toJSON(): IRNNTimeStepJSON {\n    if (!this.model) {\n      this.initialize();\n    }\n    const { model } = this;\n    const options = { ...this.options, ...rnnDefaults };\n\n    return {\n      type: this.constructor.name,\n      options,\n      hiddenLayers: model.hiddenLayers.map((hiddenLayer) => {\n        const layers: { [index: string]: IMatrixJSON } = {};\n        for (const p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          layers[p] = hiddenLayer[p].toJSON();\n        }\n        return layers;\n      }),\n      outputConnector: model.outputConnector.toJSON(),\n      output: model.output.toJSON(),\n      inputLookup: this.inputLookup,\n      inputLookupLength: this.inputLookupLength,\n      outputLookup: this.outputLookup,\n      outputLookupLength: this.outputLookupLength,\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  fromJSON(json: IRNNTimeStepJSON): this {\n    const { options } = json;\n    const allMatrices = [];\n    const hiddenLayers: IRNNHiddenLayerModel[] = [];\n\n    // backward compatibility for hiddenSizes\n    json.hiddenLayers.forEach((hiddenLayer) => {\n      const layers: { [index: string]: Matrix } = {};\n      for (const p in hiddenLayer) {\n        layers[p] = Matrix.fromJSON(hiddenLayer[p]);\n        allMatrices.push(layers[p]);\n      }\n      hiddenLayers.push(layers as IRNNHiddenLayerModel);\n    });\n\n    const outputConnector = Matrix.fromJSON(json.outputConnector);\n    allMatrices.push(outputConnector);\n    const output = Matrix.fromJSON(json.output);\n    allMatrices.push(output);\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    this.options = { ...defaults(), ...options };\n    this.inputLookup = json.inputLookup;\n    this.inputLookupLength = json.inputLookupLength;\n    this.outputLookup = json.outputLookup;\n    this.outputLookupLength = json.outputLookupLength;\n\n    this.model = Object.seal({\n      isInitialized: true,\n      hiddenLayers,\n      output,\n      allMatrices,\n      outputConnector,\n      equations: [],\n      equationConnections: [],\n    });\n    this.initialLayerInputs = options.hiddenLayers.map(\n      (size) => new Matrix(size, 1)\n    );\n    this.bindEquation();\n    return this;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  toFunction(cb?: (src: string) => string): RNNTimeStepFunction {\n    const {\n      model,\n      inputLookup,\n      inputLookupLength,\n      outputLookup,\n      outputLookupLength,\n    } = this;\n    const { inputSize } = this.options;\n    const { equations } = model;\n    const equation = equations[1];\n    const { states } = equation;\n    const jsonString = JSON.stringify(this.toJSON());\n\n    function previousConnectionIndex(m: Matrix) {\n      const connection = model.equationConnections[0];\n      const { states } = equations[0];\n      for (let i = 0, max = states.length; i < max; i++) {\n        if (states[i].product === m) {\n          return i;\n        }\n      }\n      return connection.indexOf(m);\n    }\n\n    function matrixOrigin(m: Matrix, stateIndex: number): string {\n      for (let i = 0, max = states.length; i < max; i++) {\n        const state = states[i];\n\n        if (i === stateIndex) {\n          const j = previousConnectionIndex(m);\n          switch (m) {\n            case state.left:\n              if (j > -1) {\n                return `typeof prevStates[${j}] === 'object' ? prevStates[${j}].product : new Matrix(${m.rows}, ${m.columns})`;\n              }\n            // eslint-disable-next-line no-fallthrough\n            case state.right:\n              if (j > -1) {\n                return `typeof prevStates[${j}] === 'object' ? prevStates[${j}].product : new Matrix(${m.rows}, ${m.columns})`;\n              }\n            // eslint-disable-next-line no-fallthrough\n            case state.product:\n              return `new Matrix(${m.rows}, ${m.columns})`;\n            default:\n              throw Error('unknown state');\n          }\n        }\n\n        if (m === state.product) return `states[${i}].product`;\n        if (m === state.right) return `states[${i}].right`;\n        if (m === state.left) return `states[${i}].left`;\n      }\n      return '';\n    }\n\n    function matrixToString(m: Matrix, stateIndex: number): string {\n      if (!m || !m.rows || !m.columns) return 'null';\n      if (m === model.outputConnector) return `json.outputConnector`;\n      if (m === model.output) return `json.output`;\n\n      for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\n        const hiddenLayer = model.hiddenLayers[i];\n        for (const p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          if (hiddenLayer[p] !== m) continue;\n          return `json.hiddenLayers[${i}].${p}`;\n        }\n      }\n\n      return matrixOrigin(m, stateIndex);\n    }\n\n    function formatInputData() {\n      if (!inputLookup) return '';\n      if (inputSize === 1) {\n        if (inputLookup === outputLookup) {\n          return `function lookupInput(input) {\n            var table = ${JSON.stringify(inputLookup)};\n            var result = [];\n            for (var p in table) {\n              if (!input.hasOwnProperty(p)) break;\n              result.push(Float32Array.from([input[p]]));\n            }\n            return result;\n          }`;\n        }\n        return `function lookupInput(input) {\n          var table = ${JSON.stringify(inputLookup)};\n          var result = [];\n          for (var p in table) {\n            result.push(Float32Array.from([input[p]]));\n          }\n          return result;\n        }`;\n      }\n      return `function lookupInput(rawInputs) {\n        var table = ${JSON.stringify(inputLookup)};\n        var result = [];\n        for (var i = 0; i < rawInputs.length; i++) {\n          var rawInput = rawInputs[i];\n          var input = new Float32Array(${inputLookupLength});\n          for (var p in table) {\n            input[table[p]] = rawInput.hasOwnProperty(p) ? rawInput[p] : 0;\n          }\n          result.push(input);\n        }\n        return result;\n      }`;\n    }\n\n    function formatOutputData() {\n      if (!outputLookup) return '';\n      if (inputSize === 1) {\n        if (inputLookup === outputLookup) {\n          return `function lookupOutputPartial(output, input) {\n            var table = ${JSON.stringify(outputLookup)};\n            var offset = input.length;\n            var result = {};\n            var i = 0;\n            for (var p in table) {\n              if (i++ < offset) continue;\n              result[p] = output[table[p] - offset][0];\n            }\n            return result;\n          }`;\n        }\n        return `function lookupOutput(output) {\n          var table = ${JSON.stringify(outputLookup)};\n          var result = {};\n          for (var p in table) {\n            result[p] = output[table[p]][0];\n          }\n          return result;\n        }`;\n      }\n      return `function lookupOutput(output) {\n        var table = ${JSON.stringify(outputLookup)};\n        var result = {};\n        for (var p in table) {\n          result[p] = output[table[p]];\n        }\n        return result;\n      }`;\n    }\n\n    function toInner(fnString: string) {\n      // crude, but should be sufficient for now\n      // function() { body }\n      // crude, but should be sufficient for now\n      // function() { body }\n      const fnParts = fnString.toString().split('{');\n      fnParts.shift();\n      // body }\n      const fnBodyString = fnParts.join('{');\n      const fnBodyParts = fnBodyString.split('}');\n      fnBodyParts.pop();\n      // body\n      return fnBodyParts\n        .join('}')\n        .split('\\n')\n        .join('\\n        ')\n        .replace('product.deltas[i] = 0;', '')\n        .replace('product.deltas[column] = 0;', '')\n        .replace('left.deltas[leftIndex] = 0;', '')\n        .replace('right.deltas[rightIndex] = 0;', '')\n        .replace('product.deltas = left.deltas.slice(0);', '');\n    }\n\n    function fileName(fnName: string) {\n      return `src/recurrent/matrix/${fnName.replace(/[A-Z]/g, function (value) {\n        return `-${value.toLowerCase()}`;\n      })}.js`;\n    }\n\n    const statesRaw = [];\n    const usedFunctionNames: { [methodName: string]: boolean } = {};\n    const innerFunctionsSwitch = [];\n    for (let i = 0, max = states.length; i < max; i++) {\n      const state = states[i];\n      statesRaw.push(`states[${i}] = {\n      name: '${state.forwardFn.name}',\n      left: ${state.left ? matrixToString(state.left, i) : 'undefined'},\n      right: ${state.right ? matrixToString(state.right, i) : 'undefined'},\n      product: ${matrixToString(state.product, i)}\n    }`);\n\n      const fnName = state.forwardFn.name;\n      if (!usedFunctionNames[fnName]) {\n        usedFunctionNames[fnName] = true;\n        if (state.name === 'input') {\n          innerFunctionsSwitch.push(`case '${fnName}':`);\n          innerFunctionsSwitch.push(\n            inputLookup && inputSize === 1\n              ? 'product.weights = _i < input.length ? input[_i]: prevStates[prevStates.length - 1].product.weights;'\n              : inputSize === 1\n              ? 'product.weights = [input[_i]];'\n              : 'product.weights = input[_i];'\n          );\n          innerFunctionsSwitch.push('break;');\n        } else {\n          innerFunctionsSwitch.push(\n            `        case '${fnName}':${\n              fnName !== 'forwardFn'\n                ? ` //compiled from ${fileName(fnName)}`\n                : ''\n            }\n          ${toInner(state.forwardFn.toString())}\n          break;`\n          );\n        }\n      }\n    }\n\n    const forceForecast = inputSize === 1 && this.outputLookup;\n    const src = `\n  var input = ${this.inputLookup ? 'lookupInput(rawInput)' : 'rawInput'};\n  var json = ${jsonString};\n  var output = [];\n  var states = [];\n  var prevStates;\n  var state;\n  var max = ${\n    forceForecast\n      ? inputLookup === outputLookup\n        ? inputLookupLength\n        : `input.length + ${outputLookupLength - 1}`\n      : 'input.length'\n  };\n  for (var _i = 0; _i < max; _i++) {\n    prevStates = states;\n    states = [];\n    ${statesRaw.join(';\\n    ')};\n    for (var stateIndex = 0, stateMax = ${\n      statesRaw.length\n    }; stateIndex < stateMax; stateIndex++) {\n      state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n\n      switch (state.name) {\n${innerFunctionsSwitch.join('\\n')}\n      }\n    }\n    ${\n      inputSize === 1 && inputLookup\n        ? 'if (_i >= input.length - 1) { output.push(state.product.weights); }'\n        : 'output = state.product.weights;'\n    }\n  }\n  ${\n    outputLookup\n      ? outputLookup === inputLookup\n        ? 'return lookupOutputPartial(output, input)'\n        : 'return lookupOutput(output)'\n      : inputSize === 1\n      ? 'return output[0]'\n      : 'return output'\n  };\n  ${formatInputData()}\n  ${formatOutputData()}\n\n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = new Float32Array(rows * columns);\n  }\n  ${softmax.toString().replace('_2.default', 'Matrix')}\n  ${randomFloat.toString()}\n  ${sampleI.toString()}\n  ${maxI.toString()}`;\n    // eslint-disable-next-line\n    return new Function('rawInput', cb ? cb(src) : src) as RNNTimeStepFunction;\n  }\n}\n\nexport type RNNTimeStepFunction = <\n  InputType extends InputOutputValue | InputOutputValue[]\n>(\n  rawInput?: InputType,\n  isSampleI?: boolean,\n  temperature?: number\n) => ValuesOf<InputType>;\n\nexport const trainDefaults = { ...rnnTrainDefaults };\n","import { getGRUHiddenLayer, getGRUEquation, IGRUHiddenLayer } from './gru';\nimport { Matrix } from './matrix';\nimport { Equation } from './matrix/equation';\nimport { RNNTimeStep } from './rnn-time-step';\nimport { IRNNHiddenLayer } from './rnn';\n\nexport class GRUTimeStep extends RNNTimeStep {\n  getHiddenLayer(hiddenSize: number, prevSize: number): IRNNHiddenLayer {\n    return getGRUHiddenLayer(hiddenSize, prevSize);\n  }\n\n  getEquation(\n    equation: Equation,\n    inputMatrix: Matrix,\n    previousResult: Matrix,\n    hiddenLayer: IRNNHiddenLayer\n  ): Matrix {\n    return getGRUEquation(\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer as IGRUHiddenLayer\n    );\n  }\n}\n","import { Matrix } from './matrix';\nimport { Equation } from './matrix/equation';\nimport { RandomMatrix } from './matrix/random-matrix';\nimport { IRNNHiddenLayer, RNN } from './rnn';\n\nexport interface ILSTMHiddenLayer extends IRNNHiddenLayer {\n  inputMatrix: Matrix;\n  inputHidden: Matrix;\n  inputBias: Matrix;\n  forgetMatrix: Matrix;\n  forgetHidden: Matrix;\n  forgetBias: Matrix;\n  outputMatrix: Matrix;\n  outputHidden: Matrix;\n  outputBias: Matrix;\n  cellActivationMatrix: Matrix;\n  cellActivationHidden: Matrix;\n  cellActivationBias: Matrix;\n}\n\nexport class LSTM extends RNN {\n  getHiddenLayer(hiddenSize: number, prevSize: number): IRNNHiddenLayer {\n    return getHiddenLSTMLayer(hiddenSize, prevSize);\n  }\n\n  getEquation(\n    equation: Equation,\n    inputMatrix: Matrix,\n    previousResult: Matrix,\n    hiddenLayer: IRNNHiddenLayer\n  ): Matrix {\n    return getLSTMEquation(\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer as ILSTMHiddenLayer\n    );\n  }\n}\n\nexport function getHiddenLSTMLayer(\n  hiddenSize: number,\n  prevSize: number\n): ILSTMHiddenLayer {\n  return {\n    // gates parameters\n    // wix\n    inputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wih\n    inputHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bi\n    inputBias: new Matrix(hiddenSize, 1),\n    // wfx\n    forgetMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wfh\n    forgetHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bf\n    forgetBias: new Matrix(hiddenSize, 1),\n    // wox\n    outputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // woh\n    outputHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bo\n    outputBias: new Matrix(hiddenSize, 1),\n    // cell write params\n    // wcx\n    cellActivationMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wch\n    cellActivationHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bc\n    cellActivationBias: new Matrix(hiddenSize, 1),\n  };\n}\n\nexport function getLSTMEquation(\n  equation: Equation,\n  inputMatrix: Matrix,\n  previousResult: Matrix,\n  hiddenLayer: ILSTMHiddenLayer\n): Matrix {\n  if (\n    !hiddenLayer.inputMatrix ||\n    !hiddenLayer.inputHidden ||\n    !hiddenLayer.inputBias ||\n    !hiddenLayer.forgetMatrix ||\n    !hiddenLayer.forgetHidden ||\n    !hiddenLayer.forgetBias ||\n    !hiddenLayer.outputMatrix ||\n    !hiddenLayer.outputHidden ||\n    !hiddenLayer.outputBias ||\n    !hiddenLayer.cellActivationMatrix ||\n    !hiddenLayer.cellActivationHidden ||\n    !hiddenLayer.cellActivationBias\n  ) {\n    throw new Error('hiddenLayer does not have expected properties');\n  }\n\n  const sigmoid = equation.sigmoid.bind(equation);\n  const add = equation.add.bind(equation);\n  const multiply = equation.multiply.bind(equation);\n  const multiplyElement = equation.multiplyElement.bind(equation);\n  const tanh = equation.tanh.bind(equation);\n\n  const inputGate = sigmoid(\n    add(\n      add(\n        multiply(hiddenLayer.inputMatrix, inputMatrix),\n        multiply(hiddenLayer.inputHidden, previousResult)\n      ),\n      hiddenLayer.inputBias\n    )\n  );\n\n  const forgetGate = sigmoid(\n    add(\n      add(\n        multiply(hiddenLayer.forgetMatrix, inputMatrix),\n        multiply(hiddenLayer.forgetHidden, previousResult)\n      ),\n      hiddenLayer.forgetBias\n    )\n  );\n\n  // output gate\n  const outputGate = sigmoid(\n    add(\n      add(\n        multiply(hiddenLayer.outputMatrix, inputMatrix),\n        multiply(hiddenLayer.outputHidden, previousResult)\n      ),\n      hiddenLayer.outputBias\n    )\n  );\n\n  // write operation on cells\n  const cellWrite = tanh(\n    add(\n      add(\n        multiply(hiddenLayer.cellActivationMatrix, inputMatrix),\n        multiply(hiddenLayer.cellActivationHidden, previousResult)\n      ),\n      hiddenLayer.cellActivationBias\n    )\n  );\n\n  // compute new cell activation\n  const retainCell = multiplyElement(forgetGate, previousResult); // what do we keep from cell\n  const writeCell = multiplyElement(inputGate, cellWrite); // what do we write to cell\n  const cell = add(retainCell, writeCell); // new cell contents\n\n  // compute hidden state as gated, saturated cell activations\n  return multiplyElement(outputGate, tanh(cell));\n}\n","import { getHiddenLSTMLayer, getLSTMEquation, ILSTMHiddenLayer } from './lstm';\nimport { Matrix } from './matrix';\nimport { Equation } from './matrix/equation';\nimport { RNNTimeStep } from './rnn-time-step';\nimport { IRNNHiddenLayer } from './rnn';\n\nexport class LSTMTimeStep extends RNNTimeStep {\n  getHiddenLayer(hiddenSize: number, prevSize: number): IRNNHiddenLayer {\n    return getHiddenLSTMLayer(hiddenSize, prevSize);\n  }\n\n  getEquation(\n    equation: Equation,\n    inputMatrix: Matrix,\n    previousResult: Matrix,\n    hiddenLayer: IRNNHiddenLayer\n  ): Matrix {\n    return getLSTMEquation(\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer as ILSTMHiddenLayer\n    );\n  }\n}\n","/**\n *\n * @param start\n * @param end\n * @returns {Array}\n */\nexport function range(start: number, end: number): number[] {\n  const result: number[] = [];\n  for (; start < end; start++) {\n    result.push(start);\n  }\n  return result;\n}\n","export function toArray(\n  values: number[] | Float32Array | { [key: string]: number }\n): Float32Array {\n  if (Array.isArray(values)) {\n    return Float32Array.from(values);\n  }\n\n  return Float32Array.from(Object.values(values));\n}\n","import { FeedForward, IFeedForwardJSON } from '../feed-forward';\nimport { recurrentZeros } from '../layer/recurrent-zeros';\nimport { Recurrent } from '../recurrent';\nimport { IRNNJSON, RNN } from '../recurrent/rnn';\nimport { INeuralNetworkJSON, NeuralNetwork } from '../neural-network';\nimport { GRU } from '../recurrent/gru';\nimport { LSTM } from '../recurrent/lstm';\nimport { NeuralNetworkGPU } from '../neural-network-gpu';\nimport { IRNNTimeStepJSON, RNNTimeStep } from '../recurrent/rnn-time-step';\nimport { LSTMTimeStep } from '../recurrent/lstm-time-step';\nimport { GRUTimeStep } from '../recurrent/gru-time-step';\nimport { ILayer } from '../layer';\n\ninterface LineDrawInfo {\n  className: string;\n  color: string;\n  width: number;\n}\n\ninterface NodeDrawInfo {\n  className: string;\n  color: string;\n}\n\ninterface BaseDrawArgs {\n  pixelX: number;\n  pixelY: number;\n  radius: number;\n  row: number;\n  column: number;\n}\n\ninterface InputDrawArgs extends BaseDrawArgs {\n  line: LineDrawInfo;\n  inputs: NodeDrawInfo & { labels?: string[] | null };\n  fontSize: string;\n  fontClassName: string;\n}\n\nexport function drawInput({\n  pixelX,\n  pixelY,\n  radius,\n  inputs,\n  row,\n  line,\n  fontSize,\n  fontClassName,\n}: InputDrawArgs): string {\n  let svg = `<rect\n              x=\"${pixelX / 2 - radius}\"\n              y=\"${pixelY / 2 + row * pixelY - radius}\"\n              width=\"${2 * radius}\"\n              height=\"${2 * radius}\"\n              stroke=\"black\"\n              stroke-width=\"1\"\n              fill=\"${inputs.color}\"\n              class=\"${inputs.className}\" />\n            <line\n              x1=\"${pixelX / 4}\"\n              y1=\"${pixelY / 2 + row * pixelY}\"\n              x2=\"${pixelX / 2 - radius}\"\n              y2=\"${pixelY / 2 + row * pixelY}\"\n              style=\"stroke:${line.color};stroke-width:${line.width}\"\n              class=\"${line.className}\" />`;\n  if (inputs.labels) {\n    svg += `<text\n              x=\"${pixelX / 8}\"\n              y=\"${pixelY / 2 + row * pixelY - 5}\"\n              fill=\"black\"\n              font-size=\"${fontSize}\"\n              class=\"${fontClassName}\">${inputs.labels[row]}</text>`;\n  }\n  return svg;\n}\n\nexport interface NeuronDrawArgs extends BaseDrawArgs {\n  column: number;\n  hidden: NodeDrawInfo;\n}\n\nexport function drawNeuron({\n  pixelX,\n  pixelY,\n  row,\n  column,\n  radius,\n  hidden,\n}: NeuronDrawArgs): string {\n  return `<circle\n            cx=\"${pixelX / 2 + column * pixelX}\"\n            cy=\"${pixelY / 2 + row * pixelY}\"\n            r=\"${radius}\"\n            stroke=\"black\"\n            stroke-width=\"1\"\n            fill=\"${hidden.color}\"\n            class=\"${hidden.className}\" />`;\n}\n\nexport interface OutputDrawArgs extends BaseDrawArgs {\n  column: number;\n  line: LineDrawInfo;\n  outputs: NodeDrawInfo;\n}\n\nexport function drawOutput({\n  pixelX,\n  pixelY,\n  row,\n  column,\n  line,\n  outputs,\n  radius,\n}: OutputDrawArgs): string {\n  return `<circle\n            cx=\"${pixelX / 2 + column * pixelX}\"\n            cy=\"${pixelY / 2 + row * pixelY}\"\n            r=\"${radius}\"\n            stroke=\"black\"\n            stroke-width=\"1\"\n            fill=\"${outputs.color}\"\n            class=\"${outputs.className}\" />\n          <line\n            x1=\"${pixelX / 2 + column * pixelX + radius}\"\n            y1=\"${pixelY / 2 + row * pixelY}\"\n            x2=\"${pixelX / 2 + column * pixelX + pixelX / 4}\"\n            y2=\"${pixelY / 2 + row * pixelY}\"\n            style=\"stroke:${line.color};stroke-width:${line.width}\"\n            class=\"${line.className}\" />`;\n}\n\nexport interface BackwardConnectionsDrawArgs extends BaseDrawArgs {\n  column: number;\n  lineY: number;\n  previousConnectionIndex: number;\n  line: LineDrawInfo;\n}\n\nexport function drawBackwardConnections({\n  pixelX,\n  pixelY,\n  row,\n  column,\n  radius,\n  lineY,\n  line,\n  previousConnectionIndex,\n}: BackwardConnectionsDrawArgs): string {\n  return `<line\n            x1=\"${pixelX / 2 + (column - 1) * pixelX + radius}\"\n            y1=\"${lineY / 2 + previousConnectionIndex * lineY}\"\n            x2=\"${pixelX / 2 + column * pixelX - radius}\"\n            y2=\"${pixelY / 2 + row * pixelY}\"\n            style=\"stroke:${line.color};stroke-width:${line.width}\"\n            class=\"${line.className}\" />`;\n}\n\nexport interface NeuralNetworkDrawOptions {\n  sizes: number[];\n  height: number;\n  width: number;\n  radius: number;\n  line: LineDrawInfo;\n  inputs: NodeDrawInfo & { labels?: string[] | null };\n  hidden: NodeDrawInfo;\n  outputs: NodeDrawInfo;\n  fontSize: string;\n  fontClassName: string;\n}\n\nexport function neuralNetworkToInnerSVG(\n  options: NeuralNetworkDrawOptions\n): string {\n  const { sizes, height, width } = options;\n  let svg = '';\n  const pixelX = width / sizes.length;\n  for (let column = 0; column < sizes.length; column++) {\n    const size = sizes[column];\n    const pixelY = height / size;\n    for (let row = 0; row < size; row++) {\n      if (column === 0) {\n        svg += drawInput({ pixelX, pixelY, row, column, ...options });\n      } else {\n        if (column === sizes.length - 1) {\n          svg += drawOutput({ pixelX, pixelY, row, column, ...options });\n        } else {\n          svg += drawNeuron({ pixelX, pixelY, row, column, ...options });\n        }\n        const previousSize = sizes[column - 1];\n        const lineY = height / previousSize;\n        for (\n          let previousConnectionIndex = 0;\n          previousConnectionIndex < previousSize;\n          previousConnectionIndex++\n        ) {\n          svg += drawBackwardConnections({\n            pixelX,\n            pixelY,\n            row,\n            column,\n            lineY,\n            previousConnectionIndex,\n            ...options,\n          });\n        }\n      }\n    }\n  }\n  return svg;\n}\n\nexport interface RecurrentConnectionsDrawArgs extends BaseDrawArgs {\n  column: number;\n  recurrentLine: LineDrawInfo;\n}\n\nexport function drawRecurrentConnections({\n  pixelX,\n  pixelY,\n  row,\n  column,\n  radius,\n  recurrentLine,\n}: RecurrentConnectionsDrawArgs): string {\n  const moveX = pixelX / 2 + column * pixelX + radius + 1;\n  const moveY = pixelY / 2 + row * pixelY;\n  const x = moveX - radius * 2 - 2;\n  const y = moveY;\n  const x1 = x + 100;\n  const y1 = y + 50;\n  const x2 = moveX - 100;\n  const y2 = moveY + 50;\n  return `<path\n              d=\"M ${moveX} ${moveY} C ${x1} ${y1}, ${x2} ${y2}, ${x} ${y}\"\n              stroke=\"${recurrentLine.color}\"\n              stroke-width=\"${recurrentLine.width}\"\n              fill=\"transparent\"\n              stroke-linecap=\"round\"\n              marker-end=\"url(#arrow)\"\n              class=\"${recurrentLine.className}\" />`;\n}\n\nexport interface RecurrentNeuralNetworkDrawOptions\n  extends NeuralNetworkDrawOptions {\n  recurrentLine: LineDrawInfo;\n}\n\nexport function rnnToInnerSVG(\n  options: RecurrentNeuralNetworkDrawOptions\n): string {\n  const { width, height, recurrentLine, sizes, radius } = options;\n  const pixelX = width / sizes.length;\n  let svg = `<defs>\n              <marker id=\"arrow\" markerWidth=\"10\" markerHeight=\"10\" refX=\"8\" refY=\"3\" orient=\"auto\" markerUnits=\"strokeWidth\">\n                <path d=\"M0,0 L0,6 L9,3 z\" fill=\"${recurrentLine.color}\" />\n              </marker>\n            </defs>`;\n  svg += neuralNetworkToInnerSVG(options);\n  for (let column = 1; column < sizes.length; column++) {\n    const size = sizes[column];\n    const pixelY = height / size;\n    for (let row = 0; row < size; row++) {\n      svg += drawRecurrentConnections({\n        pixelX,\n        pixelY,\n        row,\n        column,\n        radius,\n        recurrentLine,\n      });\n    }\n  }\n  return svg;\n}\n\nexport function getFeedForwardLayers(network: FeedForward): ISimpleNet {\n  const { options } = network;\n  if (!options) {\n    throw new Error('options not defined');\n  }\n  if (!options.inputLayer) {\n    throw new Error('options.inputLater not defined');\n  }\n  if (!options.hiddenLayers) {\n    throw new Error('options.hiddenLayers not defined');\n  }\n  if (options.hiddenLayers.length < 1) {\n    throw new Error('options.hiddenLayers is empty');\n  }\n  if (!options.outputLayer) {\n    throw new Error('options.outputLayer not defined');\n  }\n  const inputLayer = options.inputLayer();\n  const hiddenLayers = [];\n  hiddenLayers.push(options.hiddenLayers[0](inputLayer, 0));\n  for (let i = 1; i < options.hiddenLayers.length; i++) {\n    hiddenLayers.push(options.hiddenLayers[i](hiddenLayers[i - 1], i));\n  }\n  const outputLayer = options.outputLayer(\n    hiddenLayers[hiddenLayers.length - 1],\n    hiddenLayers.length\n  );\n  return {\n    inputSize: inputLayer.height,\n    hiddenLayers: hiddenLayers.map((hiddenLayer: ILayer) => hiddenLayer.height),\n    outputSize: outputLayer.height,\n  };\n}\n\nexport function getRecurrentLayers(network: Recurrent): ISimpleNet {\n  const hiddenLayers: ILayer[] = [];\n  const { options } = network;\n  if (!options.inputLayer) {\n    throw new Error('inputLayer not defined');\n  }\n  if (!options.outputLayer) {\n    throw new Error('outputLayer not defined');\n  }\n  const inputLayer = options.inputLayer();\n  hiddenLayers.push(options.hiddenLayers[0](inputLayer, recurrentZeros(), 0));\n  for (let i = 1; i < options.hiddenLayers.length; i++) {\n    hiddenLayers.push(\n      options.hiddenLayers[i](hiddenLayers[i - 1], recurrentZeros(), i)\n    );\n  }\n  const outputLayer = options.outputLayer(\n    hiddenLayers[hiddenLayers.length - 1],\n    -1\n  );\n  return {\n    inputSize: inputLayer.height,\n    hiddenLayers: hiddenLayers.map((hiddenLayer: ILayer) => hiddenLayer.height),\n    outputSize: outputLayer.height,\n  };\n}\n\nexport function wrapOuterSVG(\n  svgBody: string,\n  width: number,\n  height: number\n): string {\n  // language=html\n  return `<svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            version=\"1.1\"\n            width=\"${width}\"\n            height=\"${height}\">${svgBody}</svg>`;\n}\n\nexport function getNeuralNetworkJSONSizes(json: INeuralNetworkJSON): number[] {\n  return json.sizes;\n}\n\nexport function getNeuralNetworkSizes<InputType, OutputType>(\n  net:\n    | NeuralNetwork<InputType, OutputType>\n    | NeuralNetworkGPU<InputType, OutputType>\n): number[] {\n  const { options, sizes } = net;\n  const { inputSize, outputSize, hiddenLayers } = options;\n  if (!sizes) {\n    if (typeof inputSize === 'number' && inputSize < 1) {\n      throw new Error('inputSize not set');\n    }\n    if (typeof outputSize === 'number' && outputSize < 1) {\n      throw new Error('outputSize not set');\n    }\n    if (hiddenLayers?.some((v) => v < 1)) {\n      throw new Error('hiddenLayers not set');\n    }\n  }\n  return typeof inputSize === 'number' &&\n    Array.isArray(hiddenLayers) &&\n    typeof outputSize === 'number'\n    ? [inputSize].concat(hiddenLayers).concat([outputSize])\n    : sizes;\n}\n\nexport function getRNNSizes(\n  net: RNN | LSTM | GRU | RNNTimeStep | LSTMTimeStep | GRUTimeStep | IRNNJSON\n): number[] {\n  const { options } = net;\n  const { inputSize, outputSize, hiddenLayers } = options;\n  return [inputSize].concat(hiddenLayers).concat([outputSize]);\n}\n\nexport function defaultOptions(): RecurrentNeuralNetworkDrawOptions {\n  return {\n    line: {\n      width: 0.5,\n      color: 'black',\n      className: 'connection',\n    },\n    recurrentLine: {\n      width: 1,\n      color: 'red',\n      className: 'recurrence',\n    },\n    inputs: {\n      color: 'rgba(0, 128, 0, 0.5)',\n      labels: null,\n      className: 'input',\n    },\n    outputs: {\n      color: 'rgba(100, 149, 237, 0.5)',\n      className: 'output',\n    },\n    hidden: {\n      color: 'rgba(255, 127, 80, 0.5)',\n      className: 'hidden-neuron',\n    },\n    fontSize: '14px',\n    fontClassName: 'label',\n    radius: 8,\n    width: 400,\n    height: 250,\n    sizes: [],\n  };\n}\n\nexport interface ISimpleNet {\n  inputSize: number;\n  hiddenLayers: number[];\n  outputSize: number;\n}\nexport interface ISizes {\n  sizes: number[];\n}\n\nexport function toSVG<\n  T extends\n    | ISimpleNet\n    | ISizes\n    | Recurrent\n    | FeedForward\n    | IFeedForwardJSON\n    | RNNTimeStep\n    | IRNNTimeStepJSON\n    | LSTMTimeStep\n    | GRUTimeStep\n    | RNN\n    | IRNNJSON\n    | GRU\n    | LSTM\n    | NeuralNetwork<InputType, OutputType>\n    | INeuralNetworkJSON\n    | NeuralNetworkGPU<InputType, OutputType>,\n  InputType,\n  OutputType\n>(\n  net: T,\n  options?:\n    | Partial<RecurrentNeuralNetworkDrawOptions>\n    | Partial<NeuralNetworkDrawOptions>\n): string {\n  const mergedOptions = { ...defaultOptions(), ...options };\n  const { width, height, inputs } = mergedOptions;\n\n  // Get network size array for NeuralNetwork or NeuralNetworkGPU\n  let sizes: number[] = [];\n  if (net instanceof NeuralNetwork || net instanceof NeuralNetworkGPU) {\n    sizes = getNeuralNetworkSizes(net);\n  }\n  // get network size for Recurrent\n  else if (net instanceof Recurrent) {\n    const { inputSize, hiddenLayers, outputSize } = getRecurrentLayers(net);\n    sizes = [inputSize].concat(hiddenLayers).concat([outputSize]);\n  }\n  // get network size for FeedForward\n  else if (net instanceof FeedForward) {\n    const { inputSize, hiddenLayers, outputSize } = getFeedForwardLayers(net);\n    sizes = [inputSize].concat(hiddenLayers).concat([outputSize]);\n  }\n  // handle json, recurrent first\n  else if (\n    net instanceof RNN ||\n    net instanceof LSTM ||\n    net instanceof GRU ||\n    net instanceof RNNTimeStep ||\n    net instanceof LSTMTimeStep ||\n    net instanceof GRUTimeStep\n  ) {\n    return wrapOuterSVG(\n      rnnToInnerSVG({\n        ...mergedOptions,\n        sizes: checkSizes(\n          getRNNSizes(\n            (net as unknown) as\n              | RNN\n              | LSTM\n              | GRU\n              | RNNTimeStep\n              | LSTMTimeStep\n              | GRUTimeStep\n          ),\n          inputs.labels\n        ),\n      }),\n      width,\n      height\n    );\n  }\n  // handle json, NeuralNetwork\n  else if (net.hasOwnProperty('type')) {\n    switch ((net as INeuralNetworkJSON).type) {\n      case 'NeuralNetwork':\n      case 'NeuralNetworkGPU':\n        return wrapOuterSVG(\n          neuralNetworkToInnerSVG({\n            ...mergedOptions,\n            sizes: checkSizes(\n              getNeuralNetworkJSONSizes(net as INeuralNetworkJSON),\n              inputs.labels\n            ),\n          }),\n          width,\n          height\n        );\n      case 'RNN':\n      case 'GRU':\n      case 'LSTM':\n      case 'RNNTimeStep':\n      case 'GRUTimeStep':\n      case 'LSTMTimeStep':\n        return wrapOuterSVG(\n          rnnToInnerSVG({\n            ...mergedOptions,\n            sizes: checkSizes(getRNNSizes(net as IRNNJSON), inputs.labels),\n          }),\n          width,\n          height\n        );\n      default:\n        throw new Error('unrecognized network');\n    }\n  } else if (\n    net.hasOwnProperty('inputSize') &&\n    net.hasOwnProperty('hiddenLayers') &&\n    net.hasOwnProperty('outputSize')\n  ) {\n    const { inputSize, hiddenLayers, outputSize } = net as ISimpleNet;\n    sizes = [inputSize, ...hiddenLayers, outputSize];\n  } else if (net.hasOwnProperty('sizes')) {\n    sizes = (net as ISizes).sizes;\n  } else {\n    throw new Error('unrecognized network');\n  }\n  return wrapOuterSVG(\n    neuralNetworkToInnerSVG({\n      ...mergedOptions,\n      sizes: checkSizes(sizes, inputs.labels),\n    }),\n    width,\n    height\n  );\n}\n\nexport function checkSizes(\n  sizes: number[],\n  labels: string[] | null | undefined\n): number[] {\n  if (!sizes) {\n    throw new Error('sizes not set');\n  }\n  if (sizes.some((size: number) => size < 1)) {\n    throw new Error('sizes not set correctly');\n  }\n  if (labels && labels.length !== sizes[0]) {\n    throw new Error('not enough labels for inputs');\n  }\n  return sizes;\n}\n","import * as activation from './activation';\nimport CrossValidate from './cross-validate';\nimport { FeedForward } from './feed-forward';\nimport * as layer from './layer';\nimport { layerTypes } from './layer';\nimport { likely } from './likely';\nimport { lookup } from './lookup';\nimport { NeuralNetwork } from './neural-network';\nimport { NeuralNetworkGPU } from './neural-network-gpu';\nimport * as praxis from './praxis';\nimport { Recurrent } from './recurrent';\nimport { GRU } from './recurrent/gru';\nimport { GRUTimeStep } from './recurrent/gru-time-step';\nimport { LSTM } from './recurrent/lstm';\nimport { LSTMTimeStep } from './recurrent/lstm-time-step';\nimport { RNN } from './recurrent/rnn';\nimport { RNNTimeStep } from './recurrent/rnn-time-step';\nimport { DataFormatter } from './utilities/data-formatter';\nimport { max } from './utilities/max';\nimport { mse } from './utilities/mse';\nimport { ones, ones2D } from './utilities/ones';\nimport * as random from './utilities/random';\nimport { randomWeight } from './utilities/random-weight';\nimport { randos } from './utilities/randos';\nimport { range } from './utilities/range';\nimport { toArray } from './utilities/to-array';\nimport { toSVG } from './utilities/to-svg';\nimport { zeros } from './utilities/zeros';\n\nconst recurrent = {\n  RNNTimeStep,\n  LSTMTimeStep,\n  GRUTimeStep,\n  RNN,\n  LSTM,\n  GRU,\n};\n\nconst utilities = {\n  max,\n  mse,\n  ones,\n  ones2D,\n  random,\n  randomWeight,\n  randos,\n  range,\n  toArray,\n  DataFormatter,\n  zeros,\n  toSVG,\n};\n\nexport {\n  activation,\n  CrossValidate,\n  likely,\n  layer,\n  layerTypes,\n  lookup,\n  praxis,\n  FeedForward,\n  NeuralNetwork,\n  NeuralNetworkGPU,\n  Recurrent,\n  recurrent,\n  utilities,\n};\n","/**\n * gpu.js\n * http://gpu.rocks/\n *\n * GPU Accelerated JavaScript\n *\n * @version 2.15.2\n * @date Mon Mar 28 2022 10:51:06 GMT-0400 (Eastern Daylight Time)\n *\n * @license MIT\n * The MIT License\n *\n * Copyright (c) 2022 gpu.js Team\n */(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.GPU = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.acorn = {}));\n}(this, (function (exports) { 'use strict';\n\n\n  var reservedWords = {\n    3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n    5: \"class enum extends super const export import\",\n    6: \"enum\",\n    strict: \"implements interface let package private protected public static yield\",\n    strictBind: \"eval arguments\"\n  };\n\n\n  var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\n  var keywords = {\n    5: ecma5AndLessKeywords,\n    \"5module\": ecma5AndLessKeywords + \" export import\",\n    6: ecma5AndLessKeywords + \" const class extends export import super\"\n  };\n\n  var keywordRelationalOperator = /^in(stanceof)?$/;\n\n\n  var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n  var nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n  nonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n\n  var astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938];\n\n  var astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n  function isInAstralSet(code, set) {\n    var pos = 0x10000;\n    for (var i = 0; i < set.length; i += 2) {\n      pos += set[i];\n      if (pos > code) { return false }\n      pos += set[i + 1];\n      if (pos >= code) { return true }\n    }\n  }\n\n\n  function isIdentifierStart(code, astral) {\n    if (code < 65) { return code === 36 }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes)\n  }\n\n\n  function isIdentifierChar(code, astral) {\n    if (code < 48) { return code === 36 }\n    if (code < 58) { return true }\n    if (code < 65) { return false }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n  }\n\n\n\n\n\n  var TokenType = function TokenType(label, conf) {\n    if ( conf === void 0 ) conf = {};\n\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop || null;\n    this.updateContext = null;\n  };\n\n  function binop(name, prec) {\n    return new TokenType(name, {beforeExpr: true, binop: prec})\n  }\n  var beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n\n  var keywords$1 = {};\n\n  function kw(name, options) {\n    if ( options === void 0 ) options = {};\n\n    options.keyword = name;\n    return keywords$1[name] = new TokenType(name, options)\n  }\n\n  var types = {\n    num: new TokenType(\"num\", startsExpr),\n    regexp: new TokenType(\"regexp\", startsExpr),\n    string: new TokenType(\"string\", startsExpr),\n    name: new TokenType(\"name\", startsExpr),\n    eof: new TokenType(\"eof\"),\n\n    bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n    bracketR: new TokenType(\"]\"),\n    braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n    braceR: new TokenType(\"}\"),\n    parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n    parenR: new TokenType(\")\"),\n    comma: new TokenType(\",\", beforeExpr),\n    semi: new TokenType(\";\", beforeExpr),\n    colon: new TokenType(\":\", beforeExpr),\n    dot: new TokenType(\".\"),\n    question: new TokenType(\"?\", beforeExpr),\n    questionDot: new TokenType(\"?.\"),\n    arrow: new TokenType(\"=>\", beforeExpr),\n    template: new TokenType(\"template\"),\n    invalidTemplate: new TokenType(\"invalidTemplate\"),\n    ellipsis: new TokenType(\"...\", beforeExpr),\n    backQuote: new TokenType(\"`\", startsExpr),\n    dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n\n    eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n    assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n    incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n    prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    logicalOR: binop(\"||\", 1),\n    logicalAND: binop(\"&&\", 2),\n    bitwiseOR: binop(\"|\", 3),\n    bitwiseXOR: binop(\"^\", 4),\n    bitwiseAND: binop(\"&\", 5),\n    equality: binop(\"==/!=/===/!==\", 6),\n    relational: binop(\"</>/<=/>=\", 7),\n    bitShift: binop(\"<</>>/>>>\", 8),\n    plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n    modulo: binop(\"%\", 10),\n    star: binop(\"*\", 10),\n    slash: binop(\"/\", 10),\n    starstar: new TokenType(\"**\", {beforeExpr: true}),\n    coalesce: binop(\"??\", 1),\n\n    _break: kw(\"break\"),\n    _case: kw(\"case\", beforeExpr),\n    _catch: kw(\"catch\"),\n    _continue: kw(\"continue\"),\n    _debugger: kw(\"debugger\"),\n    _default: kw(\"default\", beforeExpr),\n    _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n    _else: kw(\"else\", beforeExpr),\n    _finally: kw(\"finally\"),\n    _for: kw(\"for\", {isLoop: true}),\n    _function: kw(\"function\", startsExpr),\n    _if: kw(\"if\"),\n    _return: kw(\"return\", beforeExpr),\n    _switch: kw(\"switch\"),\n    _throw: kw(\"throw\", beforeExpr),\n    _try: kw(\"try\"),\n    _var: kw(\"var\"),\n    _const: kw(\"const\"),\n    _while: kw(\"while\", {isLoop: true}),\n    _with: kw(\"with\"),\n    _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n    _this: kw(\"this\", startsExpr),\n    _super: kw(\"super\", startsExpr),\n    _class: kw(\"class\", startsExpr),\n    _extends: kw(\"extends\", beforeExpr),\n    _export: kw(\"export\"),\n    _import: kw(\"import\", startsExpr),\n    _null: kw(\"null\", startsExpr),\n    _true: kw(\"true\", startsExpr),\n    _false: kw(\"false\", startsExpr),\n    _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n    _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n    _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n  };\n\n\n  var lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\n  var lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n  function isNewLine(code, ecma2019String) {\n    return code === 10 || code === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))\n  }\n\n  var nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\n  var skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n  var ref = Object.prototype;\n  var hasOwnProperty = ref.hasOwnProperty;\n  var toString = ref.toString;\n\n\n  function has(obj, propName) {\n    return hasOwnProperty.call(obj, propName)\n  }\n\n  var isArray = Array.isArray || (function (obj) { return (\n    toString.call(obj) === \"[object Array]\"\n  ); });\n\n  function wordsRegexp(words) {\n    return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n  }\n\n\n  var Position = function Position(line, col) {\n    this.line = line;\n    this.column = col;\n  };\n\n  Position.prototype.offset = function offset (n) {\n    return new Position(this.line, this.column + n)\n  };\n\n  var SourceLocation = function SourceLocation(p, start, end) {\n    this.start = start;\n    this.end = end;\n    if (p.sourceFile !== null) { this.source = p.sourceFile; }\n  };\n\n\n  function getLineInfo(input, offset) {\n    for (var line = 1, cur = 0;;) {\n      lineBreakG.lastIndex = cur;\n      var match = lineBreakG.exec(input);\n      if (match && match.index < offset) {\n        ++line;\n        cur = match.index + match[0].length;\n      } else {\n        return new Position(line, offset - cur)\n      }\n    }\n  }\n\n\n  var defaultOptions = {\n    ecmaVersion: 10,\n    sourceType: \"script\",\n    onInsertedSemicolon: null,\n    onTrailingComma: null,\n    allowReserved: null,\n    allowReturnOutsideFunction: false,\n    allowImportExportEverywhere: false,\n    allowAwaitOutsideFunction: false,\n    allowHashBang: false,\n    locations: false,\n    onToken: null,\n    onComment: null,\n    ranges: false,\n    program: null,\n    sourceFile: null,\n    directSourceFile: null,\n    preserveParens: false\n  };\n\n\n  function getOptions(opts) {\n    var options = {};\n\n    for (var opt in defaultOptions)\n      { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n    if (options.ecmaVersion >= 2015)\n      { options.ecmaVersion -= 2009; }\n\n    if (options.allowReserved == null)\n      { options.allowReserved = options.ecmaVersion < 5; }\n\n    if (isArray(options.onToken)) {\n      var tokens = options.onToken;\n      options.onToken = function (token) { return tokens.push(token); };\n    }\n    if (isArray(options.onComment))\n      { options.onComment = pushComment(options, options.onComment); }\n\n    return options\n  }\n\n  function pushComment(options, array) {\n    return function(block, text, start, end, startLoc, endLoc) {\n      var comment = {\n        type: block ? \"Block\" : \"Line\",\n        value: text,\n        start: start,\n        end: end\n      };\n      if (options.locations)\n        { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n      if (options.ranges)\n        { comment.range = [start, end]; }\n      array.push(comment);\n    }\n  }\n\n  var\n      SCOPE_TOP = 1,\n      SCOPE_FUNCTION = 2,\n      SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION,\n      SCOPE_ASYNC = 4,\n      SCOPE_GENERATOR = 8,\n      SCOPE_ARROW = 16,\n      SCOPE_SIMPLE_CATCH = 32,\n      SCOPE_SUPER = 64,\n      SCOPE_DIRECT_SUPER = 128;\n\n  function functionFlags(async, generator) {\n    return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n  }\n\n  var\n      BIND_NONE = 0, \n      BIND_VAR = 1, \n      BIND_LEXICAL = 2, \n      BIND_FUNCTION = 3, \n      BIND_SIMPLE_CATCH = 4, \n      BIND_OUTSIDE = 5; \n\n  var Parser = function Parser(options, input, startPos) {\n    this.options = options = getOptions(options);\n    this.sourceFile = options.sourceFile;\n    this.keywords = wordsRegexp(keywords[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n    var reserved = \"\";\n    if (options.allowReserved !== true) {\n      for (var v = options.ecmaVersion;; v--)\n        { if (reserved = reservedWords[v]) { break } }\n      if (options.sourceType === \"module\") { reserved += \" await\"; }\n    }\n    this.reservedWords = wordsRegexp(reserved);\n    var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n    this.reservedWordsStrict = wordsRegexp(reservedStrict);\n    this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n    this.input = String(input);\n\n    this.containsEsc = false;\n\n\n    if (startPos) {\n      this.pos = startPos;\n      this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n      this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n    } else {\n      this.pos = this.lineStart = 0;\n      this.curLine = 1;\n    }\n\n    this.type = types.eof;\n    this.value = null;\n    this.start = this.end = this.pos;\n    this.startLoc = this.endLoc = this.curPosition();\n\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\n    this.lastTokStart = this.lastTokEnd = this.pos;\n\n    this.context = this.initialContext();\n    this.exprAllowed = true;\n\n    this.inModule = options.sourceType === \"module\";\n    this.strict = this.inModule || this.strictDirective(this.pos);\n\n    this.potentialArrowAt = -1;\n\n    this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n    this.labels = [];\n    this.undefinedExports = {};\n\n    if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n      { this.skipLineComment(2); }\n\n    this.scopeStack = [];\n    this.enterScope(SCOPE_TOP);\n\n    this.regexpState = null;\n  };\n\n  var prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true } };\n\n  Parser.prototype.parse = function parse () {\n    var node = this.options.program || this.startNode();\n    this.nextToken();\n    return this.parseTopLevel(node)\n  };\n\n  prototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n  prototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 };\n  prototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 };\n  prototypeAccessors.allowSuper.get = function () { return (this.currentThisScope().flags & SCOPE_SUPER) > 0 };\n  prototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n  prototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\n  Parser.prototype.inNonArrowFunction = function inNonArrowFunction () { return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0 };\n\n  Parser.extend = function extend () {\n      var plugins = [], len = arguments.length;\n      while ( len-- ) plugins[ len ] = arguments[ len ];\n\n    var cls = this;\n    for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n    return cls\n  };\n\n  Parser.parse = function parse (input, options) {\n    return new this(options, input).parse()\n  };\n\n  Parser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n    var parser = new this(options, input, pos);\n    parser.nextToken();\n    return parser.parseExpression()\n  };\n\n  Parser.tokenizer = function tokenizer (input, options) {\n    return new this(options, input)\n  };\n\n  Object.defineProperties( Parser.prototype, prototypeAccessors );\n\n  var pp = Parser.prototype;\n\n\n  var literal = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\")/;\n  pp.strictDirective = function(start) {\n    for (;;) {\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      var match = literal.exec(this.input.slice(start));\n      if (!match) { return false }\n      if ((match[1] || match[2]) === \"use strict\") {\n        skipWhiteSpace.lastIndex = start + match[0].length;\n        var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;\n        var next = this.input.charAt(end);\n        return next === \";\" || next === \"}\" ||\n          (lineBreak.test(spaceAfter[0]) &&\n           !(/[(`.[+\\-/*%<>=,?^&]/.test(next) || next === \"!\" && this.input.charAt(end + 1) === \"=\"))\n      }\n      start += match[0].length;\n\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      if (this.input[start] === \";\")\n        { start++; }\n    }\n  };\n\n\n  pp.eat = function(type) {\n    if (this.type === type) {\n      this.next();\n      return true\n    } else {\n      return false\n    }\n  };\n\n\n  pp.isContextual = function(name) {\n    return this.type === types.name && this.value === name && !this.containsEsc\n  };\n\n\n  pp.eatContextual = function(name) {\n    if (!this.isContextual(name)) { return false }\n    this.next();\n    return true\n  };\n\n\n  pp.expectContextual = function(name) {\n    if (!this.eatContextual(name)) { this.unexpected(); }\n  };\n\n\n  pp.canInsertSemicolon = function() {\n    return this.type === types.eof ||\n      this.type === types.braceR ||\n      lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  pp.insertSemicolon = function() {\n    if (this.canInsertSemicolon()) {\n      if (this.options.onInsertedSemicolon)\n        { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n      return true\n    }\n  };\n\n\n  pp.semicolon = function() {\n    if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n  };\n\n  pp.afterTrailingComma = function(tokType, notNext) {\n    if (this.type === tokType) {\n      if (this.options.onTrailingComma)\n        { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n      if (!notNext)\n        { this.next(); }\n      return true\n    }\n  };\n\n\n  pp.expect = function(type) {\n    this.eat(type) || this.unexpected();\n  };\n\n\n  pp.unexpected = function(pos) {\n    this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n  };\n\n  function DestructuringErrors() {\n    this.shorthandAssign =\n    this.trailingComma =\n    this.parenthesizedAssign =\n    this.parenthesizedBind =\n    this.doubleProto =\n      -1;\n  }\n\n  pp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n    if (!refDestructuringErrors) { return }\n    if (refDestructuringErrors.trailingComma > -1)\n      { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n    var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n    if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n  };\n\n  pp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n    if (!refDestructuringErrors) { return false }\n    var shorthandAssign = refDestructuringErrors.shorthandAssign;\n    var doubleProto = refDestructuringErrors.doubleProto;\n    if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n    if (shorthandAssign >= 0)\n      { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n    if (doubleProto >= 0)\n      { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n  };\n\n  pp.checkYieldAwaitInDefaultParams = function() {\n    if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n      { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n    if (this.awaitPos)\n      { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n  };\n\n  pp.isSimpleAssignTarget = function(expr) {\n    if (expr.type === \"ParenthesizedExpression\")\n      { return this.isSimpleAssignTarget(expr.expression) }\n    return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n  };\n\n  var pp$1 = Parser.prototype;\n\n\n\n  pp$1.parseTopLevel = function(node) {\n    var exports = {};\n    if (!node.body) { node.body = []; }\n    while (this.type !== types.eof) {\n      var stmt = this.parseStatement(null, true, exports);\n      node.body.push(stmt);\n    }\n    if (this.inModule)\n      { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n        {\n          var name = list[i];\n\n          this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n        } }\n    this.adaptDirectivePrologue(node.body);\n    this.next();\n    node.sourceType = this.options.sourceType;\n    return this.finishNode(node, \"Program\")\n  };\n\n  var loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\n  pp$1.isLet = function(context) {\n    if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) { return true } \n    if (context) { return false }\n\n    if (nextCh === 123) { return true } \n    if (isIdentifierStart(nextCh, true)) {\n      var pos = next + 1;\n      while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n      var ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) { return true }\n    }\n    return false\n  };\n\n  pp$1.isAsyncFunction = function() {\n    if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n      { return false }\n\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length;\n    return !lineBreak.test(this.input.slice(this.pos, next)) &&\n      this.input.slice(next, next + 8) === \"function\" &&\n      (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n  };\n\n\n  pp$1.parseStatement = function(context, topLevel, exports) {\n    var starttype = this.type, node = this.startNode(), kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n\n    switch (starttype) {\n    case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n    case types._debugger: return this.parseDebuggerStatement(node)\n    case types._do: return this.parseDoStatement(node)\n    case types._for: return this.parseForStatement(node)\n    case types._function:\n      if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n      return this.parseFunctionStatement(node, false, !context)\n    case types._class:\n      if (context) { this.unexpected(); }\n      return this.parseClass(node, true)\n    case types._if: return this.parseIfStatement(node)\n    case types._return: return this.parseReturnStatement(node)\n    case types._switch: return this.parseSwitchStatement(node)\n    case types._throw: return this.parseThrowStatement(node)\n    case types._try: return this.parseTryStatement(node)\n    case types._const: case types._var:\n      kind = kind || this.value;\n      if (context && kind !== \"var\") { this.unexpected(); }\n      return this.parseVarStatement(node, kind)\n    case types._while: return this.parseWhileStatement(node)\n    case types._with: return this.parseWithStatement(node)\n    case types.braceL: return this.parseBlock(true, node)\n    case types.semi: return this.parseEmptyStatement(node)\n    case types._export:\n    case types._import:\n      if (this.options.ecmaVersion > 10 && starttype === types._import) {\n        skipWhiteSpace.lastIndex = this.pos;\n        var skip = skipWhiteSpace.exec(this.input);\n        var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n        if (nextCh === 40 || nextCh === 46) \n          { return this.parseExpressionStatement(node, this.parseExpression()) }\n      }\n\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel)\n          { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n        if (!this.inModule)\n          { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n      }\n      return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    default:\n      if (this.isAsyncFunction()) {\n        if (context) { this.unexpected(); }\n        this.next();\n        return this.parseFunctionStatement(node, true, !context)\n      }\n\n      var maybeName = this.value, expr = this.parseExpression();\n      if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n        { return this.parseLabeledStatement(node, maybeName, expr, context) }\n      else { return this.parseExpressionStatement(node, expr) }\n    }\n  };\n\n  pp$1.parseBreakContinueStatement = function(node, keyword) {\n    var isBreak = keyword === \"break\";\n    this.next();\n    if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n    else if (this.type !== types.name) { this.unexpected(); }\n    else {\n      node.label = this.parseIdent();\n      this.semicolon();\n    }\n\n    var i = 0;\n    for (; i < this.labels.length; ++i) {\n      var lab = this.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n        if (node.label && isBreak) { break }\n      }\n    }\n    if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n  };\n\n  pp$1.parseDebuggerStatement = function(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\")\n  };\n\n  pp$1.parseDoStatement = function(node) {\n    this.next();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"do\");\n    this.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseParenExpression();\n    if (this.options.ecmaVersion >= 6)\n      { this.eat(types.semi); }\n    else\n      { this.semicolon(); }\n    return this.finishNode(node, \"DoWhileStatement\")\n  };\n\n\n  pp$1.parseForStatement = function(node) {\n    this.next();\n    var awaitAt = (this.options.ecmaVersion >= 9 && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction)) && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n    this.labels.push(loopLabel);\n    this.enterScope(0);\n    this.expect(types.parenL);\n    if (this.type === types.semi) {\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, null)\n    }\n    var isLet = this.isLet();\n    if (this.type === types._var || this.type === types._const || isLet) {\n      var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n      this.next();\n      this.parseVar(init$1, true, kind);\n      this.finishNode(init$1, \"VariableDeclaration\");\n      if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n        if (this.options.ecmaVersion >= 9) {\n          if (this.type === types._in) {\n            if (awaitAt > -1) { this.unexpected(awaitAt); }\n          } else { node.await = awaitAt > -1; }\n        }\n        return this.parseForIn(node, init$1)\n      }\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, init$1)\n    }\n    var refDestructuringErrors = new DestructuringErrors;\n    var init = this.parseExpression(true, refDestructuringErrors);\n    if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      this.toAssignable(init, false, refDestructuringErrors);\n      this.checkLVal(init);\n      return this.parseForIn(node, init)\n    } else {\n      this.checkExpressionErrors(refDestructuringErrors, true);\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init)\n  };\n\n  pp$1.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n  };\n\n  pp$1.parseIfStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\")\n  };\n\n  pp$1.parseReturnStatement = function(node) {\n    if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n      { this.raise(this.start, \"'return' outside of function\"); }\n    this.next();\n\n\n    if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n    else { node.argument = this.parseExpression(); this.semicolon(); }\n    return this.finishNode(node, \"ReturnStatement\")\n  };\n\n  pp$1.parseSwitchStatement = function(node) {\n    this.next();\n    node.discriminant = this.parseParenExpression();\n    node.cases = [];\n    this.expect(types.braceL);\n    this.labels.push(switchLabel);\n    this.enterScope(0);\n\n\n    var cur;\n    for (var sawDefault = false; this.type !== types.braceR;) {\n      if (this.type === types._case || this.type === types._default) {\n        var isCase = this.type === types._case;\n        if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n        node.cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(types.colon);\n      } else {\n        if (!cur) { this.unexpected(); }\n        cur.consequent.push(this.parseStatement(null));\n      }\n    }\n    this.exitScope();\n    if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n    this.next(); \n    this.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\")\n  };\n\n  pp$1.parseThrowStatement = function(node) {\n    this.next();\n    if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n      { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\")\n  };\n\n\n  var empty = [];\n\n  pp$1.parseTryStatement = function(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.type === types._catch) {\n      var clause = this.startNode();\n      this.next();\n      if (this.eat(types.parenL)) {\n        clause.param = this.parseBindingAtom();\n        var simple = clause.param.type === \"Identifier\";\n        this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n        this.checkLVal(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n        this.expect(types.parenR);\n      } else {\n        if (this.options.ecmaVersion < 10) { this.unexpected(); }\n        clause.param = null;\n        this.enterScope(0);\n      }\n      clause.body = this.parseBlock(false);\n      this.exitScope();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer)\n      { this.raise(node.start, \"Missing catch or finally clause\"); }\n    return this.finishNode(node, \"TryStatement\")\n  };\n\n  pp$1.parseVarStatement = function(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\")\n  };\n\n  pp$1.parseWhileStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"while\");\n    this.labels.pop();\n    return this.finishNode(node, \"WhileStatement\")\n  };\n\n  pp$1.parseWithStatement = function(node) {\n    if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n    this.next();\n    node.object = this.parseParenExpression();\n    node.body = this.parseStatement(\"with\");\n    return this.finishNode(node, \"WithStatement\")\n  };\n\n  pp$1.parseEmptyStatement = function(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\")\n  };\n\n  pp$1.parseLabeledStatement = function(node, maybeName, expr, context) {\n    for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n      {\n      var label = list[i$1];\n\n      if (label.name === maybeName)\n        { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n    } }\n    var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n    for (var i = this.labels.length - 1; i >= 0; i--) {\n      var label$1 = this.labels[i];\n      if (label$1.statementStart === node.start) {\n        label$1.statementStart = this.start;\n        label$1.kind = kind;\n      } else { break }\n    }\n    this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\")\n  };\n\n  pp$1.parseExpressionStatement = function(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\")\n  };\n\n\n  pp$1.parseBlock = function(createNewLexicalScope, node, exitStrict) {\n    if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n    if ( node === void 0 ) node = this.startNode();\n\n    node.body = [];\n    this.expect(types.braceL);\n    if (createNewLexicalScope) { this.enterScope(0); }\n    while (this.type !== types.braceR) {\n      var stmt = this.parseStatement(null);\n      node.body.push(stmt);\n    }\n    if (exitStrict) { this.strict = false; }\n    this.next();\n    if (createNewLexicalScope) { this.exitScope(); }\n    return this.finishNode(node, \"BlockStatement\")\n  };\n\n\n  pp$1.parseFor = function(node, init) {\n    node.init = init;\n    this.expect(types.semi);\n    node.test = this.type === types.semi ? null : this.parseExpression();\n    this.expect(types.semi);\n    node.update = this.type === types.parenR ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, \"ForStatement\")\n  };\n\n\n  pp$1.parseForIn = function(node, init) {\n    var isForIn = this.type === types._in;\n    this.next();\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (\n        !isForIn ||\n        this.options.ecmaVersion < 8 ||\n        this.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\"\n      )\n    ) {\n      this.raise(\n        init.start,\n        ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, \"Invalid left-hand side in for-loop\");\n    }\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n    this.expect(types.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n  };\n\n\n  pp$1.parseVar = function(node, isFor, kind) {\n    node.declarations = [];\n    node.kind = kind;\n    for (;;) {\n      var decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(types.eq)) {\n        decl.init = this.parseMaybeAssign(isFor);\n      } else if (kind === \"const\" && !(this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n        this.unexpected();\n      } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.type === types._in || this.isContextual(\"of\")))) {\n        this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n      } else {\n        decl.init = null;\n      }\n      node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) { break }\n    }\n    return node\n  };\n\n  pp$1.parseVarId = function(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n  };\n\n  var FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n\n  pp$1.parseFunction = function(node, statement, allowExpressionBody, isAsync) {\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n      if (this.type === types.star && (statement & FUNC_HANGING_STATEMENT))\n        { this.unexpected(); }\n      node.generator = this.eat(types.star);\n    }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    if (statement & FUNC_STATEMENT) {\n      node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types.name ? null : this.parseIdent();\n      if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n        { this.checkLVal(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n    }\n\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(node.async, node.generator));\n\n    if (!(statement & FUNC_STATEMENT))\n      { node.id = this.type === types.name ? this.parseIdent() : null; }\n\n    this.parseFunctionParams(node);\n    this.parseFunctionBody(node, allowExpressionBody, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n  };\n\n  pp$1.parseFunctionParams = function(node) {\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n  };\n\n\n  pp$1.parseClass = function(node, isStatement) {\n    this.next();\n\n    var oldStrict = this.strict;\n    this.strict = true;\n\n    this.parseClassId(node, isStatement);\n    this.parseClassSuper(node);\n    var classBody = this.startNode();\n    var hadConstructor = false;\n    classBody.body = [];\n    this.expect(types.braceL);\n    while (this.type !== types.braceR) {\n      var element = this.parseClassElement(node.superClass !== null);\n      if (element) {\n        classBody.body.push(element);\n        if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n          if (hadConstructor) { this.raise(element.start, \"Duplicate constructor in the same class\"); }\n          hadConstructor = true;\n        }\n      }\n    }\n    this.strict = oldStrict;\n    this.next();\n    node.body = this.finishNode(classBody, \"ClassBody\");\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n  };\n\n  pp$1.parseClassElement = function(constructorAllowsSuper) {\n    var this$1 = this;\n\n    if (this.eat(types.semi)) { return null }\n\n    var method = this.startNode();\n    var tryContextual = function (k, noLineBreak) {\n      if ( noLineBreak === void 0 ) noLineBreak = false;\n\n      var start = this$1.start, startLoc = this$1.startLoc;\n      if (!this$1.eatContextual(k)) { return false }\n      if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n      if (method.key) { this$1.unexpected(); }\n      method.computed = false;\n      method.key = this$1.startNodeAt(start, startLoc);\n      method.key.name = k;\n      this$1.finishNode(method.key, \"Identifier\");\n      return false\n    };\n\n    method.kind = \"method\";\n    method.static = tryContextual(\"static\");\n    var isGenerator = this.eat(types.star);\n    var isAsync = false;\n    if (!isGenerator) {\n      if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n        isAsync = true;\n        isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n      } else if (tryContextual(\"get\")) {\n        method.kind = \"get\";\n      } else if (tryContextual(\"set\")) {\n        method.kind = \"set\";\n      }\n    }\n    if (!method.key) { this.parsePropertyName(method); }\n    var key = method.key;\n    var allowsDirectSuper = false;\n    if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n        key.type === \"Literal\" && key.value === \"constructor\")) {\n      if (method.kind !== \"method\") { this.raise(key.start, \"Constructor can't have get/set modifier\"); }\n      if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n      if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n      method.kind = \"constructor\";\n      allowsDirectSuper = constructorAllowsSuper;\n    } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n      this.raise(key.start, \"Classes may not have a static property named prototype\");\n    }\n    this.parseClassMethod(method, isGenerator, isAsync, allowsDirectSuper);\n    if (method.kind === \"get\" && method.value.params.length !== 0)\n      { this.raiseRecoverable(method.value.start, \"getter should have no params\"); }\n    if (method.kind === \"set\" && method.value.params.length !== 1)\n      { this.raiseRecoverable(method.value.start, \"setter should have exactly one param\"); }\n    if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n      { this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n    return method\n  };\n\n  pp$1.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n    method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n    return this.finishNode(method, \"MethodDefinition\")\n  };\n\n  pp$1.parseClassId = function(node, isStatement) {\n    if (this.type === types.name) {\n      node.id = this.parseIdent();\n      if (isStatement)\n        { this.checkLVal(node.id, BIND_LEXICAL, false); }\n    } else {\n      if (isStatement === true)\n        { this.unexpected(); }\n      node.id = null;\n    }\n  };\n\n  pp$1.parseClassSuper = function(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  };\n\n\n  pp$1.parseExport = function(node, exports) {\n    this.next();\n    if (this.eat(types.star)) {\n      if (this.options.ecmaVersion >= 11) {\n        if (this.eatContextual(\"as\")) {\n          node.exported = this.parseIdent(true);\n          this.checkExport(exports, node.exported.name, this.lastTokStart);\n        } else {\n          node.exported = null;\n        }\n      }\n      this.expectContextual(\"from\");\n      if (this.type !== types.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n      this.semicolon();\n      return this.finishNode(node, \"ExportAllDeclaration\")\n    }\n    if (this.eat(types._default)) { \n      this.checkExport(exports, \"default\", this.lastTokStart);\n      var isAsync;\n      if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n        var fNode = this.startNode();\n        this.next();\n        if (isAsync) { this.next(); }\n        node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n      } else if (this.type === types._class) {\n        var cNode = this.startNode();\n        node.declaration = this.parseClass(cNode, \"nullableID\");\n      } else {\n        node.declaration = this.parseMaybeAssign();\n        this.semicolon();\n      }\n      return this.finishNode(node, \"ExportDefaultDeclaration\")\n    }\n    if (this.shouldParseExportStatement()) {\n      node.declaration = this.parseStatement(null);\n      if (node.declaration.type === \"VariableDeclaration\")\n        { this.checkVariableExport(exports, node.declaration.declarations); }\n      else\n        { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n      node.specifiers = [];\n      node.source = null;\n    } else { \n      node.declaration = null;\n      node.specifiers = this.parseExportSpecifiers(exports);\n      if (this.eatContextual(\"from\")) {\n        if (this.type !== types.string) { this.unexpected(); }\n        node.source = this.parseExprAtom();\n      } else {\n        for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n          var spec = list[i];\n\n          this.checkUnreserved(spec.local);\n          this.checkLocalExport(spec.local);\n        }\n\n        node.source = null;\n      }\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportNamedDeclaration\")\n  };\n\n  pp$1.checkExport = function(exports, name, pos) {\n    if (!exports) { return }\n    if (has(exports, name))\n      { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n    exports[name] = true;\n  };\n\n  pp$1.checkPatternExport = function(exports, pat) {\n    var type = pat.type;\n    if (type === \"Identifier\")\n      { this.checkExport(exports, pat.name, pat.start); }\n    else if (type === \"ObjectPattern\")\n      { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n        {\n          var prop = list[i];\n\n          this.checkPatternExport(exports, prop);\n        } }\n    else if (type === \"ArrayPattern\")\n      { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n        var elt = list$1[i$1];\n\n          if (elt) { this.checkPatternExport(exports, elt); }\n      } }\n    else if (type === \"Property\")\n      { this.checkPatternExport(exports, pat.value); }\n    else if (type === \"AssignmentPattern\")\n      { this.checkPatternExport(exports, pat.left); }\n    else if (type === \"RestElement\")\n      { this.checkPatternExport(exports, pat.argument); }\n    else if (type === \"ParenthesizedExpression\")\n      { this.checkPatternExport(exports, pat.expression); }\n  };\n\n  pp$1.checkVariableExport = function(exports, decls) {\n    if (!exports) { return }\n    for (var i = 0, list = decls; i < list.length; i += 1)\n      {\n      var decl = list[i];\n\n      this.checkPatternExport(exports, decl.id);\n    }\n  };\n\n  pp$1.shouldParseExportStatement = function() {\n    return this.type.keyword === \"var\" ||\n      this.type.keyword === \"const\" ||\n      this.type.keyword === \"class\" ||\n      this.type.keyword === \"function\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n  };\n\n\n  pp$1.parseExportSpecifiers = function(exports) {\n    var nodes = [], first = true;\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var node = this.startNode();\n      node.local = this.parseIdent(true);\n      node.exported = this.eatContextual(\"as\") ? this.parseIdent(true) : node.local;\n      this.checkExport(exports, node.exported.name, node.exported.start);\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n    return nodes\n  };\n\n\n  pp$1.parseImport = function(node) {\n    this.next();\n    if (this.type === types.string) {\n      node.specifiers = empty;\n      node.source = this.parseExprAtom();\n    } else {\n      node.specifiers = this.parseImportSpecifiers();\n      this.expectContextual(\"from\");\n      node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n    }\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\")\n  };\n\n\n  pp$1.parseImportSpecifiers = function() {\n    var nodes = [], first = true;\n    if (this.type === types.name) {\n      var node = this.startNode();\n      node.local = this.parseIdent();\n      this.checkLVal(node.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n      if (!this.eat(types.comma)) { return nodes }\n    }\n    if (this.type === types.star) {\n      var node$1 = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      node$1.local = this.parseIdent();\n      this.checkLVal(node$1.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n      return nodes\n    }\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var node$2 = this.startNode();\n      node$2.imported = this.parseIdent(true);\n      if (this.eatContextual(\"as\")) {\n        node$2.local = this.parseIdent();\n      } else {\n        this.checkUnreserved(node$2.imported);\n        node$2.local = node$2.imported;\n      }\n      this.checkLVal(node$2.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$2, \"ImportSpecifier\"));\n    }\n    return nodes\n  };\n\n  pp$1.adaptDirectivePrologue = function(statements) {\n    for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n      statements[i].directive = statements[i].expression.raw.slice(1, -1);\n    }\n  };\n  pp$1.isDirectiveCandidate = function(statement) {\n    return (\n      statement.type === \"ExpressionStatement\" &&\n      statement.expression.type === \"Literal\" &&\n      typeof statement.expression.value === \"string\" &&\n      (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n    )\n  };\n\n  var pp$2 = Parser.prototype;\n\n\n  pp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 6 && node) {\n      switch (node.type) {\n      case \"Identifier\":\n        if (this.inAsync && node.name === \"await\")\n          { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n        break\n\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"RestElement\":\n        break\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        for (var i = 0, list = node.properties; i < list.length; i += 1) {\n          var prop = list[i];\n\n        this.toAssignable(prop, isBinding);\n          if (\n            prop.type === \"RestElement\" &&\n            (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n          ) {\n            this.raise(prop.argument.start, \"Unexpected token\");\n          }\n        }\n        break\n\n      case \"Property\":\n        if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n        this.toAssignable(node.value, isBinding);\n        break\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        this.toAssignableList(node.elements, isBinding);\n        break\n\n      case \"SpreadElement\":\n        node.type = \"RestElement\";\n        this.toAssignable(node.argument, isBinding);\n        if (node.argument.type === \"AssignmentPattern\")\n          { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n        break\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isBinding);\n\n      case \"AssignmentPattern\":\n        break\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n        break\n\n      case \"ChainExpression\":\n        this.raiseRecoverable(node.start, \"Optional chaining cannot appear in left-hand side\");\n        break\n\n      case \"MemberExpression\":\n        if (!isBinding) { break }\n\n      default:\n        this.raise(node.start, \"Assigning to rvalue\");\n      }\n    } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n    return node\n  };\n\n\n  pp$2.toAssignableList = function(exprList, isBinding) {\n    var end = exprList.length;\n    for (var i = 0; i < end; i++) {\n      var elt = exprList[i];\n      if (elt) { this.toAssignable(elt, isBinding); }\n    }\n    if (end) {\n      var last = exprList[end - 1];\n      if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n        { this.unexpected(last.argument.start); }\n    }\n    return exprList\n  };\n\n\n  pp$2.parseSpread = function(refDestructuringErrors) {\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    return this.finishNode(node, \"SpreadElement\")\n  };\n\n  pp$2.parseRestBinding = function() {\n    var node = this.startNode();\n    this.next();\n\n    if (this.options.ecmaVersion === 6 && this.type !== types.name)\n      { this.unexpected(); }\n\n    node.argument = this.parseBindingAtom();\n\n    return this.finishNode(node, \"RestElement\")\n  };\n\n\n  pp$2.parseBindingAtom = function() {\n    if (this.options.ecmaVersion >= 6) {\n      switch (this.type) {\n      case types.bracketL:\n        var node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(types.bracketR, true, true);\n        return this.finishNode(node, \"ArrayPattern\")\n\n      case types.braceL:\n        return this.parseObj(true)\n      }\n    }\n    return this.parseIdent()\n  };\n\n  pp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (first) { first = false; }\n      else { this.expect(types.comma); }\n      if (allowEmpty && this.type === types.comma) {\n        elts.push(null);\n      } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n        break\n      } else if (this.type === types.ellipsis) {\n        var rest = this.parseRestBinding();\n        this.parseBindingListItem(rest);\n        elts.push(rest);\n        if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n        this.expect(close);\n        break\n      } else {\n        var elem = this.parseMaybeDefault(this.start, this.startLoc);\n        this.parseBindingListItem(elem);\n        elts.push(elem);\n      }\n    }\n    return elts\n  };\n\n  pp$2.parseBindingListItem = function(param) {\n    return param\n  };\n\n\n  pp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n    left = left || this.parseBindingAtom();\n    if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssign();\n    return this.finishNode(node, \"AssignmentPattern\")\n  };\n\n\n  pp$2.checkLVal = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n    case \"Identifier\":\n      if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n        { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n        { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n      if (checkClashes) {\n        if (has(checkClashes, expr.name))\n          { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n        checkClashes[expr.name] = true;\n      }\n      if (bindingType !== BIND_NONE && bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n      break\n\n    case \"ChainExpression\":\n      this.raiseRecoverable(expr.start, \"Optional chaining cannot appear in left-hand side\");\n      break\n\n    case \"MemberExpression\":\n      if (bindingType) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n      break\n\n    case \"ObjectPattern\":\n      for (var i = 0, list = expr.properties; i < list.length; i += 1)\n        {\n      var prop = list[i];\n\n      this.checkLVal(prop, bindingType, checkClashes);\n    }\n      break\n\n    case \"Property\":\n      this.checkLVal(expr.value, bindingType, checkClashes);\n      break\n\n    case \"ArrayPattern\":\n      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n        var elem = list$1[i$1];\n\n      if (elem) { this.checkLVal(elem, bindingType, checkClashes); }\n      }\n      break\n\n    case \"AssignmentPattern\":\n      this.checkLVal(expr.left, bindingType, checkClashes);\n      break\n\n    case \"RestElement\":\n      this.checkLVal(expr.argument, bindingType, checkClashes);\n      break\n\n    case \"ParenthesizedExpression\":\n      this.checkLVal(expr.expression, bindingType, checkClashes);\n      break\n\n    default:\n      this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n    }\n  };\n\n\n  var pp$3 = Parser.prototype;\n\n\n  pp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n      { return }\n    if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n      { return }\n    var key = prop.key;\n    var name;\n    switch (key.type) {\n    case \"Identifier\": name = key.name; break\n    case \"Literal\": name = String(key.value); break\n    default: return\n    }\n    var kind = prop.kind;\n    if (this.options.ecmaVersion >= 6) {\n      if (name === \"__proto__\" && kind === \"init\") {\n        if (propHash.proto) {\n          if (refDestructuringErrors) {\n            if (refDestructuringErrors.doubleProto < 0)\n              { refDestructuringErrors.doubleProto = key.start; }\n          } else { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n        }\n        propHash.proto = true;\n      }\n      return\n    }\n    name = \"$\" + name;\n    var other = propHash[name];\n    if (other) {\n      var redefinition;\n      if (kind === \"init\") {\n        redefinition = this.strict && other.init || other.get || other.set;\n      } else {\n        redefinition = other.init || other[kind];\n      }\n      if (redefinition)\n        { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n    } else {\n      other = propHash[name] = {\n        init: false,\n        get: false,\n        set: false\n      };\n    }\n    other[kind] = true;\n  };\n\n\n\n\n  pp$3.parseExpression = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n    if (this.type === types.comma) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(types.comma)) { node.expressions.push(this.parseMaybeAssign(noIn, refDestructuringErrors)); }\n      return this.finishNode(node, \"SequenceExpression\")\n    }\n    return expr\n  };\n\n\n  pp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n    if (this.isContextual(\"yield\")) {\n      if (this.inGenerator) { return this.parseYield(noIn) }\n      else { this.exprAllowed = false; }\n    }\n\n    var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1;\n    if (refDestructuringErrors) {\n      oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n      oldTrailingComma = refDestructuringErrors.trailingComma;\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n    } else {\n      refDestructuringErrors = new DestructuringErrors;\n      ownDestructuringErrors = true;\n    }\n\n    var startPos = this.start, startLoc = this.startLoc;\n    if (this.type === types.parenL || this.type === types.name)\n      { this.potentialArrowAt = this.start; }\n    var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n    if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n    if (this.type.isAssign) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.value;\n      node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n      if (!ownDestructuringErrors) {\n        refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n      }\n      if (refDestructuringErrors.shorthandAssign >= node.left.start)\n        { refDestructuringErrors.shorthandAssign = -1; } \n      this.checkLVal(left);\n      this.next();\n      node.right = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"AssignmentExpression\")\n    } else {\n      if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n    }\n    if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n    if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n    return left\n  };\n\n\n  pp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprOps(noIn, refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    if (this.eat(types.question)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssign();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"ConditionalExpression\")\n    }\n    return expr\n  };\n\n\n  pp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n  };\n\n\n  pp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n    var prec = this.type.binop;\n    if (prec != null && (!noIn || this.type !== types._in)) {\n      if (prec > minPrec) {\n        var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n        var coalesce = this.type === types.coalesce;\n        if (coalesce) {\n          prec = types.logicalAND.binop;\n        }\n        var op = this.value;\n        this.next();\n        var startPos = this.start, startLoc = this.startLoc;\n        var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n        var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);\n        if ((logical && this.type === types.coalesce) || (coalesce && (this.type === types.logicalOR || this.type === types.logicalAND))) {\n          this.raiseRecoverable(this.start, \"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses\");\n        }\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n      }\n    }\n    return left\n  };\n\n  pp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.operator = op;\n    node.right = right;\n    return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n  };\n\n\n  pp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n    var startPos = this.start, startLoc = this.startLoc, expr;\n    if (this.isContextual(\"await\") && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))) {\n      expr = this.parseAwait();\n      sawUnary = true;\n    } else if (this.type.prefix) {\n      var node = this.startNode(), update = this.type === types.incDec;\n      node.operator = this.value;\n      node.prefix = true;\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      if (update) { this.checkLVal(node.argument); }\n      else if (this.strict && node.operator === \"delete\" &&\n               node.argument.type === \"Identifier\")\n        { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n      else { sawUnary = true; }\n      expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n    } else {\n      expr = this.parseExprSubscripts(refDestructuringErrors);\n      if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n      while (this.type.postfix && !this.canInsertSemicolon()) {\n        var node$1 = this.startNodeAt(startPos, startLoc);\n        node$1.operator = this.value;\n        node$1.prefix = false;\n        node$1.argument = expr;\n        this.checkLVal(expr);\n        this.next();\n        expr = this.finishNode(node$1, \"UpdateExpression\");\n      }\n    }\n\n    if (!sawUnary && this.eat(types.starstar))\n      { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n    else\n      { return expr }\n  };\n\n\n  pp$3.parseExprSubscripts = function(refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprAtom(refDestructuringErrors);\n    if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n      { return expr }\n    var result = this.parseSubscripts(expr, startPos, startLoc);\n    if (refDestructuringErrors && result.type === \"MemberExpression\") {\n      if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n      if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n    }\n    return result\n  };\n\n  pp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n    var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n        this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&\n        this.potentialArrowAt === base.start;\n    var optionalChained = false;\n\n    while (true) {\n      var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained);\n\n      if (element.optional) { optionalChained = true; }\n      if (element === base || element.type === \"ArrowFunctionExpression\") {\n        if (optionalChained) {\n          var chainNode = this.startNodeAt(startPos, startLoc);\n          chainNode.expression = element;\n          element = this.finishNode(chainNode, \"ChainExpression\");\n        }\n        return element\n      }\n\n      base = element;\n    }\n  };\n\n  pp$3.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained) {\n    var optionalSupported = this.options.ecmaVersion >= 11;\n    var optional = optionalSupported && this.eat(types.questionDot);\n    if (noCalls && optional) { this.raise(this.lastTokStart, \"Optional chaining cannot appear in the callee of new expressions\"); }\n\n    var computed = this.eat(types.bracketL);\n    if (computed || (optional && this.type !== types.parenL && this.type !== types.backQuote) || this.eat(types.dot)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed ? this.parseExpression() : this.parseIdent(this.options.allowReserved !== \"never\");\n      node.computed = !!computed;\n      if (computed) { this.expect(types.bracketR); }\n      if (optionalSupported) {\n        node.optional = optional;\n      }\n      base = this.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this.eat(types.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      this.awaitIdentPos = 0;\n      var exprList = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !optional && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        if (this.awaitIdentPos > 0)\n          { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        this.awaitIdentPos = oldAwaitIdentPos;\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true)\n      }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      if (optionalSupported) {\n        node$1.optional = optional;\n      }\n      base = this.finishNode(node$1, \"CallExpression\");\n    } else if (this.type === types.backQuote) {\n      if (optional || optionalChained) {\n        this.raise(this.start, \"Optional chaining cannot appear in the tag of tagged template expressions\");\n      }\n      var node$2 = this.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this.parseTemplate({isTagged: true});\n      base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n    }\n    return base\n  };\n\n\n  pp$3.parseExprAtom = function(refDestructuringErrors) {\n    if (this.type === types.slash) { this.readRegexp(); }\n\n    var node, canBeArrow = this.potentialArrowAt === this.start;\n    switch (this.type) {\n    case types._super:\n      if (!this.allowSuper)\n        { this.raise(this.start, \"'super' keyword outside a method\"); }\n      node = this.startNode();\n      this.next();\n      if (this.type === types.parenL && !this.allowDirectSuper)\n        { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n      if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)\n        { this.unexpected(); }\n      return this.finishNode(node, \"Super\")\n\n    case types._this:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"ThisExpression\")\n\n    case types.name:\n      var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n      var id = this.parseIdent(false);\n      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n        { return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true) }\n      if (canBeArrow && !this.canInsertSemicolon()) {\n        if (this.eat(types.arrow))\n          { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n        if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n          id = this.parseIdent(false);\n          if (this.canInsertSemicolon() || !this.eat(types.arrow))\n            { this.unexpected(); }\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n        }\n      }\n      return id\n\n    case types.regexp:\n      var value = this.value;\n      node = this.parseLiteral(value.value);\n      node.regex = {pattern: value.pattern, flags: value.flags};\n      return node\n\n    case types.num: case types.string:\n      return this.parseLiteral(this.value)\n\n    case types._null: case types._true: case types._false:\n      node = this.startNode();\n      node.value = this.type === types._null ? null : this.type === types._true;\n      node.raw = this.type.keyword;\n      this.next();\n      return this.finishNode(node, \"Literal\")\n\n    case types.parenL:\n      var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n      if (refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n          { refDestructuringErrors.parenthesizedAssign = start; }\n        if (refDestructuringErrors.parenthesizedBind < 0)\n          { refDestructuringErrors.parenthesizedBind = start; }\n      }\n      return expr\n\n    case types.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n      return this.finishNode(node, \"ArrayExpression\")\n\n    case types.braceL:\n      return this.parseObj(false, refDestructuringErrors)\n\n    case types._function:\n      node = this.startNode();\n      this.next();\n      return this.parseFunction(node, 0)\n\n    case types._class:\n      return this.parseClass(this.startNode(), false)\n\n    case types._new:\n      return this.parseNew()\n\n    case types.backQuote:\n      return this.parseTemplate()\n\n    case types._import:\n      if (this.options.ecmaVersion >= 11) {\n        return this.parseExprImport()\n      } else {\n        return this.unexpected()\n      }\n\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$3.parseExprImport = function() {\n    var node = this.startNode();\n\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword import\"); }\n    var meta = this.parseIdent(true);\n\n    switch (this.type) {\n    case types.parenL:\n      return this.parseDynamicImport(node)\n    case types.dot:\n      node.meta = meta;\n      return this.parseImportMeta(node)\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$3.parseDynamicImport = function(node) {\n    this.next(); \n\n    node.source = this.parseMaybeAssign();\n\n    if (!this.eat(types.parenR)) {\n      var errorPos = this.start;\n      if (this.eat(types.comma) && this.eat(types.parenR)) {\n        this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n      } else {\n        this.unexpected(errorPos);\n      }\n    }\n\n    return this.finishNode(node, \"ImportExpression\")\n  };\n\n  pp$3.parseImportMeta = function(node) {\n    this.next(); \n\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n\n    if (node.property.name !== \"meta\")\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for import is 'import.meta'\"); }\n    if (containsEsc)\n      { this.raiseRecoverable(node.start, \"'import.meta' must not contain escaped characters\"); }\n    if (this.options.sourceType !== \"module\")\n      { this.raiseRecoverable(node.start, \"Cannot use 'import.meta' outside a module\"); }\n\n    return this.finishNode(node, \"MetaProperty\")\n  };\n\n  pp$3.parseLiteral = function(value) {\n    var node = this.startNode();\n    node.value = value;\n    node.raw = this.input.slice(this.start, this.end);\n    if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1).replace(/_/g, \"\"); }\n    this.next();\n    return this.finishNode(node, \"Literal\")\n  };\n\n  pp$3.parseParenExpression = function() {\n    this.expect(types.parenL);\n    var val = this.parseExpression();\n    this.expect(types.parenR);\n    return val\n  };\n\n  pp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n    var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n    if (this.options.ecmaVersion >= 6) {\n      this.next();\n\n      var innerStartPos = this.start, innerStartLoc = this.startLoc;\n      var exprList = [], first = true, lastIsComma = false;\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      while (this.type !== types.parenR) {\n        first ? first = false : this.expect(types.comma);\n        if (allowTrailingComma && this.afterTrailingComma(types.parenR, true)) {\n          lastIsComma = true;\n          break\n        } else if (this.type === types.ellipsis) {\n          spreadStart = this.start;\n          exprList.push(this.parseParenItem(this.parseRestBinding()));\n          if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n          break\n        } else {\n          exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n        }\n      }\n      var innerEndPos = this.start, innerEndLoc = this.startLoc;\n      this.expect(types.parenR);\n\n      if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        return this.parseParenArrowList(startPos, startLoc, exprList)\n      }\n\n      if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n      if (spreadStart) { this.unexpected(spreadStart); }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n\n      if (exprList.length > 1) {\n        val = this.startNodeAt(innerStartPos, innerStartLoc);\n        val.expressions = exprList;\n        this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n      } else {\n        val = exprList[0];\n      }\n    } else {\n      val = this.parseParenExpression();\n    }\n\n    if (this.options.preserveParens) {\n      var par = this.startNodeAt(startPos, startLoc);\n      par.expression = val;\n      return this.finishNode(par, \"ParenthesizedExpression\")\n    } else {\n      return val\n    }\n  };\n\n  pp$3.parseParenItem = function(item) {\n    return item\n  };\n\n  pp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n  };\n\n\n  var empty$1 = [];\n\n  pp$3.parseNew = function() {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n    var node = this.startNode();\n    var meta = this.parseIdent(true);\n    if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n      node.meta = meta;\n      var containsEsc = this.containsEsc;\n      node.property = this.parseIdent(true);\n      if (node.property.name !== \"target\")\n        { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is 'new.target'\"); }\n      if (containsEsc)\n        { this.raiseRecoverable(node.start, \"'new.target' must not contain escaped characters\"); }\n      if (!this.inNonArrowFunction())\n        { this.raiseRecoverable(node.start, \"'new.target' can only be used in functions\"); }\n      return this.finishNode(node, \"MetaProperty\")\n    }\n    var startPos = this.start, startLoc = this.startLoc, isImport = this.type === types._import;\n    node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n    if (isImport && node.callee.type === \"ImportExpression\") {\n      this.raise(startPos, \"Cannot use new with import()\");\n    }\n    if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n    else { node.arguments = empty$1; }\n    return this.finishNode(node, \"NewExpression\")\n  };\n\n\n  pp$3.parseTemplateElement = function(ref) {\n    var isTagged = ref.isTagged;\n\n    var elem = this.startNode();\n    if (this.type === types.invalidTemplate) {\n      if (!isTagged) {\n        this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n      }\n      elem.value = {\n        raw: this.value,\n        cooked: null\n      };\n    } else {\n      elem.value = {\n        raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n        cooked: this.value\n      };\n    }\n    this.next();\n    elem.tail = this.type === types.backQuote;\n    return this.finishNode(elem, \"TemplateElement\")\n  };\n\n  pp$3.parseTemplate = function(ref) {\n    if ( ref === void 0 ) ref = {};\n    var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n    var node = this.startNode();\n    this.next();\n    node.expressions = [];\n    var curElt = this.parseTemplateElement({isTagged: isTagged});\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      if (this.type === types.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseExpression());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\")\n  };\n\n  pp$3.isAsyncProp = function(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n      (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types.star)) &&\n      !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n\n  pp$3.parseObj = function(isPattern, refDestructuringErrors) {\n    var node = this.startNode(), first = true, propHash = {};\n    node.properties = [];\n    this.next();\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var prop = this.parseProperty(isPattern, refDestructuringErrors);\n      if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n      node.properties.push(prop);\n    }\n    return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n  };\n\n  pp$3.parseProperty = function(isPattern, refDestructuringErrors) {\n    var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n    if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n      if (isPattern) {\n        prop.argument = this.parseIdent(false);\n        if (this.type === types.comma) {\n          this.raise(this.start, \"Comma is not permitted after the rest element\");\n        }\n        return this.finishNode(prop, \"RestElement\")\n      }\n      if (this.type === types.parenL && refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0) {\n          refDestructuringErrors.parenthesizedAssign = this.start;\n        }\n        if (refDestructuringErrors.parenthesizedBind < 0) {\n          refDestructuringErrors.parenthesizedBind = this.start;\n        }\n      }\n      prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n      if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n        refDestructuringErrors.trailingComma = this.start;\n      }\n      return this.finishNode(prop, \"SpreadElement\")\n    }\n    if (this.options.ecmaVersion >= 6) {\n      prop.method = false;\n      prop.shorthand = false;\n      if (isPattern || refDestructuringErrors) {\n        startPos = this.start;\n        startLoc = this.startLoc;\n      }\n      if (!isPattern)\n        { isGenerator = this.eat(types.star); }\n    }\n    var containsEsc = this.containsEsc;\n    this.parsePropertyName(prop);\n    if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n      this.parsePropertyName(prop, refDestructuringErrors);\n    } else {\n      isAsync = false;\n    }\n    this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n    return this.finishNode(prop, \"Property\")\n  };\n\n  pp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n    if ((isGenerator || isAsync) && this.type === types.colon)\n      { this.unexpected(); }\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n      prop.kind = \"init\";\n    } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n      if (isPattern) { this.unexpected(); }\n      prop.kind = \"init\";\n      prop.method = true;\n      prop.value = this.parseMethod(isGenerator, isAsync);\n    } else if (!isPattern && !containsEsc &&\n               this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n               (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n               (this.type !== types.comma && this.type !== types.braceR && this.type !== types.eq)) {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      prop.kind = prop.key.name;\n      this.parsePropertyName(prop);\n      prop.value = this.parseMethod(false);\n      var paramCount = prop.kind === \"get\" ? 0 : 1;\n      if (prop.value.params.length !== paramCount) {\n        var start = prop.value.start;\n        if (prop.kind === \"get\")\n          { this.raiseRecoverable(start, \"getter should have no params\"); }\n        else\n          { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n      } else {\n        if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n          { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n      }\n    } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      this.checkUnreserved(prop.key);\n      if (prop.key.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = startPos; }\n      prop.kind = \"init\";\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n      } else if (this.type === types.eq && refDestructuringErrors) {\n        if (refDestructuringErrors.shorthandAssign < 0)\n          { refDestructuringErrors.shorthandAssign = this.start; }\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n      } else {\n        prop.value = prop.key;\n      }\n      prop.shorthand = true;\n    } else { this.unexpected(); }\n  };\n\n  pp$3.parsePropertyName = function(prop) {\n    if (this.options.ecmaVersion >= 6) {\n      if (this.eat(types.bracketL)) {\n        prop.computed = true;\n        prop.key = this.parseMaybeAssign();\n        this.expect(types.bracketR);\n        return prop.key\n      } else {\n        prop.computed = false;\n      }\n    }\n    return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n  };\n\n\n  pp$3.initFunction = function(node) {\n    node.id = null;\n    if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n    if (this.options.ecmaVersion >= 8) { node.async = false; }\n  };\n\n\n  pp$3.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n    var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 6)\n      { node.generator = isGenerator; }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n    this.parseFunctionBody(node, false, true);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"FunctionExpression\")\n  };\n\n\n  pp$3.parseArrowExpression = function(node, params, isAsync) {\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n\n    node.params = this.toAssignableList(params, true);\n    this.parseFunctionBody(node, true, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"ArrowFunctionExpression\")\n  };\n\n\n  pp$3.parseFunctionBody = function(node, isArrowFunction, isMethod) {\n    var isExpression = isArrowFunction && this.type !== types.braceL;\n    var oldStrict = this.strict, useStrict = false;\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      node.expression = true;\n      this.checkParams(node, false);\n    } else {\n      var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n      if (!oldStrict || nonSimple) {\n        useStrict = this.strictDirective(this.end);\n        if (useStrict && nonSimple)\n          { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n      }\n      var oldLabels = this.labels;\n      this.labels = [];\n      if (useStrict) { this.strict = true; }\n\n      this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n      if (this.strict && node.id) { this.checkLVal(node.id, BIND_OUTSIDE); }\n      node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);\n      node.expression = false;\n      this.adaptDirectivePrologue(node.body.body);\n      this.labels = oldLabels;\n    }\n    this.exitScope();\n  };\n\n  pp$3.isSimpleParamList = function(params) {\n    for (var i = 0, list = params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      if (param.type !== \"Identifier\") { return false\n    } }\n    return true\n  };\n\n\n  pp$3.checkParams = function(node, allowDuplicates) {\n    var nameHash = {};\n    for (var i = 0, list = node.params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      this.checkLVal(param, BIND_VAR, allowDuplicates ? null : nameHash);\n    }\n  };\n\n\n  pp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n      } else { first = false; }\n\n      var elt = (void 0);\n      if (allowEmpty && this.type === types.comma)\n        { elt = null; }\n      else if (this.type === types.ellipsis) {\n        elt = this.parseSpread(refDestructuringErrors);\n        if (refDestructuringErrors && this.type === types.comma && refDestructuringErrors.trailingComma < 0)\n          { refDestructuringErrors.trailingComma = this.start; }\n      } else {\n        elt = this.parseMaybeAssign(false, refDestructuringErrors);\n      }\n      elts.push(elt);\n    }\n    return elts\n  };\n\n  pp$3.checkUnreserved = function(ref) {\n    var start = ref.start;\n    var end = ref.end;\n    var name = ref.name;\n\n    if (this.inGenerator && name === \"yield\")\n      { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n    if (this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n    if (this.keywords.test(name))\n      { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n    if (this.options.ecmaVersion < 6 &&\n      this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n    var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n    if (re.test(name)) {\n      if (!this.inAsync && name === \"await\")\n        { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n      this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n    }\n  };\n\n\n  pp$3.parseIdent = function(liberal, isBinding) {\n    var node = this.startNode();\n    if (this.type === types.name) {\n      node.name = this.value;\n    } else if (this.type.keyword) {\n      node.name = this.type.keyword;\n\n      if ((node.name === \"class\" || node.name === \"function\") &&\n          (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n        this.context.pop();\n      }\n    } else {\n      this.unexpected();\n    }\n    this.next(!!liberal);\n    this.finishNode(node, \"Identifier\");\n    if (!liberal) {\n      this.checkUnreserved(node);\n      if (node.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = node.start; }\n    }\n    return node\n  };\n\n\n  pp$3.parseYield = function(noIn) {\n    if (!this.yieldPos) { this.yieldPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    if (this.type === types.semi || this.canInsertSemicolon() || (this.type !== types.star && !this.type.startsExpr)) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign(noIn);\n    }\n    return this.finishNode(node, \"YieldExpression\")\n  };\n\n  pp$3.parseAwait = function() {\n    if (!this.awaitPos) { this.awaitPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeUnary(null, false);\n    return this.finishNode(node, \"AwaitExpression\")\n  };\n\n  var pp$4 = Parser.prototype;\n\n\n  pp$4.raise = function(pos, message) {\n    var loc = getLineInfo(this.input, pos);\n    message += \" (\" + loc.line + \":\" + loc.column + \")\";\n    var err = new SyntaxError(message);\n    err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n    throw err\n  };\n\n  pp$4.raiseRecoverable = pp$4.raise;\n\n  pp$4.curPosition = function() {\n    if (this.options.locations) {\n      return new Position(this.curLine, this.pos - this.lineStart)\n    }\n  };\n\n  var pp$5 = Parser.prototype;\n\n  var Scope = function Scope(flags) {\n    this.flags = flags;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n  };\n\n\n  pp$5.enterScope = function(flags) {\n    this.scopeStack.push(new Scope(flags));\n  };\n\n  pp$5.exitScope = function() {\n    this.scopeStack.pop();\n  };\n\n  pp$5.treatFunctionsAsVarInScope = function(scope) {\n    return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n  };\n\n  pp$5.declareName = function(name, bindingType, pos) {\n    var redeclared = false;\n    if (bindingType === BIND_LEXICAL) {\n      var scope = this.currentScope();\n      redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n      scope.lexical.push(name);\n      if (this.inModule && (scope.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n    } else if (bindingType === BIND_SIMPLE_CATCH) {\n      var scope$1 = this.currentScope();\n      scope$1.lexical.push(name);\n    } else if (bindingType === BIND_FUNCTION) {\n      var scope$2 = this.currentScope();\n      if (this.treatFunctionsAsVar)\n        { redeclared = scope$2.lexical.indexOf(name) > -1; }\n      else\n        { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n      scope$2.functions.push(name);\n    } else {\n      for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n        var scope$3 = this.scopeStack[i];\n        if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n            !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n          redeclared = true;\n          break\n        }\n        scope$3.var.push(name);\n        if (this.inModule && (scope$3.flags & SCOPE_TOP))\n          { delete this.undefinedExports[name]; }\n        if (scope$3.flags & SCOPE_VAR) { break }\n      }\n    }\n    if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n  };\n\n  pp$5.checkLocalExport = function(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n        this.scopeStack[0].var.indexOf(id.name) === -1) {\n      this.undefinedExports[id.name] = id;\n    }\n  };\n\n  pp$5.currentScope = function() {\n    return this.scopeStack[this.scopeStack.length - 1]\n  };\n\n  pp$5.currentVarScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) { return scope }\n    }\n  };\n\n  pp$5.currentThisScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n    }\n  };\n\n  var Node = function Node(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    if (parser.options.locations)\n      { this.loc = new SourceLocation(parser, loc); }\n    if (parser.options.directSourceFile)\n      { this.sourceFile = parser.options.directSourceFile; }\n    if (parser.options.ranges)\n      { this.range = [pos, 0]; }\n  };\n\n\n  var pp$6 = Parser.prototype;\n\n  pp$6.startNode = function() {\n    return new Node(this, this.start, this.startLoc)\n  };\n\n  pp$6.startNodeAt = function(pos, loc) {\n    return new Node(this, pos, loc)\n  };\n\n\n  function finishNodeAt(node, type, pos, loc) {\n    node.type = type;\n    node.end = pos;\n    if (this.options.locations)\n      { node.loc.end = loc; }\n    if (this.options.ranges)\n      { node.range[1] = pos; }\n    return node\n  }\n\n  pp$6.finishNode = function(node, type) {\n    return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n  };\n\n\n  pp$6.finishNodeAt = function(node, type, pos, loc) {\n    return finishNodeAt.call(this, node, type, pos, loc)\n  };\n\n\n  var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n    this.generator = !!generator;\n  };\n\n  var types$1 = {\n    b_stat: new TokContext(\"{\", false),\n    b_expr: new TokContext(\"{\", true),\n    b_tmpl: new TokContext(\"${\", false),\n    p_stat: new TokContext(\"(\", false),\n    p_expr: new TokContext(\"(\", true),\n    q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n    f_stat: new TokContext(\"function\", false),\n    f_expr: new TokContext(\"function\", true),\n    f_expr_gen: new TokContext(\"function\", true, false, null, true),\n    f_gen: new TokContext(\"function\", false, false, null, true)\n  };\n\n  var pp$7 = Parser.prototype;\n\n  pp$7.initialContext = function() {\n    return [types$1.b_stat]\n  };\n\n  pp$7.braceIsBlock = function(prevType) {\n    var parent = this.curContext();\n    if (parent === types$1.f_expr || parent === types$1.f_stat)\n      { return true }\n    if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n      { return !parent.isExpr }\n\n    if (prevType === types._return || prevType === types.name && this.exprAllowed)\n      { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow)\n      { return true }\n    if (prevType === types.braceL)\n      { return parent === types$1.b_stat }\n    if (prevType === types._var || prevType === types._const || prevType === types.name)\n      { return false }\n    return !this.exprAllowed\n  };\n\n  pp$7.inGeneratorContext = function() {\n    for (var i = this.context.length - 1; i >= 1; i--) {\n      var context = this.context[i];\n      if (context.token === \"function\")\n        { return context.generator }\n    }\n    return false\n  };\n\n  pp$7.updateContext = function(prevType) {\n    var update, type = this.type;\n    if (type.keyword && prevType === types.dot)\n      { this.exprAllowed = false; }\n    else if (update = type.updateContext)\n      { update.call(this, prevType); }\n    else\n      { this.exprAllowed = type.beforeExpr; }\n  };\n\n\n  types.parenR.updateContext = types.braceR.updateContext = function() {\n    if (this.context.length === 1) {\n      this.exprAllowed = true;\n      return\n    }\n    var out = this.context.pop();\n    if (out === types$1.b_stat && this.curContext().token === \"function\") {\n      out = this.context.pop();\n    }\n    this.exprAllowed = !out.isExpr;\n  };\n\n  types.braceL.updateContext = function(prevType) {\n    this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n    this.exprAllowed = true;\n  };\n\n  types.dollarBraceL.updateContext = function() {\n    this.context.push(types$1.b_tmpl);\n    this.exprAllowed = true;\n  };\n\n  types.parenL.updateContext = function(prevType) {\n    var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n    this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n    this.exprAllowed = true;\n  };\n\n  types.incDec.updateContext = function() {\n  };\n\n  types._function.updateContext = types._class.updateContext = function(prevType) {\n    if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n        !(prevType === types._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n        !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n      { this.context.push(types$1.f_expr); }\n    else\n      { this.context.push(types$1.f_stat); }\n    this.exprAllowed = false;\n  };\n\n  types.backQuote.updateContext = function() {\n    if (this.curContext() === types$1.q_tmpl)\n      { this.context.pop(); }\n    else\n      { this.context.push(types$1.q_tmpl); }\n    this.exprAllowed = false;\n  };\n\n  types.star.updateContext = function(prevType) {\n    if (prevType === types._function) {\n      var index = this.context.length - 1;\n      if (this.context[index] === types$1.f_expr)\n        { this.context[index] = types$1.f_expr_gen; }\n      else\n        { this.context[index] = types$1.f_gen; }\n    }\n    this.exprAllowed = true;\n  };\n\n  types.name.updateContext = function(prevType) {\n    var allowed = false;\n    if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {\n      if (this.value === \"of\" && !this.exprAllowed ||\n          this.value === \"yield\" && this.inGeneratorContext())\n        { allowed = true; }\n    }\n    this.exprAllowed = allowed;\n  };\n\n\n  var ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\n  var ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\n  var ecma11BinaryProperties = ecma10BinaryProperties;\n  var unicodeBinaryProperties = {\n    9: ecma9BinaryProperties,\n    10: ecma10BinaryProperties,\n    11: ecma11BinaryProperties\n  };\n\n  var unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n  var ecma9ScriptValues = \"Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\n  var ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\n  var ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\n  var unicodeScriptValues = {\n    9: ecma9ScriptValues,\n    10: ecma10ScriptValues,\n    11: ecma11ScriptValues\n  };\n\n  var data = {};\n  function buildUnicodeData(ecmaVersion) {\n    var d = data[ecmaVersion] = {\n      binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n      nonBinary: {\n        General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n        Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n      }\n    };\n    d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n    d.nonBinary.gc = d.nonBinary.General_Category;\n    d.nonBinary.sc = d.nonBinary.Script;\n    d.nonBinary.scx = d.nonBinary.Script_Extensions;\n  }\n  buildUnicodeData(9);\n  buildUnicodeData(10);\n  buildUnicodeData(11);\n\n  var pp$8 = Parser.prototype;\n\n  var RegExpValidationState = function RegExpValidationState(parser) {\n    this.parser = parser;\n    this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n    this.unicodeProperties = data[parser.options.ecmaVersion >= 11 ? 11 : parser.options.ecmaVersion];\n    this.source = \"\";\n    this.flags = \"\";\n    this.start = 0;\n    this.switchU = false;\n    this.switchN = false;\n    this.pos = 0;\n    this.lastIntValue = 0;\n    this.lastStringValue = \"\";\n    this.lastAssertionIsQuantifiable = false;\n    this.numCapturingParens = 0;\n    this.maxBackReference = 0;\n    this.groupNames = [];\n    this.backReferenceNames = [];\n  };\n\n  RegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n    var unicode = flags.indexOf(\"u\") !== -1;\n    this.start = start | 0;\n    this.source = pattern + \"\";\n    this.flags = flags;\n    this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n    this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n  };\n\n  RegExpValidationState.prototype.raise = function raise (message) {\n    this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n  };\n\n  RegExpValidationState.prototype.at = function at (i, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return -1\n    }\n    var c = s.charCodeAt(i);\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n      return c\n    }\n    var next = s.charCodeAt(i + 1);\n    return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n  };\n\n  RegExpValidationState.prototype.nextIndex = function nextIndex (i, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return l\n    }\n    var c = s.charCodeAt(i), next;\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n        (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n      return i + 1\n    }\n    return i + 2\n  };\n\n  RegExpValidationState.prototype.current = function current (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    return this.at(this.pos, forceU)\n  };\n\n  RegExpValidationState.prototype.lookahead = function lookahead (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    return this.at(this.nextIndex(this.pos, forceU), forceU)\n  };\n\n  RegExpValidationState.prototype.advance = function advance (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    this.pos = this.nextIndex(this.pos, forceU);\n  };\n\n  RegExpValidationState.prototype.eat = function eat (ch, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    if (this.current(forceU) === ch) {\n      this.advance(forceU);\n      return true\n    }\n    return false\n  };\n\n  function codePointToString(ch) {\n    if (ch <= 0xFFFF) { return String.fromCharCode(ch) }\n    ch -= 0x10000;\n    return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00)\n  }\n\n  pp$8.validateRegExpFlags = function(state) {\n    var validFlags = state.validFlags;\n    var flags = state.flags;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags.charAt(i);\n      if (validFlags.indexOf(flag) === -1) {\n        this.raise(state.start, \"Invalid regular expression flag\");\n      }\n      if (flags.indexOf(flag, i + 1) > -1) {\n        this.raise(state.start, \"Duplicate regular expression flag\");\n      }\n    }\n  };\n\n  pp$8.validateRegExpPattern = function(state) {\n    this.regexp_pattern(state);\n\n    if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n      state.switchN = true;\n      this.regexp_pattern(state);\n    }\n  };\n\n  pp$8.regexp_pattern = function(state) {\n    state.pos = 0;\n    state.lastIntValue = 0;\n    state.lastStringValue = \"\";\n    state.lastAssertionIsQuantifiable = false;\n    state.numCapturingParens = 0;\n    state.maxBackReference = 0;\n    state.groupNames.length = 0;\n    state.backReferenceNames.length = 0;\n\n    this.regexp_disjunction(state);\n\n    if (state.pos !== state.source.length) {\n      if (state.eat(0x29 )) {\n        state.raise(\"Unmatched ')'\");\n      }\n      if (state.eat(0x5D ) || state.eat(0x7D )) {\n        state.raise(\"Lone quantifier brackets\");\n      }\n    }\n    if (state.maxBackReference > state.numCapturingParens) {\n      state.raise(\"Invalid escape\");\n    }\n    for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n      var name = list[i];\n\n      if (state.groupNames.indexOf(name) === -1) {\n        state.raise(\"Invalid named capture referenced\");\n      }\n    }\n  };\n\n  pp$8.regexp_disjunction = function(state) {\n    this.regexp_alternative(state);\n    while (state.eat(0x7C )) {\n      this.regexp_alternative(state);\n    }\n\n    if (this.regexp_eatQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    if (state.eat(0x7B )) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  };\n\n  pp$8.regexp_alternative = function(state) {\n    while (state.pos < state.source.length && this.regexp_eatTerm(state))\n      { }\n  };\n\n  pp$8.regexp_eatTerm = function(state) {\n    if (this.regexp_eatAssertion(state)) {\n      if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n        if (state.switchU) {\n          state.raise(\"Invalid quantifier\");\n        }\n      }\n      return true\n    }\n\n    if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n      this.regexp_eatQuantifier(state);\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatAssertion = function(state) {\n    var start = state.pos;\n    state.lastAssertionIsQuantifiable = false;\n\n    if (state.eat(0x5E ) || state.eat(0x24 )) {\n      return true\n    }\n\n    if (state.eat(0x5C )) {\n      if (state.eat(0x42 ) || state.eat(0x62 )) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    if (state.eat(0x28 ) && state.eat(0x3F )) {\n      var lookbehind = false;\n      if (this.options.ecmaVersion >= 9) {\n        lookbehind = state.eat(0x3C );\n      }\n      if (state.eat(0x3D ) || state.eat(0x21 )) {\n        this.regexp_disjunction(state);\n        if (!state.eat(0x29 )) {\n          state.raise(\"Unterminated group\");\n        }\n        state.lastAssertionIsQuantifiable = !lookbehind;\n        return true\n      }\n    }\n\n    state.pos = start;\n    return false\n  };\n\n  pp$8.regexp_eatQuantifier = function(state, noError) {\n    if ( noError === void 0 ) noError = false;\n\n    if (this.regexp_eatQuantifierPrefix(state, noError)) {\n      state.eat(0x3F );\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatQuantifierPrefix = function(state, noError) {\n    return (\n      state.eat(0x2A ) ||\n      state.eat(0x2B ) ||\n      state.eat(0x3F ) ||\n      this.regexp_eatBracedQuantifier(state, noError)\n    )\n  };\n  pp$8.regexp_eatBracedQuantifier = function(state, noError) {\n    var start = state.pos;\n    if (state.eat(0x7B )) {\n      var min = 0, max = -1;\n      if (this.regexp_eatDecimalDigits(state)) {\n        min = state.lastIntValue;\n        if (state.eat(0x2C ) && this.regexp_eatDecimalDigits(state)) {\n          max = state.lastIntValue;\n        }\n        if (state.eat(0x7D )) {\n          if (max !== -1 && max < min && !noError) {\n            state.raise(\"numbers out of order in {} quantifier\");\n          }\n          return true\n        }\n      }\n      if (state.switchU && !noError) {\n        state.raise(\"Incomplete quantifier\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  pp$8.regexp_eatAtom = function(state) {\n    return (\n      this.regexp_eatPatternCharacters(state) ||\n      state.eat(0x2E ) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state)\n    )\n  };\n  pp$8.regexp_eatReverseSolidusAtomEscape = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C )) {\n      if (this.regexp_eatAtomEscape(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatUncapturingGroup = function(state) {\n    var start = state.pos;\n    if (state.eat(0x28 )) {\n      if (state.eat(0x3F ) && state.eat(0x3A )) {\n        this.regexp_disjunction(state);\n        if (state.eat(0x29 )) {\n          return true\n        }\n        state.raise(\"Unterminated group\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatCapturingGroup = function(state) {\n    if (state.eat(0x28 )) {\n      if (this.options.ecmaVersion >= 9) {\n        this.regexp_groupSpecifier(state);\n      } else if (state.current() === 0x3F ) {\n        state.raise(\"Invalid group\");\n      }\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 )) {\n        state.numCapturingParens += 1;\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatExtendedAtom = function(state) {\n    return (\n      state.eat(0x2E ) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state) ||\n      this.regexp_eatInvalidBracedQuantifier(state) ||\n      this.regexp_eatExtendedPatternCharacter(state)\n    )\n  };\n\n  pp$8.regexp_eatInvalidBracedQuantifier = function(state) {\n    if (this.regexp_eatBracedQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatSyntaxCharacter = function(state) {\n    var ch = state.current();\n    if (isSyntaxCharacter(ch)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isSyntaxCharacter(ch) {\n    return (\n      ch === 0x24  ||\n      ch >= 0x28  && ch <= 0x2B  ||\n      ch === 0x2E  ||\n      ch === 0x3F  ||\n      ch >= 0x5B  && ch <= 0x5E  ||\n      ch >= 0x7B  && ch <= 0x7D \n    )\n  }\n\n  pp$8.regexp_eatPatternCharacters = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n      state.advance();\n    }\n    return state.pos !== start\n  };\n\n  pp$8.regexp_eatExtendedPatternCharacter = function(state) {\n    var ch = state.current();\n    if (\n      ch !== -1 &&\n      ch !== 0x24  &&\n      !(ch >= 0x28  && ch <= 0x2B ) &&\n      ch !== 0x2E  &&\n      ch !== 0x3F  &&\n      ch !== 0x5B  &&\n      ch !== 0x5E  &&\n      ch !== 0x7C \n    ) {\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_groupSpecifier = function(state) {\n    if (state.eat(0x3F )) {\n      if (this.regexp_eatGroupName(state)) {\n        if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n          state.raise(\"Duplicate capture group name\");\n        }\n        state.groupNames.push(state.lastStringValue);\n        return\n      }\n      state.raise(\"Invalid group\");\n    }\n  };\n\n  pp$8.regexp_eatGroupName = function(state) {\n    state.lastStringValue = \"\";\n    if (state.eat(0x3C )) {\n      if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E )) {\n        return true\n      }\n      state.raise(\"Invalid capture group name\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatRegExpIdentifierName = function(state) {\n    state.lastStringValue = \"\";\n    if (this.regexp_eatRegExpIdentifierStart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n      while (this.regexp_eatRegExpIdentifierPart(state)) {\n        state.lastStringValue += codePointToString(state.lastIntValue);\n      }\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatRegExpIdentifierStart = function(state) {\n    var start = state.pos;\n    var forceU = this.options.ecmaVersion >= 11;\n    var ch = state.current(forceU);\n    state.advance(forceU);\n\n    if (ch === 0x5C  && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierStart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierStart(ch) {\n    return isIdentifierStart(ch, true) || ch === 0x24  || ch === 0x5F \n  }\n\n  pp$8.regexp_eatRegExpIdentifierPart = function(state) {\n    var start = state.pos;\n    var forceU = this.options.ecmaVersion >= 11;\n    var ch = state.current(forceU);\n    state.advance(forceU);\n\n    if (ch === 0x5C  && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierPart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierPart(ch) {\n    return isIdentifierChar(ch, true) || ch === 0x24  || ch === 0x5F  || ch === 0x200C  || ch === 0x200D \n  }\n\n  pp$8.regexp_eatAtomEscape = function(state) {\n    if (\n      this.regexp_eatBackReference(state) ||\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state) ||\n      (state.switchN && this.regexp_eatKGroupName(state))\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      if (state.current() === 0x63 ) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    return false\n  };\n  pp$8.regexp_eatBackReference = function(state) {\n    var start = state.pos;\n    if (this.regexp_eatDecimalEscape(state)) {\n      var n = state.lastIntValue;\n      if (state.switchU) {\n        if (n > state.maxBackReference) {\n          state.maxBackReference = n;\n        }\n        return true\n      }\n      if (n <= state.numCapturingParens) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatKGroupName = function(state) {\n    if (state.eat(0x6B )) {\n      if (this.regexp_eatGroupName(state)) {\n        state.backReferenceNames.push(state.lastStringValue);\n        return true\n      }\n      state.raise(\"Invalid named reference\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatCharacterEscape = function(state) {\n    return (\n      this.regexp_eatControlEscape(state) ||\n      this.regexp_eatCControlLetter(state) ||\n      this.regexp_eatZero(state) ||\n      this.regexp_eatHexEscapeSequence(state) ||\n      this.regexp_eatRegExpUnicodeEscapeSequence(state, false) ||\n      (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n      this.regexp_eatIdentityEscape(state)\n    )\n  };\n  pp$8.regexp_eatCControlLetter = function(state) {\n    var start = state.pos;\n    if (state.eat(0x63 )) {\n      if (this.regexp_eatControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatZero = function(state) {\n    if (state.current() === 0x30  && !isDecimalDigit(state.lookahead())) {\n      state.lastIntValue = 0;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatControlEscape = function(state) {\n    var ch = state.current();\n    if (ch === 0x74 ) {\n      state.lastIntValue = 0x09; \n      state.advance();\n      return true\n    }\n    if (ch === 0x6E ) {\n      state.lastIntValue = 0x0A; \n      state.advance();\n      return true\n    }\n    if (ch === 0x76 ) {\n      state.lastIntValue = 0x0B; \n      state.advance();\n      return true\n    }\n    if (ch === 0x66 ) {\n      state.lastIntValue = 0x0C; \n      state.advance();\n      return true\n    }\n    if (ch === 0x72 ) {\n      state.lastIntValue = 0x0D; \n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatControlLetter = function(state) {\n    var ch = state.current();\n    if (isControlLetter(ch)) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isControlLetter(ch) {\n    return (\n      (ch >= 0x41  && ch <= 0x5A ) ||\n      (ch >= 0x61  && ch <= 0x7A )\n    )\n  }\n\n  pp$8.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n    var start = state.pos;\n    var switchU = forceU || state.switchU;\n\n    if (state.eat(0x75 )) {\n      if (this.regexp_eatFixedHexDigits(state, 4)) {\n        var lead = state.lastIntValue;\n        if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n          var leadSurrogateEnd = state.pos;\n          if (state.eat(0x5C ) && state.eat(0x75 ) && this.regexp_eatFixedHexDigits(state, 4)) {\n            var trail = state.lastIntValue;\n            if (trail >= 0xDC00 && trail <= 0xDFFF) {\n              state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n              return true\n            }\n          }\n          state.pos = leadSurrogateEnd;\n          state.lastIntValue = lead;\n        }\n        return true\n      }\n      if (\n        switchU &&\n        state.eat(0x7B ) &&\n        this.regexp_eatHexDigits(state) &&\n        state.eat(0x7D ) &&\n        isValidUnicode(state.lastIntValue)\n      ) {\n        return true\n      }\n      if (switchU) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.pos = start;\n    }\n\n    return false\n  };\n  function isValidUnicode(ch) {\n    return ch >= 0 && ch <= 0x10FFFF\n  }\n\n  pp$8.regexp_eatIdentityEscape = function(state) {\n    if (state.switchU) {\n      if (this.regexp_eatSyntaxCharacter(state)) {\n        return true\n      }\n      if (state.eat(0x2F )) {\n        state.lastIntValue = 0x2F; \n        return true\n      }\n      return false\n    }\n\n    var ch = state.current();\n    if (ch !== 0x63  && (!state.switchN || ch !== 0x6B )) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatDecimalEscape = function(state) {\n    state.lastIntValue = 0;\n    var ch = state.current();\n    if (ch >= 0x31  && ch <= 0x39 ) {\n      do {\n        state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 );\n        state.advance();\n      } while ((ch = state.current()) >= 0x30  && ch <= 0x39 )\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatCharacterClassEscape = function(state) {\n    var ch = state.current();\n\n    if (isCharacterClassEscape(ch)) {\n      state.lastIntValue = -1;\n      state.advance();\n      return true\n    }\n\n    if (\n      state.switchU &&\n      this.options.ecmaVersion >= 9 &&\n      (ch === 0x50  || ch === 0x70 )\n    ) {\n      state.lastIntValue = -1;\n      state.advance();\n      if (\n        state.eat(0x7B ) &&\n        this.regexp_eatUnicodePropertyValueExpression(state) &&\n        state.eat(0x7D )\n      ) {\n        return true\n      }\n      state.raise(\"Invalid property name\");\n    }\n\n    return false\n  };\n  function isCharacterClassEscape(ch) {\n    return (\n      ch === 0x64  ||\n      ch === 0x44  ||\n      ch === 0x73  ||\n      ch === 0x53  ||\n      ch === 0x77  ||\n      ch === 0x57 \n    )\n  }\n\n  pp$8.regexp_eatUnicodePropertyValueExpression = function(state) {\n    var start = state.pos;\n\n    if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D )) {\n      var name = state.lastStringValue;\n      if (this.regexp_eatUnicodePropertyValue(state)) {\n        var value = state.lastStringValue;\n        this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n        return true\n      }\n    }\n    state.pos = start;\n\n    if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n      var nameOrValue = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n      return true\n    }\n    return false\n  };\n  pp$8.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n    if (!has(state.unicodeProperties.nonBinary, name))\n      { state.raise(\"Invalid property name\"); }\n    if (!state.unicodeProperties.nonBinary[name].test(value))\n      { state.raise(\"Invalid property value\"); }\n  };\n  pp$8.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n    if (!state.unicodeProperties.binary.test(nameOrValue))\n      { state.raise(\"Invalid property name\"); }\n  };\n\n  pp$8.regexp_eatUnicodePropertyName = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyNameCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyNameCharacter(ch) {\n    return isControlLetter(ch) || ch === 0x5F \n  }\n\n  pp$8.regexp_eatUnicodePropertyValue = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyValueCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyValueCharacter(ch) {\n    return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n  }\n\n  pp$8.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n    return this.regexp_eatUnicodePropertyValue(state)\n  };\n\n  pp$8.regexp_eatCharacterClass = function(state) {\n    if (state.eat(0x5B )) {\n      state.eat(0x5E );\n      this.regexp_classRanges(state);\n      if (state.eat(0x5D )) {\n        return true\n      }\n      state.raise(\"Unterminated character class\");\n    }\n    return false\n  };\n\n  pp$8.regexp_classRanges = function(state) {\n    while (this.regexp_eatClassAtom(state)) {\n      var left = state.lastIntValue;\n      if (state.eat(0x2D ) && this.regexp_eatClassAtom(state)) {\n        var right = state.lastIntValue;\n        if (state.switchU && (left === -1 || right === -1)) {\n          state.raise(\"Invalid character class\");\n        }\n        if (left !== -1 && right !== -1 && left > right) {\n          state.raise(\"Range out of order in character class\");\n        }\n      }\n    }\n  };\n\n  pp$8.regexp_eatClassAtom = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x5C )) {\n      if (this.regexp_eatClassEscape(state)) {\n        return true\n      }\n      if (state.switchU) {\n        var ch$1 = state.current();\n        if (ch$1 === 0x63  || isOctalDigit(ch$1)) {\n          state.raise(\"Invalid class escape\");\n        }\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n\n    var ch = state.current();\n    if (ch !== 0x5D ) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatClassEscape = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x62 )) {\n      state.lastIntValue = 0x08; \n      return true\n    }\n\n    if (state.switchU && state.eat(0x2D )) {\n      state.lastIntValue = 0x2D; \n      return true\n    }\n\n    if (!state.switchU && state.eat(0x63 )) {\n      if (this.regexp_eatClassControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    return (\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state)\n    )\n  };\n\n  pp$8.regexp_eatClassControlLetter = function(state) {\n    var ch = state.current();\n    if (isDecimalDigit(ch) || ch === 0x5F ) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatHexEscapeSequence = function(state) {\n    var start = state.pos;\n    if (state.eat(0x78 )) {\n      if (this.regexp_eatFixedHexDigits(state, 2)) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  pp$8.regexp_eatDecimalDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isDecimalDigit(ch = state.current())) {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 );\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isDecimalDigit(ch) {\n    return ch >= 0x30  && ch <= 0x39 \n  }\n\n  pp$8.regexp_eatHexDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isHexDigit(ch = state.current())) {\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isHexDigit(ch) {\n    return (\n      (ch >= 0x30  && ch <= 0x39 ) ||\n      (ch >= 0x41  && ch <= 0x46 ) ||\n      (ch >= 0x61  && ch <= 0x66 )\n    )\n  }\n  function hexToInt(ch) {\n    if (ch >= 0x41  && ch <= 0x46 ) {\n      return 10 + (ch - 0x41 )\n    }\n    if (ch >= 0x61  && ch <= 0x66 ) {\n      return 10 + (ch - 0x61 )\n    }\n    return ch - 0x30 \n  }\n\n  pp$8.regexp_eatLegacyOctalEscapeSequence = function(state) {\n    if (this.regexp_eatOctalDigit(state)) {\n      var n1 = state.lastIntValue;\n      if (this.regexp_eatOctalDigit(state)) {\n        var n2 = state.lastIntValue;\n        if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n          state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n        } else {\n          state.lastIntValue = n1 * 8 + n2;\n        }\n      } else {\n        state.lastIntValue = n1;\n      }\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatOctalDigit = function(state) {\n    var ch = state.current();\n    if (isOctalDigit(ch)) {\n      state.lastIntValue = ch - 0x30; \n      state.advance();\n      return true\n    }\n    state.lastIntValue = 0;\n    return false\n  };\n  function isOctalDigit(ch) {\n    return ch >= 0x30  && ch <= 0x37 \n  }\n\n  pp$8.regexp_eatFixedHexDigits = function(state, length) {\n    var start = state.pos;\n    state.lastIntValue = 0;\n    for (var i = 0; i < length; ++i) {\n      var ch = state.current();\n      if (!isHexDigit(ch)) {\n        state.pos = start;\n        return false\n      }\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return true\n  };\n\n\n  var Token = function Token(p) {\n    this.type = p.type;\n    this.value = p.value;\n    this.start = p.start;\n    this.end = p.end;\n    if (p.options.locations)\n      { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n    if (p.options.ranges)\n      { this.range = [p.start, p.end]; }\n  };\n\n\n  var pp$9 = Parser.prototype;\n\n\n  pp$9.next = function(ignoreEscapeSequenceInKeyword) {\n    if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n      { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n    if (this.options.onToken)\n      { this.options.onToken(new Token(this)); }\n\n    this.lastTokEnd = this.end;\n    this.lastTokStart = this.start;\n    this.lastTokEndLoc = this.endLoc;\n    this.lastTokStartLoc = this.startLoc;\n    this.nextToken();\n  };\n\n  pp$9.getToken = function() {\n    this.next();\n    return new Token(this)\n  };\n\n  if (typeof Symbol !== \"undefined\")\n    { pp$9[Symbol.iterator] = function() {\n      var this$1 = this;\n\n      return {\n        next: function () {\n          var token = this$1.getToken();\n          return {\n            done: token.type === types.eof,\n            value: token\n          }\n        }\n      }\n    }; }\n\n\n  pp$9.curContext = function() {\n    return this.context[this.context.length - 1]\n  };\n\n\n  pp$9.nextToken = function() {\n    var curContext = this.curContext();\n    if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n    this.start = this.pos;\n    if (this.options.locations) { this.startLoc = this.curPosition(); }\n    if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n    if (curContext.override) { return curContext.override(this) }\n    else { this.readToken(this.fullCharCodeAtPos()); }\n  };\n\n  pp$9.readToken = function(code) {\n    if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 )\n      { return this.readWord() }\n\n    return this.getTokenFromCode(code)\n  };\n\n  pp$9.fullCharCodeAtPos = function() {\n    var code = this.input.charCodeAt(this.pos);\n    if (code <= 0xd7ff || code >= 0xe000) { return code }\n    var next = this.input.charCodeAt(this.pos + 1);\n    return (code << 10) + next - 0x35fdc00\n  };\n\n  pp$9.skipBlockComment = function() {\n    var startLoc = this.options.onComment && this.curPosition();\n    var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n    if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n    this.pos = end + 2;\n    if (this.options.locations) {\n      lineBreakG.lastIndex = start;\n      var match;\n      while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n        ++this.curLine;\n        this.lineStart = match.index + match[0].length;\n      }\n    }\n    if (this.options.onComment)\n      { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  pp$9.skipLineComment = function(startSkip) {\n    var start = this.pos;\n    var startLoc = this.options.onComment && this.curPosition();\n    var ch = this.input.charCodeAt(this.pos += startSkip);\n    while (this.pos < this.input.length && !isNewLine(ch)) {\n      ch = this.input.charCodeAt(++this.pos);\n    }\n    if (this.options.onComment)\n      { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n\n  pp$9.skipSpace = function() {\n    loop: while (this.pos < this.input.length) {\n      var ch = this.input.charCodeAt(this.pos);\n      switch (ch) {\n      case 32: case 160: \n        ++this.pos;\n        break\n      case 13:\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\n          ++this.pos;\n        }\n      case 10: case 8232: case 8233:\n        ++this.pos;\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        break\n      case 47: \n        switch (this.input.charCodeAt(this.pos + 1)) {\n        case 42: \n          this.skipBlockComment();\n          break\n        case 47:\n          this.skipLineComment(2);\n          break\n        default:\n          break loop\n        }\n        break\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this.pos;\n        } else {\n          break loop\n        }\n      }\n    }\n  };\n\n\n  pp$9.finishToken = function(type, val) {\n    this.end = this.pos;\n    if (this.options.locations) { this.endLoc = this.curPosition(); }\n    var prevType = this.type;\n    this.type = type;\n    this.value = val;\n\n    this.updateContext(prevType);\n  };\n\n\n  pp$9.readToken_dot = function() {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next >= 48 && next <= 57) { return this.readNumber(true) }\n    var next2 = this.input.charCodeAt(this.pos + 2);\n    if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { \n      this.pos += 3;\n      return this.finishToken(types.ellipsis)\n    } else {\n      ++this.pos;\n      return this.finishToken(types.dot)\n    }\n  };\n\n  pp$9.readToken_slash = function() { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.slash, 1)\n  };\n\n  pp$9.readToken_mult_modulo_exp = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    var tokentype = code === 42 ? types.star : types.modulo;\n\n    if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n      ++size;\n      tokentype = types.starstar;\n      next = this.input.charCodeAt(this.pos + 2);\n    }\n\n    if (next === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(tokentype, size)\n  };\n\n  pp$9.readToken_pipe_amp = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (this.options.ecmaVersion >= 12) {\n        var next2 = this.input.charCodeAt(this.pos + 2);\n        if (next2 === 61) { return this.finishOp(types.assign, 3) }\n      }\n      return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2)\n    }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n  };\n\n  pp$9.readToken_caret = function() { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.bitwiseXOR, 1)\n  };\n\n  pp$9.readToken_plus_min = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n          (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        return this.nextToken()\n      }\n      return this.finishOp(types.incDec, 2)\n    }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.plusMin, 1)\n  };\n\n  pp$9.readToken_lt_gt = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n      return this.finishOp(types.bitShift, size)\n    }\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n        this.input.charCodeAt(this.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    if (next === 61) { size = 2; }\n    return this.finishOp(types.relational, size)\n  };\n\n  pp$9.readToken_eq_excl = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n    if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { \n      this.pos += 2;\n      return this.finishToken(types.arrow)\n    }\n    return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n  };\n\n  pp$9.readToken_question = function() { \n    var ecmaVersion = this.options.ecmaVersion;\n    if (ecmaVersion >= 11) {\n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 46) {\n        var next2 = this.input.charCodeAt(this.pos + 2);\n        if (next2 < 48 || next2 > 57) { return this.finishOp(types.questionDot, 2) }\n      }\n      if (next === 63) {\n        if (ecmaVersion >= 12) {\n          var next2$1 = this.input.charCodeAt(this.pos + 2);\n          if (next2$1 === 61) { return this.finishOp(types.assign, 3) }\n        }\n        return this.finishOp(types.coalesce, 2)\n      }\n    }\n    return this.finishOp(types.question, 1)\n  };\n\n  pp$9.getTokenFromCode = function(code) {\n    switch (code) {\n    case 46: \n      return this.readToken_dot()\n\n    case 40: ++this.pos; return this.finishToken(types.parenL)\n    case 41: ++this.pos; return this.finishToken(types.parenR)\n    case 59: ++this.pos; return this.finishToken(types.semi)\n    case 44: ++this.pos; return this.finishToken(types.comma)\n    case 91: ++this.pos; return this.finishToken(types.bracketL)\n    case 93: ++this.pos; return this.finishToken(types.bracketR)\n    case 123: ++this.pos; return this.finishToken(types.braceL)\n    case 125: ++this.pos; return this.finishToken(types.braceR)\n    case 58: ++this.pos; return this.finishToken(types.colon)\n\n    case 96: \n      if (this.options.ecmaVersion < 6) { break }\n      ++this.pos;\n      return this.finishToken(types.backQuote)\n\n    case 48: \n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 120 || next === 88) { return this.readRadixNumber(16) } \n      if (this.options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) { return this.readRadixNumber(8) } \n        if (next === 98 || next === 66) { return this.readRadixNumber(2) } \n      }\n\n    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: \n      return this.readNumber(false)\n\n    case 34: case 39: \n      return this.readString(code)\n\n\n    case 47: \n      return this.readToken_slash()\n\n    case 37: case 42: \n      return this.readToken_mult_modulo_exp(code)\n\n    case 124: case 38: \n      return this.readToken_pipe_amp(code)\n\n    case 94: \n      return this.readToken_caret()\n\n    case 43: case 45: \n      return this.readToken_plus_min(code)\n\n    case 60: case 62: \n      return this.readToken_lt_gt(code)\n\n    case 61: case 33: \n      return this.readToken_eq_excl(code)\n\n    case 63: \n      return this.readToken_question()\n\n    case 126: \n      return this.finishOp(types.prefix, 1)\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString$1(code) + \"'\");\n  };\n\n  pp$9.finishOp = function(type, size) {\n    var str = this.input.slice(this.pos, this.pos + size);\n    this.pos += size;\n    return this.finishToken(type, str)\n  };\n\n  pp$9.readRegexp = function() {\n    var escaped, inClass, start = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n      var ch = this.input.charAt(this.pos);\n      if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n      if (!escaped) {\n        if (ch === \"[\") { inClass = true; }\n        else if (ch === \"]\" && inClass) { inClass = false; }\n        else if (ch === \"/\" && !inClass) { break }\n        escaped = ch === \"\\\\\";\n      } else { escaped = false; }\n      ++this.pos;\n    }\n    var pattern = this.input.slice(start, this.pos);\n    ++this.pos;\n    var flagsStart = this.pos;\n    var flags = this.readWord1();\n    if (this.containsEsc) { this.unexpected(flagsStart); }\n\n    var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n    state.reset(start, pattern, flags);\n    this.validateRegExpFlags(state);\n    this.validateRegExpPattern(state);\n\n    var value = null;\n    try {\n      value = new RegExp(pattern, flags);\n    } catch (e) {\n    }\n\n    return this.finishToken(types.regexp, {pattern: pattern, flags: flags, value: value})\n  };\n\n\n  pp$9.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {\n    var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;\n\n    var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;\n\n    var start = this.pos, total = 0, lastCode = 0;\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos) {\n      var code = this.input.charCodeAt(this.pos), val = (void 0);\n\n      if (allowSeparators && code === 95) {\n        if (isLegacyOctalNumericLiteral) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed in legacy octal numeric literals\"); }\n        if (lastCode === 95) { this.raiseRecoverable(this.pos, \"Numeric separator must be exactly one underscore\"); }\n        if (i === 0) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed at the first of digits\"); }\n        lastCode = code;\n        continue\n      }\n\n      if (code >= 97) { val = code - 97 + 10; } \n      else if (code >= 65) { val = code - 65 + 10; } \n      else if (code >= 48 && code <= 57) { val = code - 48; } \n      else { val = Infinity; }\n      if (val >= radix) { break }\n      lastCode = code;\n      total = total * radix + val;\n    }\n\n    if (allowSeparators && lastCode === 95) { this.raiseRecoverable(this.pos - 1, \"Numeric separator is not allowed at the last of digits\"); }\n    if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n    return total\n  };\n\n  function stringToNumber(str, isLegacyOctalNumericLiteral) {\n    if (isLegacyOctalNumericLiteral) {\n      return parseInt(str, 8)\n    }\n\n    return parseFloat(str.replace(/_/g, \"\"))\n  }\n\n  function stringToBigInt(str) {\n    if (typeof BigInt !== \"function\") {\n      return null\n    }\n\n    return BigInt(str.replace(/_/g, \"\"))\n  }\n\n  pp$9.readRadixNumber = function(radix) {\n    var start = this.pos;\n    this.pos += 2; \n    var val = this.readInt(radix);\n    if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n    if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n      val = stringToBigInt(this.input.slice(start, this.pos));\n      ++this.pos;\n    } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types.num, val)\n  };\n\n\n  pp$9.readNumber = function(startsWithDot) {\n    var start = this.pos;\n    if (!startsWithDot && this.readInt(10, undefined, true) === null) { this.raise(start, \"Invalid number\"); }\n    var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n    if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n    var next = this.input.charCodeAt(this.pos);\n    if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n      var val$1 = stringToBigInt(this.input.slice(start, this.pos));\n      ++this.pos;\n      if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n      return this.finishToken(types.num, val$1)\n    }\n    if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n    if (next === 46 && !octal) { \n      ++this.pos;\n      this.readInt(10);\n      next = this.input.charCodeAt(this.pos);\n    }\n    if ((next === 69 || next === 101) && !octal) { \n      next = this.input.charCodeAt(++this.pos);\n      if (next === 43 || next === 45) { ++this.pos; } \n      if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    }\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n    var val = stringToNumber(this.input.slice(start, this.pos), octal);\n    return this.finishToken(types.num, val)\n  };\n\n\n  pp$9.readCodePoint = function() {\n    var ch = this.input.charCodeAt(this.pos), code;\n\n    if (ch === 123) { \n      if (this.options.ecmaVersion < 6) { this.unexpected(); }\n      var codePos = ++this.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n      ++this.pos;\n      if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n    } else {\n      code = this.readHexChar(4);\n    }\n    return code\n  };\n\n  function codePointToString$1(code) {\n    if (code <= 0xFFFF) { return String.fromCharCode(code) }\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n  }\n\n  pp$9.readString = function(quote) {\n    var out = \"\", chunkStart = ++this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === quote) { break }\n      if (ch === 92) { \n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.pos;\n      } else {\n        if (isNewLine(ch, this.options.ecmaVersion >= 10)) { this.raise(this.start, \"Unterminated string constant\"); }\n        ++this.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.pos++);\n    return this.finishToken(types.string, out)\n  };\n\n\n  var INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\n  pp$9.tryReadTemplateToken = function() {\n    this.inTemplateElement = true;\n    try {\n      this.readTmplToken();\n    } catch (err) {\n      if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n        this.readInvalidTemplateToken();\n      } else {\n        throw err\n      }\n    }\n\n    this.inTemplateElement = false;\n  };\n\n  pp$9.invalidStringToken = function(position, message) {\n    if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n      throw INVALID_TEMPLATE_ESCAPE_ERROR\n    } else {\n      this.raise(position, message);\n    }\n  };\n\n  pp$9.readTmplToken = function() {\n    var out = \"\", chunkStart = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { \n        if (this.pos === this.start && (this.type === types.template || this.type === types.invalidTemplate)) {\n          if (ch === 36) {\n            this.pos += 2;\n            return this.finishToken(types.dollarBraceL)\n          } else {\n            ++this.pos;\n            return this.finishToken(types.backQuote)\n          }\n        }\n        out += this.input.slice(chunkStart, this.pos);\n        return this.finishToken(types.template, out)\n      }\n      if (ch === 92) { \n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(true);\n        chunkStart = this.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.pos);\n        ++this.pos;\n        switch (ch) {\n        case 13:\n          if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n        case 10:\n          out += \"\\n\";\n          break\n        default:\n          out += String.fromCharCode(ch);\n          break\n        }\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        chunkStart = this.pos;\n      } else {\n        ++this.pos;\n      }\n    }\n  };\n\n  pp$9.readInvalidTemplateToken = function() {\n    for (; this.pos < this.input.length; this.pos++) {\n      switch (this.input[this.pos]) {\n      case \"\\\\\":\n        ++this.pos;\n        break\n\n      case \"$\":\n        if (this.input[this.pos + 1] !== \"{\") {\n          break\n        }\n\n      case \"`\":\n        return this.finishToken(types.invalidTemplate, this.input.slice(this.start, this.pos))\n\n      }\n    }\n    this.raise(this.start, \"Unterminated template\");\n  };\n\n\n  pp$9.readEscapedChar = function(inTemplate) {\n    var ch = this.input.charCodeAt(++this.pos);\n    ++this.pos;\n    switch (ch) {\n    case 110: return \"\\n\" \n    case 114: return \"\\r\" \n    case 120: return String.fromCharCode(this.readHexChar(2)) \n    case 117: return codePointToString$1(this.readCodePoint()) \n    case 116: return \"\\t\" \n    case 98: return \"\\b\" \n    case 118: return \"\\u000b\" \n    case 102: return \"\\f\" \n    case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } \n    case 10: \n      if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n      return \"\"\n    case 56:\n    case 57:\n      if (inTemplate) {\n        var codePos = this.pos - 1;\n\n        this.invalidStringToken(\n          codePos,\n          \"Invalid escape sequence in template string\"\n        );\n\n        return null\n      }\n    default:\n      if (ch >= 48 && ch <= 55) {\n        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n        var octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        this.pos += octalStr.length - 1;\n        ch = this.input.charCodeAt(this.pos);\n        if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n          this.invalidStringToken(\n            this.pos - 1 - octalStr.length,\n            inTemplate\n              ? \"Octal literal in template string\"\n              : \"Octal literal in strict mode\"\n          );\n        }\n        return String.fromCharCode(octal)\n      }\n      if (isNewLine(ch)) {\n        return \"\"\n      }\n      return String.fromCharCode(ch)\n    }\n  };\n\n\n  pp$9.readHexChar = function(len) {\n    var codePos = this.pos;\n    var n = this.readInt(16, len);\n    if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n    return n\n  };\n\n\n  pp$9.readWord1 = function() {\n    this.containsEsc = false;\n    var word = \"\", first = true, chunkStart = this.pos;\n    var astral = this.options.ecmaVersion >= 6;\n    while (this.pos < this.input.length) {\n      var ch = this.fullCharCodeAtPos();\n      if (isIdentifierChar(ch, astral)) {\n        this.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) { \n        this.containsEsc = true;\n        word += this.input.slice(chunkStart, this.pos);\n        var escStart = this.pos;\n        if (this.input.charCodeAt(++this.pos) !== 117) \n          { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n        ++this.pos;\n        var esc = this.readCodePoint();\n        if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n          { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n        word += codePointToString$1(esc);\n        chunkStart = this.pos;\n      } else {\n        break\n      }\n      first = false;\n    }\n    return word + this.input.slice(chunkStart, this.pos)\n  };\n\n\n  pp$9.readWord = function() {\n    var word = this.readWord1();\n    var type = types.name;\n    if (this.keywords.test(word)) {\n      type = keywords$1[word];\n    }\n    return this.finishToken(type, word)\n  };\n\n\n  var version = \"7.4.0\";\n\n  Parser.acorn = {\n    Parser: Parser,\n    version: version,\n    defaultOptions: defaultOptions,\n    Position: Position,\n    SourceLocation: SourceLocation,\n    getLineInfo: getLineInfo,\n    Node: Node,\n    TokenType: TokenType,\n    tokTypes: types,\n    keywordTypes: keywords$1,\n    TokContext: TokContext,\n    tokContexts: types$1,\n    isIdentifierChar: isIdentifierChar,\n    isIdentifierStart: isIdentifierStart,\n    Token: Token,\n    isNewLine: isNewLine,\n    lineBreak: lineBreak,\n    lineBreakG: lineBreakG,\n    nonASCIIwhitespace: nonASCIIwhitespace\n  };\n\n\n  function parse(input, options) {\n    return Parser.parse(input, options)\n  }\n\n\n  function parseExpressionAt(input, pos, options) {\n    return Parser.parseExpressionAt(input, pos, options)\n  }\n\n\n  function tokenizer(input, options) {\n    return Parser.tokenizer(input, options)\n  }\n\n  exports.Node = Node;\n  exports.Parser = Parser;\n  exports.Position = Position;\n  exports.SourceLocation = SourceLocation;\n  exports.TokContext = TokContext;\n  exports.Token = Token;\n  exports.TokenType = TokenType;\n  exports.defaultOptions = defaultOptions;\n  exports.getLineInfo = getLineInfo;\n  exports.isIdentifierChar = isIdentifierChar;\n  exports.isIdentifierStart = isIdentifierStart;\n  exports.isNewLine = isNewLine;\n  exports.keywordTypes = keywords$1;\n  exports.lineBreak = lineBreak;\n  exports.lineBreakG = lineBreakG;\n  exports.nonASCIIwhitespace = nonASCIIwhitespace;\n  exports.parse = parse;\n  exports.parseExpressionAt = parseExpressionAt;\n  exports.tokContexts = types$1;\n  exports.tokTypes = types;\n  exports.tokenizer = tokenizer;\n  exports.version = version;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n},{}],2:[function(require,module,exports){\n\n},{}],3:[function(require,module,exports){\nfunction glWiretap(gl, options = {}) {\n  const {\n    contextName = 'gl',\n    throwGetError,\n    useTrackablePrimitives,\n    readPixelsFile,\n    recording = [],\n    variables = {},\n    onReadPixels,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  const proxy = new Proxy(gl, { get: listen });\n  const contextVariables = [];\n  const entityNames = {};\n  let imageCount = 0;\n  let indent = '';\n  let readPixelsVariableName;\n  return proxy;\n  function listen(obj, property) {\n    switch (property) {\n      case 'addComment': return addComment;\n      case 'checkThrowError': return checkThrowError;\n      case 'getReadPixelsVariableName': return readPixelsVariableName;\n      case 'insertVariable': return insertVariable;\n      case 'reset': return reset;\n      case 'setIndent': return setIndent;\n      case 'toString': return toString;\n      case 'getContextVariableName': return getContextVariableName;\n    }\n    if (typeof gl[property] === 'function') {\n      return function() { \n        switch (property) {\n          case 'getError':\n            if (throwGetError) {\n              recording.push(`${indent}if (${contextName}.getError() !== ${contextName}.NONE) throw new Error('error');`);\n            } else {\n              recording.push(`${indent}${contextName}.getError();`); \n            }\n            return gl.getError();\n          case 'getExtension': {\n            const variableName = `${contextName}Variables${contextVariables.length}`;\n            recording.push(`${indent}const ${variableName} = ${contextName}.getExtension('${arguments[0]}');`);\n            const extension = gl.getExtension(arguments[0]);\n            if (extension && typeof extension === 'object') {\n              const tappedExtension = glExtensionWiretap(extension, {\n                getEntity,\n                useTrackablePrimitives,\n                recording,\n                contextName: variableName,\n                contextVariables,\n                variables,\n                indent,\n                onUnrecognizedArgumentLookup,\n              });\n              contextVariables.push(tappedExtension);\n              return tappedExtension;\n            } else {\n              contextVariables.push(null);\n            }\n            return extension;\n          }\n          case 'readPixels':\n            const i = contextVariables.indexOf(arguments[6]);\n            let targetVariableName;\n            if (i === -1) {\n              const variableName = getVariableName(arguments[6]);\n              if (variableName) {\n                targetVariableName = variableName;\n                recording.push(`${indent}${variableName}`);\n              } else {\n                targetVariableName = `${contextName}Variable${contextVariables.length}`;\n                contextVariables.push(arguments[6]);\n                recording.push(`${indent}const ${targetVariableName} = new ${arguments[6].constructor.name}(${arguments[6].length});`);\n              }\n            } else {\n              targetVariableName = `${contextName}Variable${i}`;\n            }\n            readPixelsVariableName = targetVariableName;\n            const argumentAsStrings = [\n              arguments[0],\n              arguments[1],\n              arguments[2],\n              arguments[3],\n              getEntity(arguments[4]),\n              getEntity(arguments[5]),\n              targetVariableName\n            ];\n            recording.push(`${indent}${contextName}.readPixels(${argumentAsStrings.join(', ')});`);\n            if (readPixelsFile) {\n              writePPM(arguments[2], arguments[3]);\n            }\n            if (onReadPixels) {\n              onReadPixels(targetVariableName, argumentAsStrings);\n            }\n            return gl.readPixels.apply(gl, arguments);\n          case 'drawBuffers':\n            recording.push(`${indent}${contextName}.drawBuffers([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup } )}]);`);\n            return gl.drawBuffers(arguments[0]);\n        }\n        let result = gl[property].apply(gl, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n              break;\n            }\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n\n            contextVariables.push(result);\n        }\n        return result;\n      }\n    }\n    entityNames[gl[property]] = property;\n    return gl[property];\n  }\n  function toString() {\n    return recording.join('\\n');\n  }\n  function reset() {\n    while (recording.length > 0) {\n      recording.pop();\n    }\n  }\n  function insertVariable(name, value) {\n    variables[name] = value;\n  }\n  function getEntity(value) {\n    const name = entityNames[value];\n    if (name) {\n      return contextName + '.' + name;\n    }\n    return value;\n  }\n  function setIndent(spaces) {\n    indent = ' '.repeat(spaces);\n  }\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    contextVariables.push(value);\n    return variableName;\n  }\n  function writePPM(width, height) {\n    const sourceVariable = `${contextName}Variable${contextVariables.length}`;\n    const imageVariable = `imageDatum${imageCount}`;\n    recording.push(`${indent}let ${imageVariable} = [\"P3\\\\n# ${readPixelsFile}.ppm\\\\n\", ${width}, ' ', ${height}, \"\\\\n255\\\\n\"].join(\"\");`);\n    recording.push(`${indent}for (let i = 0; i < ${imageVariable}.length; i += 4) {`);\n    recording.push(`${indent}  ${imageVariable} += ${sourceVariable}[i] + ' ' + ${sourceVariable}[i + 1] + ' ' + ${sourceVariable}[i + 2] + ' ';`);\n    recording.push(`${indent}}`);\n    recording.push(`${indent}if (typeof require !== \"undefined\") {`);\n    recording.push(`${indent}  require('fs').writeFileSync('./${readPixelsFile}.ppm', ${imageVariable});`);\n    recording.push(`${indent}}`);\n    imageCount++;\n  }\n  function addComment(value) {\n    recording.push(`${indent}// ${value}`);\n  }\n  function checkThrowError() {\n    recording.push(`${indent}(() => {\n${indent}const error = ${contextName}.getError();\n${indent}if (error !== ${contextName}.NONE) {\n${indent}  const names = Object.getOwnPropertyNames(gl);\n${indent}  for (let i = 0; i < names.length; i++) {\n${indent}    const name = names[i];\n${indent}    if (${contextName}[name] === error) {\n${indent}      throw new Error('${contextName} threw ' + name);\n${indent}    }\n${indent}  }\n${indent}}\n${indent}})();`);\n  }\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    return null;\n  }\n\n  function getContextVariableName(value) {\n    const i = contextVariables.indexOf(value);\n    if (i !== -1) {\n      return `${contextName}Variable${i}`;\n    }\n    return null;\n  }\n}\n\nfunction glExtensionWiretap(extension, options) {\n  const proxy = new Proxy(extension, { get: listen });\n  const extensionEntityNames = {};\n  const {\n    contextName,\n    contextVariables,\n    getEntity,\n    useTrackablePrimitives,\n    recording,\n    variables,\n    indent,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  return proxy;\n  function listen(obj, property) {\n    if (typeof obj[property] === 'function') {\n      return function() {\n        switch (property) {\n          case 'drawBuffersWEBGL':\n            recording.push(`${indent}${contextName}.drawBuffersWEBGL([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })}]);`);\n            return extension.drawBuffersWEBGL(arguments[0]);\n        }\n        let result = extension[property].apply(extension, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result);\n            }\n            break;\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n            contextVariables.push(result);\n        }\n        return result;\n      };\n    }\n    extensionEntityNames[extension[property]] = property;\n    return extension[property];\n  }\n\n  function getExtensionEntity(value) {\n    if (extensionEntityNames.hasOwnProperty(value)) {\n      return `${contextName}.${extensionEntityNames[value]}`;\n    }\n    return getEntity(value);\n  }\n\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    contextVariables.push(value);\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    return variableName;\n  }\n}\n\nfunction argumentsToString(args, options) {\n  const { variables, onUnrecognizedArgumentLookup } = options;\n  return (Array.from(args).map((arg) => {\n    const variableName = getVariableName(arg);\n    if (variableName) {\n      return variableName;\n    }\n    return argumentToString(arg, options);\n  }).join(', '));\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (!variables.hasOwnProperty(name)) continue;\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    if (onUnrecognizedArgumentLookup) {\n      return onUnrecognizedArgumentLookup(value);\n    }\n    return null;\n  }\n}\n\nfunction argumentToString(arg, options) {\n  const { contextName, contextVariables, getEntity, addVariable, onUnrecognizedArgumentLookup } = options;\n  if (typeof arg === 'undefined') {\n    return 'undefined';\n  }\n  if (arg === null) {\n    return 'null';\n  }\n  const i = contextVariables.indexOf(arg);\n  if (i > -1) {\n    return `${contextName}Variable${i}`;\n  }\n  switch (arg.constructor.name) {\n    case 'String':\n      const hasLines = /\\n/.test(arg);\n      const hasSingleQuotes = /'/.test(arg);\n      const hasDoubleQuotes = /\"/.test(arg);\n      if (hasLines) {\n        return '`' + arg + '`';\n      } else if (hasSingleQuotes && !hasDoubleQuotes) {\n        return '\"' + arg + '\"';\n      } else if (!hasSingleQuotes && hasDoubleQuotes) {\n        return \"'\" + arg + \"'\";\n      } else {\n        return '\\'' + arg + '\\'';\n      }\n    case 'Number': return getEntity(arg);\n    case 'Boolean': return getEntity(arg);\n    case 'Array':\n      return addVariable(arg, `new ${arg.constructor.name}([${Array.from(arg).join(',')}])`);\n    case 'Float32Array':\n    case 'Uint8Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n      return addVariable(arg, `new ${arg.constructor.name}(${JSON.stringify(Array.from(arg))})`);\n    default:\n      if (onUnrecognizedArgumentLookup) {\n        const instantiationString = onUnrecognizedArgumentLookup(arg);\n        if (instantiationString) {\n          return instantiationString;\n        }\n      }\n      throw new Error(`unrecognized argument type ${arg.constructor.name}`);\n  }\n}\n\nfunction trackablePrimitive(value) {\n  return new value.constructor(value);\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = { glWiretap, glExtensionWiretap };\n}\n\nif (typeof window !== 'undefined') {\n  glWiretap.glExtensionWiretap = glExtensionWiretap;\n  window.glWiretap = glWiretap;\n}\n\n},{}],4:[function(require,module,exports){\nfunction setupArguments(args) {\n  const newArguments = new Array(args.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i];\n    if (arg.toArray) {\n      newArguments[i] = arg.toArray();\n    } else {\n      newArguments[i] = arg;\n    }\n  }\n  return newArguments;\n}\n\nfunction mock1D() {\n  const args = setupArguments(arguments);\n  const row = new Float32Array(this.output.x);\n  for (let x = 0; x < this.output.x; x++) {\n    this.thread.x = x;\n    this.thread.y = 0;\n    this.thread.z = 0;\n    row[x] = this._fn.apply(this, args);\n  }\n  return row;\n}\n\nfunction mock2D() {\n  const args = setupArguments(arguments);\n  const matrix = new Array(this.output.y);\n  for (let y = 0; y < this.output.y; y++) {\n    const row = new Float32Array(this.output.x);\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      row[x] = this._fn.apply(this, args);\n    }\n    matrix[y] = row;\n  }\n  return matrix;\n}\n\nfunction mock2DGraphical() {\n  const args = setupArguments(arguments);\n  for (let y = 0; y < this.output.y; y++) {\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      this._fn.apply(this, args);\n    }\n  }\n}\n\nfunction mock3D() {\n  const args = setupArguments(arguments);\n  const cube = new Array(this.output.z);\n  for (let z = 0; z < this.output.z; z++) {\n    const matrix = new Array(this.output.y);\n    for (let y = 0; y < this.output.y; y++) {\n      const row = new Float32Array(this.output.x);\n      for (let x = 0; x < this.output.x; x++) {\n        this.thread.x = x;\n        this.thread.y = y;\n        this.thread.z = z;\n        row[x] = this._fn.apply(this, args);\n      }\n      matrix[y] = row;\n    }\n    cube[z] = matrix;\n  }\n  return cube;\n}\n\nfunction apiDecorate(kernel) {\n  kernel.setOutput = (output) => {\n    kernel.output = setupOutput(output);\n    if (kernel.graphical) {\n      setupGraphical(kernel);\n    }\n  };\n  kernel.toJSON = () => {\n    throw new Error('Not usable with gpuMock');\n  };\n  kernel.setConstants = (flag) => {\n    kernel.constants = flag;\n    return kernel;\n  };\n  kernel.setGraphical = (flag) => {\n    kernel.graphical = flag;\n    return kernel;\n  };\n  kernel.setCanvas = (flag) => {\n    kernel.canvas = flag;\n    return kernel;\n  };\n  kernel.setContext = (flag) => {\n    kernel.context = flag;\n    return kernel;\n  };\n  kernel.destroy = () => {};\n  kernel.validateSettings = () => {};\n  if (kernel.graphical && kernel.output) {\n    setupGraphical(kernel);\n  }\n  kernel.exec = function() {\n    return new Promise((resolve, reject) => {\n      try {\n        resolve(kernel.apply(kernel, arguments));\n      } catch(e) {\n        reject(e);\n      }\n    });\n  };\n  kernel.getPixels = (flip) => {\n    const {x, y} = kernel.output;\n    return flip ? flipPixels(kernel._imageData.data, x, y) : kernel._imageData.data.slice(0);\n  };\n  kernel.color = function(r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n\n    const width = kernel.output.x;\n    const height = kernel.output.y;\n\n    const x = kernel.thread.x;\n    const y = height - kernel.thread.y - 1;\n\n    const index = x + y * width;\n\n    kernel._colorData[index * 4 + 0] = r;\n    kernel._colorData[index * 4 + 1] = g;\n    kernel._colorData[index * 4 + 2] = b;\n    kernel._colorData[index * 4 + 3] = a;\n  };\n\n  const mockMethod = () => kernel;\n  const methods = [\n    'setWarnVarUsage',\n    'setArgumentTypes',\n    'setTactic',\n    'setOptimizeFloatMemory',\n    'setDebug',\n    'setLoopMaxIterations',\n    'setConstantTypes',\n    'setFunctions',\n    'setNativeFunctions',\n    'setInjectedNative',\n    'setPipeline',\n    'setPrecision',\n    'setOutputToTexture',\n    'setImmutable',\n    'setStrictIntegers',\n    'setDynamicOutput',\n    'setHardcodeConstants',\n    'setDynamicArguments',\n    'setUseLegacyEncoder',\n    'setWarnVarUsage',\n    'addSubKernel',\n  ];\n  for (let i = 0; i < methods.length; i++) {\n    kernel[methods[i]] = mockMethod;\n  }\n  return kernel;\n}\n\nfunction setupGraphical(kernel) {\n  const {x, y} = kernel.output;\n  if (kernel.context && kernel.context.createImageData) {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = kernel.context.createImageData(x, y);\n    kernel._colorData = data;\n  } else {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = { data };\n    kernel._colorData = data;\n  }\n}\n\nfunction setupOutput(output) {\n  let result = null;\n  if (output.length) {\n    if (output.length === 3) {\n      const [x,y,z] = output;\n      result = { x, y, z };\n    } else if (output.length === 2) {\n      const [x,y] = output;\n      result = { x, y };\n    } else {\n      const [x] = output;\n      result = { x };\n    }\n  } else {\n    result = output;\n  }\n  return result;\n}\n\nfunction gpuMock(fn, settings = {}) {\n  const output = settings.output ? setupOutput(settings.output) : null;\n  function kernel() {\n    if (kernel.output.z) {\n      return mock3D.apply(kernel, arguments);\n    } else if (kernel.output.y) {\n      if (kernel.graphical) {\n        return mock2DGraphical.apply(kernel, arguments);\n      }\n      return mock2D.apply(kernel, arguments);\n    } else {\n      return mock1D.apply(kernel, arguments);\n    }\n  }\n  kernel._fn = fn;\n  kernel.constants = settings.constants || null;\n  kernel.context = settings.context || null;\n  kernel.canvas = settings.canvas || null;\n  kernel.graphical = settings.graphical || false;\n  kernel._imageData = null;\n  kernel._colorData = null;\n  kernel.output = output;\n  kernel.thread = {\n    x: 0,\n    y: 0,\n    z: 0\n  };\n  return apiDecorate(kernel);\n}\n\nfunction flipPixels(pixels, width, height) {\n  const halfHeight = height / 2 | 0; \n  const bytesPerRow = width * 4;\n  const temp = new Uint8ClampedArray(width * 4);\n  const result = pixels.slice(0);\n  for (let y = 0; y < halfHeight; ++y) {\n    const topOffset = y * bytesPerRow;\n    const bottomOffset = (height - y - 1) * bytesPerRow;\n\n    temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n\n    result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n\n    result.set(temp, bottomOffset);\n  }\n  return result;\n}\n\nmodule.exports = {\n  gpuMock\n};\n\n},{}],5:[function(require,module,exports){\nconst { utils } = require('./utils');\n\nfunction alias(name, source) {\n  const fnString = source.toString();\n  return new Function(`return function ${ name } (${ utils.getArgumentNamesFromString(fnString).join(', ') }) {\n  ${ utils.getFunctionBodyFromString(fnString) }\n}`)();\n}\n\nmodule.exports = {\n  alias\n};\n},{\"./utils\":114}],6:[function(require,module,exports){\nconst { FunctionNode } = require('../function-node');\n\nclass CPUFunctionNode extends FunctionNode {\n  astFunction(ast, retArr) {\n\n    if (!this.isRootKernel) {\n      retArr.push('function');\n      retArr.push(' ');\n      retArr.push(this.name);\n      retArr.push('(');\n\n      for (let i = 0; i < this.argumentNames.length; ++i) {\n        const argumentName = this.argumentNames[i];\n\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        retArr.push('user_');\n        retArr.push(argumentName);\n      }\n\n      retArr.push(') {\\n');\n    }\n\n    for (let i = 0; i < ast.body.body.length; ++i) {\n      this.astGeneric(ast.body.body[i], retArr);\n      retArr.push('\\n');\n    }\n\n    if (!this.isRootKernel) {\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astReturnStatement(ast, retArr) {\n    const type = this.returnType || this.getType(ast.argument);\n\n    if (!this.returnType) {\n      this.returnType = type;\n    }\n\n    if (this.isRootKernel) {\n      retArr.push(this.leadingReturnStatement);\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';\\n');\n      retArr.push(this.followingReturnStatement);\n      retArr.push('continue;\\n');\n    } else if (this.isSubKernel) {\n      retArr.push(`subKernelResult_${ this.name } = `);\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';');\n      retArr.push(`return subKernelResult_${ this.name };`);\n    } else {\n      retArr.push('return ');\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  astLiteral(ast, retArr) {\n\n    if (isNaN(ast.value)) {\n      throw this.astErrorOutput(\n        'Non-numeric literal not supported : ' + ast.value,\n        ast\n      );\n    }\n\n    retArr.push(ast.value);\n\n    return retArr;\n  }\n\n  astBinaryExpression(ast, retArr) {\n    retArr.push('(');\n    this.astGeneric(ast.left, retArr);\n    retArr.push(ast.operator);\n    this.astGeneric(ast.right, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput(\n        'IdentifierExpression - not an Identifier',\n        idtNode\n      );\n    }\n\n    switch (idtNode.name) {\n      case 'Infinity':\n        retArr.push('Infinity');\n        break;\n      default:\n        if (this.constants && this.constants.hasOwnProperty(idtNode.name)) {\n          retArr.push('constants_' + idtNode.name);\n        } else {\n          retArr.push('user_' + idtNode.name);\n        }\n    }\n\n    return retArr;\n  }\n\n  astForStatement(forNode, retArr) {\n    if (forNode.type !== 'ForStatement') {\n      throw this.astErrorOutput('Invalid for statement', forNode);\n    }\n\n    const initArr = [];\n    const testArr = [];\n    const updateArr = [];\n    const bodyArr = [];\n    let isSafe = null;\n\n    if (forNode.init) {\n      this.pushState('in-for-loop-init');\n      this.astGeneric(forNode.init, initArr);\n      for (let i = 0; i < initArr.length; i++) {\n        if (initArr[i].includes && initArr[i].includes(',')) {\n          isSafe = false;\n        }\n      }\n      this.popState('in-for-loop-init');\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.test) {\n      this.astGeneric(forNode.test, testArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.update) {\n      this.astGeneric(forNode.update, updateArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.body) {\n      this.pushState('loop-body');\n      this.astGeneric(forNode.body, bodyArr);\n      this.popState('loop-body');\n    }\n\n    if (isSafe === null) {\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n    }\n\n    if (isSafe) {\n      retArr.push(`for (${initArr.join('')};${testArr.join('')};${updateArr.join('')}){\\n`);\n      retArr.push(bodyArr.join(''));\n      retArr.push('}\\n');\n    } else {\n      const iVariableName = this.getInternalVariableName('safeI');\n      if (initArr.length > 0) {\n        retArr.push(initArr.join(''), ';\\n');\n      }\n      retArr.push(`for (let ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n      if (testArr.length > 0) {\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\n      }\n      retArr.push(bodyArr.join(''));\n      retArr.push(`\\n${updateArr.join('')};`);\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astWhileStatement(whileNode, retArr) {\n    if (whileNode.type !== 'WhileStatement') {\n      throw this.astErrorOutput(\n        'Invalid while statement',\n        whileNode\n      );\n    }\n\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n    retArr.push('if (');\n    this.astGeneric(whileNode.test, retArr);\n    retArr.push(') {\\n');\n    this.astGeneric(whileNode.body, retArr);\n    retArr.push('} else {\\n');\n    retArr.push('break;\\n');\n    retArr.push('}\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n  astDoWhileStatement(doWhileNode, retArr) {\n    if (doWhileNode.type !== 'DoWhileStatement') {\n      throw this.astErrorOutput(\n        'Invalid while statement',\n        doWhileNode\n      );\n    }\n\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n    this.astGeneric(doWhileNode.body, retArr);\n    retArr.push('if (!');\n    this.astGeneric(doWhileNode.test, retArr);\n    retArr.push(') {\\n');\n    retArr.push('break;\\n');\n    retArr.push('}\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n\n  }\n\n  astAssignmentExpression(assNode, retArr) {\n    const declaration = this.getDeclaration(assNode.left);\n    if (declaration && !declaration.assignable) {\n      throw this.astErrorOutput(`Variable ${assNode.left.name} is not assignable here`, assNode);\n    }\n    this.astGeneric(assNode.left, retArr);\n    retArr.push(assNode.operator);\n    this.astGeneric(assNode.right, retArr);\n    return retArr;\n  }\n\n  astBlockStatement(bNode, retArr) {\n    if (this.isState('loop-body')) {\n      this.pushState('block-body'); \n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      this.popState('block-body');\n    } else {\n      retArr.push('{\\n');\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astVariableDeclaration(varDecNode, retArr) {\n    retArr.push(`${varDecNode.kind} `);\n    const { declarations } = varDecNode;\n    for (let i = 0; i < declarations.length; i++) {\n      if (i > 0) {\n        retArr.push(',');\n      }\n      const declaration = declarations[i];\n      const info = this.getDeclaration(declaration.id);\n      if (!info.valueType) {\n        info.valueType = this.getType(declaration.init);\n      }\n      this.astGeneric(declaration, retArr);\n    }\n    if (!this.isState('in-for-loop-init')) {\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  astIfStatement(ifNode, retArr) {\n    retArr.push('if (');\n    this.astGeneric(ifNode.test, retArr);\n    retArr.push(')');\n    if (ifNode.consequent.type === 'BlockStatement') {\n      this.astGeneric(ifNode.consequent, retArr);\n    } else {\n      retArr.push(' {\\n');\n      this.astGeneric(ifNode.consequent, retArr);\n      retArr.push('\\n}\\n');\n    }\n\n    if (ifNode.alternate) {\n      retArr.push('else ');\n      if (ifNode.alternate.type === 'BlockStatement' || ifNode.alternate.type === 'IfStatement') {\n        this.astGeneric(ifNode.alternate, retArr);\n      } else {\n        retArr.push(' {\\n');\n        this.astGeneric(ifNode.alternate, retArr);\n        retArr.push('\\n}\\n');\n      }\n    }\n    return retArr;\n\n  }\n\n  astSwitchStatement(ast, retArr) {\n    const { discriminant, cases } = ast;\n    retArr.push('switch (');\n    this.astGeneric(discriminant, retArr);\n    retArr.push(') {\\n');\n    for (let i = 0; i < cases.length; i++) {\n      if (cases[i].test === null) {\n        retArr.push('default:\\n');\n        this.astGeneric(cases[i].consequent, retArr);\n        if (cases[i].consequent && cases[i].consequent.length > 0) {\n          retArr.push('break;\\n');\n        }\n        continue;\n      }\n      retArr.push('case ');\n      this.astGeneric(cases[i].test, retArr);\n      retArr.push(':\\n');\n      if (cases[i].consequent && cases[i].consequent.length > 0) {\n        this.astGeneric(cases[i].consequent, retArr);\n        retArr.push('break;\\n');\n      }\n    }\n    retArr.push('\\n}');\n  }\n\n  astThisExpression(tNode, retArr) {\n    retArr.push('_this');\n    return retArr;\n  }\n\n  astMemberExpression(mNode, retArr) {\n    const {\n      signature,\n      type,\n      property,\n      xProperty,\n      yProperty,\n      zProperty,\n      name,\n      origin\n    } = this.getMemberExpressionDetails(mNode);\n    switch (signature) {\n      case 'this.thread.value':\n        retArr.push(`_this.thread.${ name }`);\n        return retArr;\n      case 'this.output.value':\n        switch (name) {\n          case 'x':\n            retArr.push('outputX');\n            break;\n          case 'y':\n            retArr.push('outputY');\n            break;\n          case 'z':\n            retArr.push('outputZ');\n            break;\n          default:\n            throw this.astErrorOutput('Unexpected expression', mNode);\n        }\n        return retArr;\n      case 'value':\n        throw this.astErrorOutput('Unexpected expression', mNode);\n      case 'value[]':\n      case 'value[][]':\n      case 'value[][][]':\n      case 'value.value':\n        if (origin === 'Math') {\n          retArr.push(Math[name]);\n          return retArr;\n        }\n        switch (property) {\n          case 'r':\n            retArr.push(`user_${ name }[0]`);\n            return retArr;\n          case 'g':\n            retArr.push(`user_${ name }[1]`);\n            return retArr;\n          case 'b':\n            retArr.push(`user_${ name }[2]`);\n            return retArr;\n          case 'a':\n            retArr.push(`user_${ name }[3]`);\n            return retArr;\n        }\n        break;\n      case 'this.constants.value':\n      case 'this.constants.value[]':\n      case 'this.constants.value[][]':\n      case 'this.constants.value[][][]':\n        break;\n      case 'fn()[]':\n        this.astGeneric(mNode.object, retArr);\n        retArr.push('[');\n        this.astGeneric(mNode.property, retArr);\n        retArr.push(']');\n        return retArr;\n      case 'fn()[][]':\n        this.astGeneric(mNode.object.object, retArr);\n        retArr.push('[');\n        this.astGeneric(mNode.object.property, retArr);\n        retArr.push(']');\n        retArr.push('[');\n        this.astGeneric(mNode.property, retArr);\n        retArr.push(']');\n        return retArr;\n      default:\n        throw this.astErrorOutput('Unexpected expression', mNode);\n    }\n\n    if (!mNode.computed) {\n      switch (type) {\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n        case 'Boolean':\n          retArr.push(`${origin}_${name}`);\n          return retArr;\n      }\n    }\n\n    const markupName = `${origin}_${name}`;\n\n    switch (type) {\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n      case 'HTMLImageArray':\n      case 'ArrayTexture(1)':\n      case 'ArrayTexture(2)':\n      case 'ArrayTexture(3)':\n      case 'ArrayTexture(4)':\n      case 'HTMLImage':\n      default:\n        let size;\n        let isInput;\n        if (origin === 'constants') {\n          const constant = this.constants[name];\n          isInput = this.constantTypes[name] === 'Input';\n          size = isInput ? constant.size : null;\n        } else {\n          isInput = this.isInput(name);\n          size = isInput ? this.argumentSizes[this.argumentNames.indexOf(name)] : null;\n        }\n        retArr.push(`${ markupName }`);\n        if (zProperty && yProperty) {\n          if (isInput) {\n            retArr.push('[(');\n            this.astGeneric(zProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? '(outputY * outputX)' : size[1] * size[0] })+(`);\n            this.astGeneric(yProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          } else {\n            retArr.push('[');\n            this.astGeneric(zProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          }\n        } else if (yProperty) {\n          if (isInput) {\n            retArr.push('[(');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          } else {\n            retArr.push('[');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          }\n        } else if (typeof xProperty !== 'undefined') {\n          retArr.push('[');\n          this.astGeneric(xProperty, retArr);\n          retArr.push(']');\n        }\n    }\n    return retArr;\n  }\n\n  astCallExpression(ast, retArr) {\n    if (ast.type !== 'CallExpression') {\n      throw this.astErrorOutput('Unknown CallExpression', ast);\n    }\n    let functionName = this.astMemberExpressionUnroll(ast.callee);\n\n    if (this.calledFunctions.indexOf(functionName) < 0) {\n      this.calledFunctions.push(functionName);\n    }\n\n    const isMathFunction = this.isAstMathFunction(ast);\n\n    if (this.onFunctionCall) {\n      this.onFunctionCall(this.name, functionName, ast.arguments);\n    }\n\n    retArr.push(functionName);\n\n    retArr.push('(');\n    const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n    for (let i = 0; i < ast.arguments.length; ++i) {\n      const argument = ast.arguments[i];\n\n      let argumentType = this.getType(argument);\n      if (!targetTypes[i]) {\n        this.triggerImplyArgumentType(functionName, i, argumentType, this);\n      }\n\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      this.astGeneric(argument, retArr);\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  astArrayExpression(arrNode, retArr) {\n    const returnType = this.getType(arrNode);\n    const arrLen = arrNode.elements.length;\n    const elements = [];\n    for (let i = 0; i < arrLen; ++i) {\n      const element = [];\n      this.astGeneric(arrNode.elements[i], element);\n      elements.push(element.join(''));\n    }\n    switch (returnType) {\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        retArr.push(`[${elements.join(', ')}]`);\n        break;\n      default:\n        retArr.push(`new Float32Array([${elements.join(', ')}])`);\n    }\n    return retArr;\n  }\n\n  astDebuggerStatement(arrNode, retArr) {\n    retArr.push('debugger;');\n    return retArr;\n  }\n}\n\nmodule.exports = {\n  CPUFunctionNode\n};\n},{\"../function-node\":10}],7:[function(require,module,exports){\nconst { utils } = require('../../utils');\n\nfunction constantsToString(constants, types) {\n  const results = [];\n  for (const name in types) {\n    if (!types.hasOwnProperty(name)) continue;\n    const type = types[name];\n    const constant = constants[name];\n    switch (type) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n      case 'Boolean':\n        results.push(`${name}:${constant}`);\n        break;\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        results.push(`${name}:new ${constant.constructor.name}(${JSON.stringify(Array.from(constant))})`);\n        break;\n    }\n  }\n  return `{ ${ results.join() } }`;\n}\n\nfunction cpuKernelString(cpuKernel, name) {\n  const header = [];\n  const thisProperties = [];\n  const beforeReturn = [];\n\n  const useFunctionKeyword = !/^function/.test(cpuKernel.color.toString());\n\n  header.push(\n    '  const { context, canvas, constants: incomingConstants } = settings;',\n    `  const output = new Int32Array(${JSON.stringify(Array.from(cpuKernel.output))});`,\n    `  const _constantTypes = ${JSON.stringify(cpuKernel.constantTypes)};`,\n    `  const _constants = ${constantsToString(cpuKernel.constants, cpuKernel.constantTypes)};`\n  );\n\n  thisProperties.push(\n    '    constants: _constants,',\n    '    context,',\n    '    output,',\n    '    thread: {x: 0, y: 0, z: 0},'\n  );\n\n  if (cpuKernel.graphical) {\n    header.push(`  const _imageData = context.createImageData(${cpuKernel.output[0]}, ${cpuKernel.output[1]});`);\n    header.push(`  const _colorData = new Uint8ClampedArray(${cpuKernel.output[0]} * ${cpuKernel.output[1]} * 4);`);\n\n    const colorFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.color.toString(), {\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case '_colorData':\n            return '_colorData';\n          case '_imageData':\n            return '_imageData';\n          case 'output':\n            return 'output';\n          case 'thread':\n            return 'this.thread';\n        }\n        return JSON.stringify(cpuKernel[propertyName]);\n      },\n      findDependency: (object, name) => {\n        return null;\n      }\n    });\n\n    const getPixelsFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.getPixels.toString(), {\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case '_colorData':\n            return '_colorData';\n          case '_imageData':\n            return '_imageData';\n          case 'output':\n            return 'output';\n          case 'thread':\n            return 'this.thread';\n        }\n        return JSON.stringify(cpuKernel[propertyName]);\n      },\n      findDependency: () => {\n        return null;\n      }\n    });\n\n    thisProperties.push(\n      '    _imageData,',\n      '    _colorData,',\n      `    color: ${colorFn},`\n    );\n\n    beforeReturn.push(\n      `  kernel.getPixels = ${getPixelsFn};`\n    );\n  }\n\n  const constantTypes = [];\n  const constantKeys = Object.keys(cpuKernel.constantTypes);\n  for (let i = 0; i < constantKeys.length; i++) {\n    constantTypes.push(cpuKernel.constantTypes[constantKeys]);\n  }\n  if (cpuKernel.argumentTypes.indexOf('HTMLImageArray') !== -1 || constantTypes.indexOf('HTMLImageArray') !== -1) {\n    const flattenedImageTo3DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._imageTo3DArray.toString(), {\n      doNotDefine: ['canvas'],\n      findDependency: (object, name) => {\n        if (object === 'this') {\n          return (useFunctionKeyword ? 'function ' : '') + cpuKernel[name].toString();\n        }\n        return null;\n      },\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case 'canvas':\n            return;\n          case 'context':\n            return 'context';\n        }\n      }\n    });\n    beforeReturn.push(flattenedImageTo3DArray);\n    thisProperties.push(`    _mediaTo2DArray,`);\n    thisProperties.push(`    _imageTo3DArray,`);\n  } else if (cpuKernel.argumentTypes.indexOf('HTMLImage') !== -1 || constantTypes.indexOf('HTMLImage') !== -1) {\n    const flattenedImageTo2DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._mediaTo2DArray.toString(), {\n      findDependency: (object, name) => {\n        return null;\n      },\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case 'canvas':\n            return 'settings.canvas';\n          case 'context':\n            return 'settings.context';\n        }\n        throw new Error('unhandled thisLookup');\n      }\n    });\n    beforeReturn.push(flattenedImageTo2DArray);\n    thisProperties.push(`    _mediaTo2DArray,`);\n  }\n\n  return `function(settings) {\n${ header.join('\\n') }\n  for (const p in _constantTypes) {\n    if (!_constantTypes.hasOwnProperty(p)) continue;\n    const type = _constantTypes[p];\n    switch (type) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n      case 'Boolean':\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        if (incomingConstants.hasOwnProperty(p)) {\n          console.warn('constant ' + p + ' of type ' + type + ' cannot be resigned');\n        }\n        continue;\n    }\n    if (!incomingConstants.hasOwnProperty(p)) {\n      throw new Error('constant ' + p + ' not found');\n    }\n    _constants[p] = incomingConstants[p];\n  }\n  const kernel = (function() {\n${cpuKernel._kernelString}\n  })\n    .apply({ ${thisProperties.join('\\n')} });\n  ${ beforeReturn.join('\\n') }\n  return kernel;\n}`;\n}\n\nmodule.exports = {\n  cpuKernelString\n};\n},{\"../../utils\":114}],8:[function(require,module,exports){\nconst { Kernel } = require('../kernel');\nconst { FunctionBuilder } = require('../function-builder');\nconst { CPUFunctionNode } = require('./function-node');\nconst { utils } = require('../../utils');\nconst { cpuKernelString } = require('./kernel-string');\n\nclass CPUKernel extends Kernel {\n  static getFeatures() {\n    return this.features;\n  }\n  static get features() {\n    return Object.freeze({\n      kernelMap: true,\n      isIntegerDivisionAccurate: true\n    });\n  }\n  static get isSupported() {\n    return true;\n  }\n  static isContextMatch(context) {\n    return false;\n  }\n  static get mode() {\n    return 'cpu';\n  }\n\n  static nativeFunctionArguments() {\n    return null;\n  }\n\n  static nativeFunctionReturnType() {\n    throw new Error(`Looking up native function return type not supported on ${this.name}`);\n  }\n\n  static combineKernels(combinedKernel) {\n    return combinedKernel;\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    return 'cpu' + (argumentTypes.length > 0 ? ':' + argumentTypes.join(',') : '');\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.mergeSettings(source.settings || settings);\n\n    this._imageData = null;\n    this._colorData = null;\n    this._kernelString = null;\n    this._prependedString = [];\n    this.thread = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n    this.translatedSources = null;\n  }\n\n  initCanvas() {\n    if (typeof document !== 'undefined') {\n      return document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(0, 0);\n    }\n  }\n\n  initContext() {\n    if (!this.canvas) return null;\n    return this.canvas.getContext('2d');\n  }\n\n  initPlugins(settings) {\n    return [];\n  }\n\n  validateSettings(args) {\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      if (argType === 'Array') {\n        this.output = utils.getDimensions(argType);\n      } else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\n        this.output = args[0].output;\n      } else {\n        throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n    }\n\n    this.checkOutput();\n  }\n\n  translateSource() {\n    this.leadingReturnStatement = this.output.length > 1 ? 'resultX[x] = ' : 'result[x] = ';\n    if (this.subKernels) {\n      const followingReturnStatement = [];\n      for (let i = 0; i < this.subKernels.length; i++) {\n        const {\n          name\n        } = this.subKernels[i];\n        followingReturnStatement.push(this.output.length > 1 ? `resultX_${ name }[x] = subKernelResult_${ name };\\n` : `result_${ name }[x] = subKernelResult_${ name };\\n`);\n      }\n      this.followingReturnStatement = followingReturnStatement.join('');\n    }\n    const functionBuilder = FunctionBuilder.fromKernel(this, CPUFunctionNode);\n    this.translatedSources = functionBuilder.getPrototypes('kernel');\n    if (!this.graphical && !this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n  }\n\n  build() {\n    if (this.built) return;\n    this.setupConstants();\n    this.setupArguments(arguments);\n    this.validateSettings(arguments);\n    this.translateSource();\n\n    if (this.graphical) {\n      const {\n        canvas,\n        output\n      } = this;\n      if (!canvas) {\n        throw new Error('no canvas available for using graphical output');\n      }\n      const width = output[0];\n      const height = output[1] || 1;\n      canvas.width = width;\n      canvas.height = height;\n      this._imageData = this.context.createImageData(width, height);\n      this._colorData = new Uint8ClampedArray(width * height * 4);\n    }\n\n    const kernelString = this.getKernelString();\n    this.kernelString = kernelString;\n\n    if (this.debug) {\n      console.log('Function output:');\n      console.log(kernelString);\n    }\n\n    try {\n      this.run = new Function([], kernelString).bind(this)();\n    } catch (e) {\n      console.error('An error occurred compiling the javascript: ', e);\n    }\n    this.buildSignature(arguments);\n    this.built = true;\n  }\n\n  color(r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n\n    const width = this.output[0];\n    const height = this.output[1];\n\n    const x = this.thread.x;\n    const y = height - this.thread.y - 1;\n\n    const index = x + y * width;\n\n    this._colorData[index * 4 + 0] = r;\n    this._colorData[index * 4 + 1] = g;\n    this._colorData[index * 4 + 2] = b;\n    this._colorData[index * 4 + 3] = a;\n  }\n\n  getKernelString() {\n    if (this._kernelString !== null) return this._kernelString;\n\n    let kernelThreadString = null;\n    let {\n      translatedSources\n    } = this;\n    if (translatedSources.length > 1) {\n      translatedSources = translatedSources.filter(fn => {\n        if (/^function/.test(fn)) return fn;\n        kernelThreadString = fn;\n        return false;\n      });\n    } else {\n      kernelThreadString = translatedSources.shift();\n    }\n    return this._kernelString = `  const LOOP_MAX = ${ this._getLoopMaxString() };\n  ${ this.injectedNative || '' }\n  const _this = this;\n  ${ this._resultKernelHeader() }\n  ${ this._processConstants() }\n  return (${ this.argumentNames.map(argumentName => 'user_' + argumentName).join(', ') }) => {\n    ${ this._prependedString.join('') }\n    ${ this._earlyThrows() }\n    ${ this._processArguments() }\n    ${ this.graphical ? this._graphicalKernelBody(kernelThreadString) : this._resultKernelBody(kernelThreadString) }\n    ${ translatedSources.length > 0 ? translatedSources.join('\\n') : '' }\n  };`;\n  }\n\n  toString() {\n    return cpuKernelString(this);\n  }\n\n  _getLoopMaxString() {\n    return (\n      this.loopMaxIterations ?\n      ` ${ parseInt(this.loopMaxIterations) };` :\n      ' 1000;'\n    );\n  }\n\n  _processConstants() {\n    if (!this.constants) return '';\n\n    const result = [];\n    for (let p in this.constants) {\n      const type = this.constantTypes[p];\n      switch (type) {\n        case 'HTMLCanvas':\n        case 'OffscreenCanvas':\n        case 'HTMLImage':\n        case 'ImageBitmap':\n        case 'ImageData':\n        case 'HTMLVideo':\n          result.push(`    const constants_${p} = this._mediaTo2DArray(this.constants.${p});\\n`);\n          break;\n        case 'HTMLImageArray':\n          result.push(`    const constants_${p} = this._imageTo3DArray(this.constants.${p});\\n`);\n          break;\n        case 'Input':\n          result.push(`    const constants_${p} = this.constants.${p}.value;\\n`);\n          break;\n        default:\n          result.push(`    const constants_${p} = this.constants.${p};\\n`);\n      }\n    }\n    return result.join('');\n  }\n\n  _earlyThrows() {\n    if (this.graphical) return '';\n    if (this.immutable) return '';\n    if (!this.pipeline) return '';\n    const arrayArguments = [];\n    for (let i = 0; i < this.argumentTypes.length; i++) {\n      if (this.argumentTypes[i] === 'Array') {\n        arrayArguments.push(this.argumentNames[i]);\n      }\n    }\n    if (arrayArguments.length === 0) return '';\n    const checks = [];\n    for (let i = 0; i < arrayArguments.length; i++) {\n      const argumentName = arrayArguments[i];\n      const checkSubKernels = this._mapSubKernels(subKernel => `user_${argumentName} === result_${subKernel.name}`).join(' || ');\n      checks.push(`user_${argumentName} === result${checkSubKernels ? ` || ${checkSubKernels}` : ''}`);\n    }\n    return `if (${checks.join(' || ')}) throw new Error('Source and destination arrays are the same.  Use immutable = true');`;\n  }\n\n  _processArguments() {\n    const result = [];\n    for (let i = 0; i < this.argumentTypes.length; i++) {\n      const variableName = `user_${this.argumentNames[i]}`;\n      switch (this.argumentTypes[i]) {\n        case 'HTMLCanvas':\n        case 'OffscreenCanvas':\n        case 'HTMLImage':\n        case 'ImageBitmap':\n        case 'ImageData':\n        case 'HTMLVideo':\n          result.push(`    ${variableName} = this._mediaTo2DArray(${variableName});\\n`);\n          break;\n        case 'HTMLImageArray':\n          result.push(`    ${variableName} = this._imageTo3DArray(${variableName});\\n`);\n          break;\n        case 'Input':\n          result.push(`    ${variableName} = ${variableName}.value;\\n`);\n          break;\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n          result.push(`\n    if (${variableName}.toArray) {\n      if (!_this.textureCache) {\n        _this.textureCache = [];\n        _this.arrayCache = [];\n      }\n      const textureIndex = _this.textureCache.indexOf(${variableName});\n      if (textureIndex !== -1) {\n        ${variableName} = _this.arrayCache[textureIndex];\n      } else {\n        _this.textureCache.push(${variableName});\n        ${variableName} = ${variableName}.toArray();\n        _this.arrayCache.push(${variableName});\n      }\n    }`);\n          break;\n      }\n    }\n    return result.join('');\n  }\n\n  _mediaTo2DArray(media) {\n    const canvas = this.canvas;\n    const width = media.width > 0 ? media.width : media.videoWidth;\n    const height = media.height > 0 ? media.height : media.videoHeight;\n    if (canvas.width < width) {\n      canvas.width = width;\n    }\n    if (canvas.height < height) {\n      canvas.height = height;\n    }\n    const ctx = this.context;\n    let pixelsData;\n    if (media.constructor === ImageData) {\n      pixelsData = media.data;\n    } else {\n      ctx.drawImage(media, 0, 0, width, height);\n      pixelsData = ctx.getImageData(0, 0, width, height).data;\n    }\n    const imageArray = new Array(height);\n    let index = 0;\n    for (let y = height - 1; y >= 0; y--) {\n      const row = imageArray[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        const pixel = new Float32Array(4);\n        pixel[0] = pixelsData[index++] / 255; \n        pixel[1] = pixelsData[index++] / 255; \n        pixel[2] = pixelsData[index++] / 255; \n        pixel[3] = pixelsData[index++] / 255; \n        row[x] = pixel;\n      }\n    }\n    return imageArray;\n  }\n\n  getPixels(flip) {\n    const [width, height] = this.output;\n    return flip ? utils.flipPixels(this._imageData.data, width, height) : this._imageData.data.slice(0);\n  }\n\n  _imageTo3DArray(images) {\n    const imagesArray = new Array(images.length);\n    for (let i = 0; i < images.length; i++) {\n      imagesArray[i] = this._mediaTo2DArray(images[i]);\n    }\n    return imagesArray;\n  }\n\n  _resultKernelHeader() {\n    if (this.graphical) return '';\n    if (this.immutable) return '';\n    if (!this.pipeline) return '';\n    switch (this.output.length) {\n      case 1:\n        return this._mutableKernel1DResults();\n      case 2:\n        return this._mutableKernel2DResults();\n      case 3:\n        return this._mutableKernel3DResults();\n    }\n  }\n\n  _resultKernelBody(kernelString) {\n    switch (this.output.length) {\n      case 1:\n        return (!this.immutable && this.pipeline ? this._resultMutableKernel1DLoop(kernelString) : this._resultImmutableKernel1DLoop(kernelString)) + this._kernelOutput();\n      case 2:\n        return (!this.immutable && this.pipeline ? this._resultMutableKernel2DLoop(kernelString) : this._resultImmutableKernel2DLoop(kernelString)) + this._kernelOutput();\n      case 3:\n        return (!this.immutable && this.pipeline ? this._resultMutableKernel3DLoop(kernelString) : this._resultImmutableKernel3DLoop(kernelString)) + this._kernelOutput();\n      default:\n        throw new Error('unsupported size kernel');\n    }\n  }\n\n  _graphicalKernelBody(kernelThreadString) {\n    switch (this.output.length) {\n      case 2:\n        return this._graphicalKernel2DLoop(kernelThreadString) + this._graphicalOutput();\n      default:\n        throw new Error('unsupported size kernel');\n    }\n  }\n\n  _graphicalOutput() {\n    return `\n    this._imageData.data.set(this._colorData);\n    this.context.putImageData(this._imageData, 0, 0);\n    return;`\n  }\n\n  _getKernelResultTypeConstructorString() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return 'Float32Array';\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        return 'Array';\n      default:\n        if (this.graphical) {\n          return 'Float32Array';\n        }\n        throw new Error(`unhandled returnType ${ this.returnType }`);\n    }\n  }\n\n  _resultImmutableKernel1DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const result = new ${constructorString}(outputX);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new ${constructorString}(outputX);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let x = 0; x < outputX; x++) {\n      this.thread.x = x;\n      this.thread.y = 0;\n      this.thread.z = 0;\n      ${ kernelString }\n    }`;\n  }\n\n  _mutableKernel1DResults() {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const result = new ${constructorString}(outputX);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new ${constructorString}(outputX);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }`;\n  }\n\n  _resultMutableKernel1DLoop(kernelString) {\n    return `  const outputX = _this.output[0];\n    for (let x = 0; x < outputX; x++) {\n      this.thread.x = x;\n      this.thread.y = 0;\n      this.thread.z = 0;\n      ${ kernelString }\n    }`;\n  }\n\n  _resultImmutableKernel2DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const result = new Array(outputY);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      const resultX = result[y] = new ${constructorString}(outputX);\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _mutableKernel2DResults() {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const result = new Array(outputY);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let y = 0; y < outputY; y++) {\n      const resultX = result[y] = new ${constructorString}(outputX);\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n    }`;\n  }\n\n  _resultMutableKernel2DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      const resultX = result[y];\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _graphicalKernel2DLoop(kernelString) {\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _resultImmutableKernel3DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    const result = new Array(outputZ);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputZ);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let z = 0; z < outputZ; z++) {\n      this.thread.z = z;\n      const resultY = result[z] = new Array(outputY);\n      ${ this._mapSubKernels(subKernel => `const resultY_${ subKernel.name } = result_${subKernel.name}[z] = new Array(outputY);\\n`).join('      ') }\n      for (let y = 0; y < outputY; y++) {\n        this.thread.y = y;\n        const resultX = resultY[y] = new ${constructorString}(outputX);\n        ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = resultY_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('        ') }\n        for (let x = 0; x < outputX; x++) {\n          this.thread.x = x;\n          ${ kernelString }\n        }\n      }\n    }`;\n  }\n\n  _mutableKernel3DResults() {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    const result = new Array(outputZ);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputZ);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let z = 0; z < outputZ; z++) {\n      const resultY = result[z] = new Array(outputY);\n      ${ this._mapSubKernels(subKernel => `const resultY_${ subKernel.name } = result_${subKernel.name}[z] = new Array(outputY);\\n`).join('      ') }\n      for (let y = 0; y < outputY; y++) {\n        const resultX = resultY[y] = new ${constructorString}(outputX);\n        ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = resultY_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('        ') }\n      }\n    }`;\n  }\n\n  _resultMutableKernel3DLoop(kernelString) {\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    for (let z = 0; z < outputZ; z++) {\n      this.thread.z = z;\n      const resultY = result[z];\n      for (let y = 0; y < outputY; y++) {\n        this.thread.y = y;\n        const resultX = resultY[y];\n        for (let x = 0; x < outputX; x++) {\n          this.thread.x = x;\n          ${ kernelString }\n        }\n      }\n    }`;\n  }\n\n  _kernelOutput() {\n    if (!this.subKernels) {\n      return '\\n    return result;';\n    }\n    return `\\n    return {\n      result: result,\n      ${ this.subKernels.map(subKernel => `${ subKernel.property }: result_${ subKernel.name }`).join(',\\n      ') }\n    };`;\n  }\n\n  _mapSubKernels(fn) {\n    return this.subKernels === null ? [''] :\n      this.subKernels.map(fn);\n  }\n\n  destroy(removeCanvasReference) {\n    if (removeCanvasReference) {\n      delete this.canvas;\n    }\n  }\n\n  static destroyContext(context) {}\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, CPUFunctionNode).toJSON();\n    return json;\n  }\n\n  setOutput(output) {\n    super.setOutput(output);\n    const [width, height] = this.output;\n    if (this.graphical) {\n      this._imageData = this.context.createImageData(width, height);\n      this._colorData = new Uint8ClampedArray(width * height * 4);\n    }\n  }\n\n  prependString(value) {\n    if (this._kernelString) throw new Error('Kernel already built');\n    this._prependedString.push(value);\n  }\n\n  hasPrependString(value) {\n    return this._prependedString.indexOf(value) > -1;\n  }\n}\n\nmodule.exports = {\n  CPUKernel\n};\n},{\"../../utils\":114,\"../function-builder\":9,\"../kernel\":36,\"./function-node\":6,\"./kernel-string\":7}],9:[function(require,module,exports){\nclass FunctionBuilder {\n  static fromKernel(kernel, FunctionNode, extraNodeOptions) {\n    const {\n      kernelArguments,\n      kernelConstants,\n      argumentNames,\n      argumentSizes,\n      argumentBitRatios,\n      constants,\n      constantBitRatios,\n      debug,\n      loopMaxIterations,\n      nativeFunctions,\n      output,\n      optimizeFloatMemory,\n      precision,\n      plugins,\n      source,\n      subKernels,\n      functions,\n      leadingReturnStatement,\n      followingReturnStatement,\n      dynamicArguments,\n      dynamicOutput,\n    } = kernel;\n\n    const argumentTypes = new Array(kernelArguments.length);\n    const constantTypes = {};\n\n    for (let i = 0; i < kernelArguments.length; i++) {\n      argumentTypes[i] = kernelArguments[i].type;\n    }\n\n    for (let i = 0; i < kernelConstants.length; i++) {\n      const kernelConstant = kernelConstants[i];\n      constantTypes[kernelConstant.name] = kernelConstant.type;\n    }\n\n    const needsArgumentType = (functionName, index) => {\n      return functionBuilder.needsArgumentType(functionName, index);\n    };\n\n    const assignArgumentType = (functionName, index, type) => {\n      functionBuilder.assignArgumentType(functionName, index, type);\n    };\n\n    const lookupReturnType = (functionName, ast, requestingNode) => {\n      return functionBuilder.lookupReturnType(functionName, ast, requestingNode);\n    };\n\n    const lookupFunctionArgumentTypes = (functionName) => {\n      return functionBuilder.lookupFunctionArgumentTypes(functionName);\n    };\n\n    const lookupFunctionArgumentName = (functionName, argumentIndex) => {\n      return functionBuilder.lookupFunctionArgumentName(functionName, argumentIndex);\n    };\n\n    const lookupFunctionArgumentBitRatio = (functionName, argumentName) => {\n      return functionBuilder.lookupFunctionArgumentBitRatio(functionName, argumentName);\n    };\n\n    const triggerImplyArgumentType = (functionName, i, argumentType, requestingNode) => {\n      functionBuilder.assignArgumentType(functionName, i, argumentType, requestingNode);\n    };\n\n    const triggerImplyArgumentBitRatio = (functionName, argumentName, calleeFunctionName, argumentIndex) => {\n      functionBuilder.assignArgumentBitRatio(functionName, argumentName, calleeFunctionName, argumentIndex);\n    };\n\n    const onFunctionCall = (functionName, calleeFunctionName, args) => {\n      functionBuilder.trackFunctionCall(functionName, calleeFunctionName, args);\n    };\n\n    const onNestedFunction = (ast, source) => {\n      const argumentNames = [];\n      for (let i = 0; i < ast.params.length; i++) {\n        argumentNames.push(ast.params[i].name);\n      }\n      const nestedFunction = new FunctionNode(source, Object.assign({}, nodeOptions, {\n        returnType: null,\n        ast,\n        name: ast.id.name,\n        argumentNames,\n        lookupReturnType,\n        lookupFunctionArgumentTypes,\n        lookupFunctionArgumentName,\n        lookupFunctionArgumentBitRatio,\n        needsArgumentType,\n        assignArgumentType,\n        triggerImplyArgumentType,\n        triggerImplyArgumentBitRatio,\n        onFunctionCall,\n      }));\n      nestedFunction.traceFunctionAST(ast);\n      functionBuilder.addFunctionNode(nestedFunction);\n    };\n\n    const nodeOptions = Object.assign({\n      isRootKernel: false,\n      onNestedFunction,\n      lookupReturnType,\n      lookupFunctionArgumentTypes,\n      lookupFunctionArgumentName,\n      lookupFunctionArgumentBitRatio,\n      needsArgumentType,\n      assignArgumentType,\n      triggerImplyArgumentType,\n      triggerImplyArgumentBitRatio,\n      onFunctionCall,\n      optimizeFloatMemory,\n      precision,\n      constants,\n      constantTypes,\n      constantBitRatios,\n      debug,\n      loopMaxIterations,\n      output,\n      plugins,\n      dynamicArguments,\n      dynamicOutput,\n    }, extraNodeOptions || {});\n\n    const rootNodeOptions = Object.assign({}, nodeOptions, {\n      isRootKernel: true,\n      name: 'kernel',\n      argumentNames,\n      argumentTypes,\n      argumentSizes,\n      argumentBitRatios,\n      leadingReturnStatement,\n      followingReturnStatement,\n    });\n\n    if (typeof source === 'object' && source.functionNodes) {\n      return new FunctionBuilder().fromJSON(source.functionNodes, FunctionNode);\n    }\n\n    const rootNode = new FunctionNode(source, rootNodeOptions);\n\n    let functionNodes = null;\n    if (functions) {\n      functionNodes = functions.map((fn) => new FunctionNode(fn.source, {\n        returnType: fn.returnType,\n        argumentTypes: fn.argumentTypes,\n        output,\n        plugins,\n        constants,\n        constantTypes,\n        constantBitRatios,\n        optimizeFloatMemory,\n        precision,\n        lookupReturnType,\n        lookupFunctionArgumentTypes,\n        lookupFunctionArgumentName,\n        lookupFunctionArgumentBitRatio,\n        needsArgumentType,\n        assignArgumentType,\n        triggerImplyArgumentType,\n        triggerImplyArgumentBitRatio,\n        onFunctionCall,\n        onNestedFunction,\n      }));\n    }\n\n    let subKernelNodes = null;\n    if (subKernels) {\n      subKernelNodes = subKernels.map((subKernel) => {\n        const { name, source } = subKernel;\n        return new FunctionNode(source, Object.assign({}, nodeOptions, {\n          name,\n          isSubKernel: true,\n          isRootKernel: false,\n        }));\n      });\n    }\n\n    const functionBuilder = new FunctionBuilder({\n      kernel,\n      rootNode,\n      functionNodes,\n      nativeFunctions,\n      subKernelNodes\n    });\n\n    return functionBuilder;\n  }\n\n  constructor(settings) {\n    settings = settings || {};\n    this.kernel = settings.kernel;\n    this.rootNode = settings.rootNode;\n    this.functionNodes = settings.functionNodes || [];\n    this.subKernelNodes = settings.subKernelNodes || [];\n    this.nativeFunctions = settings.nativeFunctions || [];\n    this.functionMap = {};\n    this.nativeFunctionNames = [];\n    this.lookupChain = [];\n    this.functionNodeDependencies = {};\n    this.functionCalls = {};\n\n    if (this.rootNode) {\n      this.functionMap['kernel'] = this.rootNode;\n    }\n\n    if (this.functionNodes) {\n      for (let i = 0; i < this.functionNodes.length; i++) {\n        this.functionMap[this.functionNodes[i].name] = this.functionNodes[i];\n      }\n    }\n\n    if (this.subKernelNodes) {\n      for (let i = 0; i < this.subKernelNodes.length; i++) {\n        this.functionMap[this.subKernelNodes[i].name] = this.subKernelNodes[i];\n      }\n    }\n\n    if (this.nativeFunctions) {\n      for (let i = 0; i < this.nativeFunctions.length; i++) {\n        const nativeFunction = this.nativeFunctions[i];\n        this.nativeFunctionNames.push(nativeFunction.name);\n      }\n    }\n  }\n\n  addFunctionNode(functionNode) {\n    if (!functionNode.name) throw new Error('functionNode.name needs set');\n    this.functionMap[functionNode.name] = functionNode;\n    if (functionNode.isRootKernel) {\n      this.rootNode = functionNode;\n    }\n  }\n\n  traceFunctionCalls(functionName, retList) {\n    functionName = functionName || 'kernel';\n    retList = retList || [];\n\n    if (this.nativeFunctionNames.indexOf(functionName) > -1) {\n      const nativeFunctionIndex = retList.indexOf(functionName);\n      if (nativeFunctionIndex === -1) {\n        retList.push(functionName);\n      } else {\n        const dependantNativeFunctionName = retList.splice(nativeFunctionIndex, 1)[0];\n        retList.push(dependantNativeFunctionName);\n      }\n      return retList;\n    }\n\n    const functionNode = this.functionMap[functionName];\n    if (functionNode) {\n      const functionIndex = retList.indexOf(functionName);\n      if (functionIndex === -1) {\n        retList.push(functionName);\n        functionNode.toString(); \n        for (let i = 0; i < functionNode.calledFunctions.length; ++i) {\n          this.traceFunctionCalls(functionNode.calledFunctions[i], retList);\n        }\n      } else {\n        const dependantFunctionName = retList.splice(functionIndex, 1)[0];\n        retList.push(dependantFunctionName);\n      }\n    }\n\n    return retList;\n  }\n\n  getPrototypeString(functionName) {\n    return this.getPrototypes(functionName).join('\\n');\n  }\n\n  getPrototypes(functionName) {\n    if (this.rootNode) {\n      this.rootNode.toString();\n    }\n    if (functionName) {\n      return this.getPrototypesFromFunctionNames(this.traceFunctionCalls(functionName, []).reverse());\n    }\n    return this.getPrototypesFromFunctionNames(Object.keys(this.functionMap));\n  }\n\n  getStringFromFunctionNames(functionList) {\n    const ret = [];\n    for (let i = 0; i < functionList.length; ++i) {\n      const node = this.functionMap[functionList[i]];\n      if (node) {\n        ret.push(this.functionMap[functionList[i]].toString());\n      }\n    }\n    return ret.join('\\n');\n  }\n\n  getPrototypesFromFunctionNames(functionList) {\n    const ret = [];\n    for (let i = 0; i < functionList.length; ++i) {\n      const functionName = functionList[i];\n      const functionIndex = this.nativeFunctionNames.indexOf(functionName);\n      if (functionIndex > -1) {\n        ret.push(this.nativeFunctions[functionIndex].source);\n        continue;\n      }\n      const node = this.functionMap[functionName];\n      if (node) {\n        ret.push(node.toString());\n      }\n    }\n    return ret;\n  }\n\n  toJSON() {\n    return this.traceFunctionCalls(this.rootNode.name).reverse().map(name => {\n      const nativeIndex = this.nativeFunctions.indexOf(name);\n      if (nativeIndex > -1) {\n        return {\n          name,\n          source: this.nativeFunctions[nativeIndex].source\n        };\n      } else if (this.functionMap[name]) {\n        return this.functionMap[name].toJSON();\n      } else {\n        throw new Error(`function ${ name } not found`);\n      }\n    });\n  }\n\n  fromJSON(jsonFunctionNodes, FunctionNode) {\n    this.functionMap = {};\n    for (let i = 0; i < jsonFunctionNodes.length; i++) {\n      const jsonFunctionNode = jsonFunctionNodes[i];\n      this.functionMap[jsonFunctionNode.settings.name] = new FunctionNode(jsonFunctionNode.ast, jsonFunctionNode.settings);\n    }\n    return this;\n  }\n\n  getString(functionName) {\n    if (functionName) {\n      return this.getStringFromFunctionNames(this.traceFunctionCalls(functionName).reverse());\n    }\n    return this.getStringFromFunctionNames(Object.keys(this.functionMap));\n  }\n\n  lookupReturnType(functionName, ast, requestingNode) {\n    if (ast.type !== 'CallExpression') {\n      throw new Error(`expected ast type of \"CallExpression\", but is ${ ast.type }`);\n    }\n    if (this._isNativeFunction(functionName)) {\n      return this._lookupNativeFunctionReturnType(functionName);\n    } else if (this._isFunction(functionName)) {\n      const node = this._getFunction(functionName);\n      if (node.returnType) {\n        return node.returnType;\n      } else {\n        for (let i = 0; i < this.lookupChain.length; i++) {\n          if (this.lookupChain[i].ast === ast) {\n            if (node.argumentTypes.length === 0 && ast.arguments.length > 0) {\n              const args = ast.arguments;\n              for (let j = 0; j < args.length; j++) {\n                this.lookupChain.push({\n                  name: requestingNode.name,\n                  ast: args[i],\n                  requestingNode\n                });\n                node.argumentTypes[j] = requestingNode.getType(args[j]);\n                this.lookupChain.pop();\n              }\n              return node.returnType = node.getType(node.getJsAST());\n            }\n\n            throw new Error('circlical logic detected!');\n          }\n        }\n        this.lookupChain.push({\n          name: requestingNode.name,\n          ast,\n          requestingNode\n        });\n        const type = node.getType(node.getJsAST());\n        this.lookupChain.pop();\n        return node.returnType = type;\n      }\n    }\n\n    return null;\n  }\n\n  _getFunction(functionName) {\n    if (!this._isFunction(functionName)) {\n      new Error(`Function ${functionName} not found`);\n    }\n    return this.functionMap[functionName];\n  }\n\n  _isFunction(functionName) {\n    return Boolean(this.functionMap[functionName]);\n  }\n\n  _getNativeFunction(functionName) {\n    for (let i = 0; i < this.nativeFunctions.length; i++) {\n      if (this.nativeFunctions[i].name === functionName) return this.nativeFunctions[i];\n    }\n    return null;\n  }\n\n  _isNativeFunction(functionName) {\n    return Boolean(this._getNativeFunction(functionName));\n  }\n\n  _lookupNativeFunctionReturnType(functionName) {\n    let nativeFunction = this._getNativeFunction(functionName);\n    if (nativeFunction) {\n      return nativeFunction.returnType;\n    }\n    throw new Error(`Native function ${ functionName } not found`);\n  }\n\n  lookupFunctionArgumentTypes(functionName) {\n    if (this._isNativeFunction(functionName)) {\n      return this._getNativeFunction(functionName).argumentTypes;\n    } else if (this._isFunction(functionName)) {\n      return this._getFunction(functionName).argumentTypes;\n    }\n    return null;\n  }\n\n  lookupFunctionArgumentName(functionName, argumentIndex) {\n    return this._getFunction(functionName).argumentNames[argumentIndex];\n  }\n\n  lookupFunctionArgumentBitRatio(functionName, argumentName) {\n    if (!this._isFunction(functionName)) {\n      throw new Error('function not found');\n    }\n    if (this.rootNode.name === functionName) {\n      const i = this.rootNode.argumentNames.indexOf(argumentName);\n      if (i !== -1) {\n        return this.rootNode.argumentBitRatios[i];\n      }\n    }\n    const node = this._getFunction(functionName);\n    const i = node.argumentNames.indexOf(argumentName);\n    if (i === -1) {\n      throw new Error('argument not found');\n    }\n    const bitRatio = node.argumentBitRatios[i];\n    if (typeof bitRatio !== 'number') {\n      throw new Error('argument bit ratio not found');\n    }\n    return bitRatio;\n  }\n\n  needsArgumentType(functionName, i) {\n    if (!this._isFunction(functionName)) return false;\n    const fnNode = this._getFunction(functionName);\n    return !fnNode.argumentTypes[i];\n  }\n\n  assignArgumentType(functionName, i, argumentType, requestingNode) {\n    if (!this._isFunction(functionName)) return;\n    const fnNode = this._getFunction(functionName);\n    if (!fnNode.argumentTypes[i]) {\n      fnNode.argumentTypes[i] = argumentType;\n    }\n  }\n\n  assignArgumentBitRatio(functionName, argumentName, calleeFunctionName, argumentIndex) {\n    const node = this._getFunction(functionName);\n    if (this._isNativeFunction(calleeFunctionName)) return null;\n    const calleeNode = this._getFunction(calleeFunctionName);\n    const i = node.argumentNames.indexOf(argumentName);\n    if (i === -1) {\n      throw new Error(`Argument ${argumentName} not found in arguments from function ${functionName}`);\n    }\n    const bitRatio = node.argumentBitRatios[i];\n    if (typeof bitRatio !== 'number') {\n      throw new Error(`Bit ratio for argument ${argumentName} not found in function ${functionName}`);\n    }\n    if (!calleeNode.argumentBitRatios) {\n      calleeNode.argumentBitRatios = new Array(calleeNode.argumentNames.length);\n    }\n    const calleeBitRatio = calleeNode.argumentBitRatios[i];\n    if (typeof calleeBitRatio === 'number') {\n      if (calleeBitRatio !== bitRatio) {\n        throw new Error(`Incompatible bit ratio found at function ${functionName} at argument ${argumentName}`);\n      }\n      return calleeBitRatio;\n    }\n    calleeNode.argumentBitRatios[i] = bitRatio;\n    return bitRatio;\n  }\n\n  trackFunctionCall(functionName, calleeFunctionName, args) {\n    if (!this.functionNodeDependencies[functionName]) {\n      this.functionNodeDependencies[functionName] = new Set();\n      this.functionCalls[functionName] = [];\n    }\n    this.functionNodeDependencies[functionName].add(calleeFunctionName);\n    this.functionCalls[functionName].push(args);\n  }\n\n  getKernelResultType() {\n    return this.rootNode.returnType || this.rootNode.getType(this.rootNode.ast);\n  }\n\n  getSubKernelResultType(index) {\n    const subKernelNode = this.subKernelNodes[index];\n    let called = false;\n    for (let functionCallIndex = 0; functionCallIndex < this.rootNode.functionCalls.length; functionCallIndex++) {\n      const functionCall = this.rootNode.functionCalls[functionCallIndex];\n      if (functionCall.ast.callee.name === subKernelNode.name) {\n        called = true;\n      }\n    }\n    if (!called) {\n      throw new Error(`SubKernel ${ subKernelNode.name } never called by kernel`);\n    }\n    return subKernelNode.returnType || subKernelNode.getType(subKernelNode.getJsAST());\n  }\n\n  getReturnTypes() {\n    const result = {\n      [this.rootNode.name]: this.rootNode.getType(this.rootNode.ast),\n    };\n    const list = this.traceFunctionCalls(this.rootNode.name);\n    for (let i = 0; i < list.length; i++) {\n      const functionName = list[i];\n      const functionNode = this.functionMap[functionName];\n      result[functionName] = functionNode.getType(functionNode.ast);\n    }\n    return result;\n  }\n}\n\nmodule.exports = {\n  FunctionBuilder\n};\n},{}],10:[function(require,module,exports){\nconst acorn = require('acorn');\nconst { utils } = require('../utils');\nconst { FunctionTracer } = require('./function-tracer');\n\nclass FunctionNode {\n  constructor(source, settings) {\n    if (!source && !settings.ast) {\n      throw new Error('source parameter is missing');\n    }\n    settings = settings || {};\n    this.source = source;\n    this.ast = null;\n    this.name = typeof source === 'string' ? settings.isRootKernel ?\n      'kernel' :\n      (settings.name || utils.getFunctionNameFromString(source)) : null;\n    this.calledFunctions = [];\n    this.constants = {};\n    this.constantTypes = {};\n    this.constantBitRatios = {};\n    this.isRootKernel = false;\n    this.isSubKernel = false;\n    this.debug = null;\n    this.functions = null;\n    this.identifiers = null;\n    this.contexts = null;\n    this.functionCalls = null;\n    this.states = [];\n    this.needsArgumentType = null;\n    this.assignArgumentType = null;\n    this.lookupReturnType = null;\n    this.lookupFunctionArgumentTypes = null;\n    this.lookupFunctionArgumentBitRatio = null;\n    this.triggerImplyArgumentType = null;\n    this.triggerImplyArgumentBitRatio = null;\n    this.onNestedFunction = null;\n    this.onFunctionCall = null;\n    this.optimizeFloatMemory = null;\n    this.precision = null;\n    this.loopMaxIterations = null;\n    this.argumentNames = (typeof this.source === 'string' ? utils.getArgumentNamesFromString(this.source) : null);\n    this.argumentTypes = [];\n    this.argumentSizes = [];\n    this.argumentBitRatios = null;\n    this.returnType = null;\n    this.output = [];\n    this.plugins = null;\n    this.leadingReturnStatement = null;\n    this.followingReturnStatement = null;\n    this.dynamicOutput = null;\n    this.dynamicArguments = null;\n    this.strictTypingChecking = false;\n    this.fixIntegerDivisionAccuracy = null;\n\n    if (settings) {\n      for (const p in settings) {\n        if (!settings.hasOwnProperty(p)) continue;\n        if (!this.hasOwnProperty(p)) continue;\n        this[p] = settings[p];\n      }\n    }\n\n    this.literalTypes = {};\n\n    this.validate();\n    this._string = null;\n    this._internalVariableNames = {};\n  }\n\n  validate() {\n    if (typeof this.source !== 'string' && !this.ast) {\n      throw new Error('this.source not a string');\n    }\n\n    if (!this.ast && !utils.isFunctionString(this.source)) {\n      throw new Error('this.source not a function string');\n    }\n\n    if (!this.name) {\n      throw new Error('this.name could not be set');\n    }\n\n    if (this.argumentTypes.length > 0 && this.argumentTypes.length !== this.argumentNames.length) {\n      throw new Error(`argumentTypes count of ${ this.argumentTypes.length } exceeds ${ this.argumentNames.length }`);\n    }\n\n    if (this.output.length < 1) {\n      throw new Error('this.output is not big enough');\n    }\n  }\n\n  isIdentifierConstant(name) {\n    if (!this.constants) return false;\n    return this.constants.hasOwnProperty(name);\n  }\n\n  isInput(argumentName) {\n    return this.argumentTypes[this.argumentNames.indexOf(argumentName)] === 'Input';\n  }\n\n  pushState(state) {\n    this.states.push(state);\n  }\n\n  popState(state) {\n    if (this.state !== state) {\n      throw new Error(`Cannot popState ${ state } when in ${ this.state }`);\n    }\n    this.states.pop();\n  }\n\n  isState(state) {\n    return this.state === state;\n  }\n\n  get state() {\n    return this.states[this.states.length - 1];\n  }\n\n  astMemberExpressionUnroll(ast) {\n    if (ast.type === 'Identifier') {\n      return ast.name;\n    } else if (ast.type === 'ThisExpression') {\n      return 'this';\n    }\n\n    if (ast.type === 'MemberExpression') {\n      if (ast.object && ast.property) {\n        if (ast.object.hasOwnProperty('name') && ast.object.name !== 'Math') {\n          return this.astMemberExpressionUnroll(ast.property);\n        }\n\n        return (\n          this.astMemberExpressionUnroll(ast.object) +\n          '.' +\n          this.astMemberExpressionUnroll(ast.property)\n        );\n      }\n    }\n\n    if (ast.hasOwnProperty('expressions')) {\n      const firstExpression = ast.expressions[0];\n      if (firstExpression.type === 'Literal' && firstExpression.value === 0 && ast.expressions.length === 2) {\n        return this.astMemberExpressionUnroll(ast.expressions[1]);\n      }\n    }\n\n    throw this.astErrorOutput('Unknown astMemberExpressionUnroll', ast);\n  }\n\n  getJsAST(inParser) {\n    if (this.ast) {\n      return this.ast;\n    }\n    if (typeof this.source === 'object') {\n      this.traceFunctionAST(this.source);\n      return this.ast = this.source;\n    }\n\n    inParser = inParser || acorn;\n    if (inParser === null) {\n      throw new Error('Missing JS to AST parser');\n    }\n\n    const ast = Object.freeze(inParser.parse(`const parser_${ this.name } = ${ this.source };`, {\n      locations: true\n    }));\n    const functionAST = ast.body[0].declarations[0].init;\n    this.traceFunctionAST(functionAST);\n\n    if (!ast) {\n      throw new Error('Failed to parse JS code');\n    }\n\n    return this.ast = functionAST;\n  }\n\n  traceFunctionAST(ast) {\n    const { contexts, declarations, functions, identifiers, functionCalls } = new FunctionTracer(ast);\n    this.contexts = contexts;\n    this.identifiers = identifiers;\n    this.functionCalls = functionCalls;\n    this.functions = functions;\n    for (let i = 0; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      const { ast, inForLoopInit, inForLoopTest } = declaration;\n      const { init } = ast;\n      const dependencies = this.getDependencies(init);\n      let valueType = null;\n\n      if (inForLoopInit && inForLoopTest) {\n        valueType = 'Integer';\n      } else {\n        if (init) {\n          const realType = this.getType(init);\n          switch (realType) {\n            case 'Integer':\n            case 'Float':\n            case 'Number':\n              if (init.type === 'MemberExpression') {\n                valueType = realType;\n              } else {\n                valueType = 'Number';\n              }\n              break;\n            case 'LiteralInteger':\n              valueType = 'Number';\n              break;\n            default:\n              valueType = realType;\n          }\n        }\n      }\n      declaration.valueType = valueType;\n      declaration.dependencies = dependencies;\n      declaration.isSafe = this.isSafeDependencies(dependencies);\n    }\n\n    for (let i = 0; i < functions.length; i++) {\n      this.onNestedFunction(functions[i], this.source);\n    }\n  }\n\n  getDeclaration(ast) {\n    for (let i = 0; i < this.identifiers.length; i++) {\n      const identifier = this.identifiers[i];\n      if (ast === identifier.ast) {\n        return identifier.declaration;\n      }\n    }\n    return null;\n  }\n\n  getVariableType(ast) {\n    if (ast.type !== 'Identifier') {\n      throw new Error(`ast of ${ast.type} not \"Identifier\"`);\n    }\n    let type = null;\n    const argumentIndex = this.argumentNames.indexOf(ast.name);\n    if (argumentIndex === -1) {\n      const declaration = this.getDeclaration(ast);\n      if (declaration) {\n        return declaration.valueType;\n      }\n    } else {\n      const argumentType = this.argumentTypes[argumentIndex];\n      if (argumentType) {\n        type = argumentType;\n      }\n    }\n    if (!type && this.strictTypingChecking) {\n      throw new Error(`Declaration of ${name} not found`);\n    }\n    return type;\n  }\n\n  getLookupType(type) {\n    if (!typeLookupMap.hasOwnProperty(type)) {\n      throw new Error(`unknown typeLookupMap ${ type }`);\n    }\n    return typeLookupMap[type];\n  }\n\n  getConstantType(constantName) {\n    if (this.constantTypes[constantName]) {\n      const type = this.constantTypes[constantName];\n      if (type === 'Float') {\n        return 'Number';\n      } else {\n        return type;\n      }\n    }\n    throw new Error(`Type for constant \"${ constantName }\" not declared`);\n  }\n\n  toString() {\n    if (this._string) return this._string;\n    return this._string = this.astGeneric(this.getJsAST(), []).join('').trim();\n  }\n\n  toJSON() {\n    const settings = {\n      source: this.source,\n      name: this.name,\n      constants: this.constants,\n      constantTypes: this.constantTypes,\n      isRootKernel: this.isRootKernel,\n      isSubKernel: this.isSubKernel,\n      debug: this.debug,\n      output: this.output,\n      loopMaxIterations: this.loopMaxIterations,\n      argumentNames: this.argumentNames,\n      argumentTypes: this.argumentTypes,\n      argumentSizes: this.argumentSizes,\n      returnType: this.returnType,\n      leadingReturnStatement: this.leadingReturnStatement,\n      followingReturnStatement: this.followingReturnStatement,\n    };\n\n    return {\n      ast: this.ast,\n      settings\n    };\n  }\n\n  getType(ast) {\n    if (Array.isArray(ast)) {\n      return this.getType(ast[ast.length - 1]);\n    }\n    switch (ast.type) {\n      case 'BlockStatement':\n        return this.getType(ast.body);\n      case 'ArrayExpression':\n        const childType = this.getType(ast.elements[0]);\n        switch (childType) {\n          case 'Array(2)':\n          case 'Array(3)':\n          case 'Array(4)':\n            return `Matrix(${ast.elements.length})`;\n        }\n        return `Array(${ ast.elements.length })`;\n      case 'Literal':\n        const literalKey = this.astKey(ast);\n        if (this.literalTypes[literalKey]) {\n          return this.literalTypes[literalKey];\n        }\n        if (Number.isInteger(ast.value)) {\n          return 'LiteralInteger';\n        } else if (ast.value === true || ast.value === false) {\n          return 'Boolean';\n        } else {\n          return 'Number';\n        }\n        case 'AssignmentExpression':\n          return this.getType(ast.left);\n        case 'CallExpression':\n          if (this.isAstMathFunction(ast)) {\n            return 'Number';\n          }\n          if (!ast.callee || !ast.callee.name) {\n            if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[ast.callee.expressions.length - 1].property.name) {\n              const functionName = ast.callee.expressions[ast.callee.expressions.length - 1].property.name;\n              this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n              return this.lookupReturnType(functionName, ast, this);\n            }\n            if (this.getVariableSignature(ast.callee, true) === 'this.color') {\n              return null;\n            }\n            if (ast.callee.type === 'MemberExpression' && ast.callee.object && ast.callee.property && ast.callee.property.name && ast.arguments) {\n              const functionName = ast.callee.property.name;\n              this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n              return this.lookupReturnType(functionName, ast, this);\n            }\n            throw this.astErrorOutput('Unknown call expression', ast);\n          }\n          if (ast.callee && ast.callee.name) {\n            const functionName = ast.callee.name;\n            this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n            return this.lookupReturnType(functionName, ast, this);\n          }\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\n        case 'LogicalExpression':\n          return 'Boolean';\n        case 'BinaryExpression':\n          switch (ast.operator) {\n            case '%':\n            case '/':\n              if (this.fixIntegerDivisionAccuracy) {\n                return 'Number';\n              } else {\n                break;\n              }\n              case '>':\n              case '<':\n                return 'Boolean';\n              case '&':\n              case '|':\n              case '^':\n              case '<<':\n              case '>>':\n              case '>>>':\n                return 'Integer';\n          }\n          const type = this.getType(ast.left);\n          if (this.isState('skip-literal-correction')) return type;\n          if (type === 'LiteralInteger') {\n            const rightType = this.getType(ast.right);\n            if (rightType === 'LiteralInteger') {\n              if (ast.left.value % 1 === 0) {\n                return 'Integer';\n              } else {\n                return 'Float';\n              }\n            }\n            return rightType;\n          }\n          return typeLookupMap[type] || type;\n        case 'UpdateExpression':\n          return this.getType(ast.argument);\n        case 'UnaryExpression':\n          if (ast.operator === '~') {\n            return 'Integer';\n          }\n          return this.getType(ast.argument);\n        case 'VariableDeclaration': {\n          const declarations = ast.declarations;\n          let lastType;\n          for (let i = 0; i < declarations.length; i++) {\n            const declaration = declarations[i];\n            lastType = this.getType(declaration);\n          }\n          if (!lastType) {\n            throw this.astErrorOutput(`Unable to find type for declaration`, ast);\n          }\n          return lastType;\n        }\n        case 'VariableDeclarator':\n          const declaration = this.getDeclaration(ast.id);\n          if (!declaration) {\n            throw this.astErrorOutput(`Unable to find declarator`, ast);\n          }\n\n          if (!declaration.valueType) {\n            throw this.astErrorOutput(`Unable to find declarator valueType`, ast);\n          }\n\n          return declaration.valueType;\n        case 'Identifier':\n          if (ast.name === 'Infinity') {\n            return 'Number';\n          }\n          if (this.isAstVariable(ast)) {\n            const signature = this.getVariableSignature(ast);\n            if (signature === 'value') {\n              return this.getCheckVariableType(ast);\n            }\n          }\n          const origin = this.findIdentifierOrigin(ast);\n          if (origin && origin.init) {\n            return this.getType(origin.init);\n          }\n          return null;\n        case 'ReturnStatement':\n          return this.getType(ast.argument);\n        case 'MemberExpression':\n          if (this.isAstMathFunction(ast)) {\n            switch (ast.property.name) {\n              case 'ceil':\n                return 'Integer';\n              case 'floor':\n                return 'Integer';\n              case 'round':\n                return 'Integer';\n            }\n            return 'Number';\n          }\n          if (this.isAstVariable(ast)) {\n            const variableSignature = this.getVariableSignature(ast);\n            switch (variableSignature) {\n              case 'value[]':\n                return this.getLookupType(this.getCheckVariableType(ast.object));\n              case 'value[][]':\n                return this.getLookupType(this.getCheckVariableType(ast.object.object));\n              case 'value[][][]':\n                return this.getLookupType(this.getCheckVariableType(ast.object.object.object));\n              case 'value[][][][]':\n                return this.getLookupType(this.getCheckVariableType(ast.object.object.object.object));\n              case 'value.thread.value':\n              case 'this.thread.value':\n                return 'Integer';\n              case 'this.output.value':\n                return this.dynamicOutput ? 'Integer' : 'LiteralInteger';\n              case 'this.constants.value':\n                return this.getConstantType(ast.property.name);\n              case 'this.constants.value[]':\n                return this.getLookupType(this.getConstantType(ast.object.property.name));\n              case 'this.constants.value[][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.property.name));\n              case 'this.constants.value[][][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.object.property.name));\n              case 'this.constants.value[][][][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.object.object.property.name));\n              case 'fn()[]':\n              case 'fn()[][]':\n              case 'fn()[][][]':\n                return this.getLookupType(this.getType(ast.object));\n              case 'value.value':\n                if (this.isAstMathVariable(ast)) {\n                  return 'Number';\n                }\n                switch (ast.property.name) {\n                  case 'r':\n                  case 'g':\n                  case 'b':\n                  case 'a':\n                    return this.getLookupType(this.getCheckVariableType(ast.object));\n                }\n                case '[][]':\n                  return 'Number';\n            }\n            throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n          }\n          throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n        case 'ConditionalExpression':\n          return this.getType(ast.consequent);\n        case 'FunctionDeclaration':\n        case 'FunctionExpression':\n          const lastReturn = this.findLastReturn(ast.body);\n          if (lastReturn) {\n            return this.getType(lastReturn);\n          }\n          return null;\n        case 'IfStatement':\n          return this.getType(ast.consequent);\n        case 'SequenceExpression':\n          return this.getType(ast.expressions[ast.expressions.length - 1]);\n        default:\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\n    }\n  }\n\n  getCheckVariableType(ast) {\n    const type = this.getVariableType(ast);\n    if (!type) {\n      throw this.astErrorOutput(`${ast.type} is not defined`, ast);\n    }\n    return type;\n  }\n\n  inferArgumentTypesIfNeeded(functionName, args) {\n    for (let i = 0; i < args.length; i++) {\n      if (!this.needsArgumentType(functionName, i)) continue;\n      const type = this.getType(args[i]);\n      if (!type) {\n        throw this.astErrorOutput(`Unable to infer argument ${i}`, args[i]);\n      }\n      this.assignArgumentType(functionName, i, type);\n    }\n  }\n\n  isAstMathVariable(ast) {\n    const mathProperties = [\n      'E',\n      'PI',\n      'SQRT2',\n      'SQRT1_2',\n      'LN2',\n      'LN10',\n      'LOG2E',\n      'LOG10E',\n    ];\n    return ast.type === 'MemberExpression' &&\n      ast.object && ast.object.type === 'Identifier' &&\n      ast.object.name === 'Math' &&\n      ast.property &&\n      ast.property.type === 'Identifier' &&\n      mathProperties.indexOf(ast.property.name) > -1;\n  }\n\n  isAstMathFunction(ast) {\n    const mathFunctions = [\n      'abs',\n      'acos',\n      'acosh',\n      'asin',\n      'asinh',\n      'atan',\n      'atan2',\n      'atanh',\n      'cbrt',\n      'ceil',\n      'clz32',\n      'cos',\n      'cosh',\n      'expm1',\n      'exp',\n      'floor',\n      'fround',\n      'imul',\n      'log',\n      'log2',\n      'log10',\n      'log1p',\n      'max',\n      'min',\n      'pow',\n      'random',\n      'round',\n      'sign',\n      'sin',\n      'sinh',\n      'sqrt',\n      'tan',\n      'tanh',\n      'trunc',\n    ];\n    return ast.type === 'CallExpression' &&\n      ast.callee &&\n      ast.callee.type === 'MemberExpression' &&\n      ast.callee.object &&\n      ast.callee.object.type === 'Identifier' &&\n      ast.callee.object.name === 'Math' &&\n      ast.callee.property &&\n      ast.callee.property.type === 'Identifier' &&\n      mathFunctions.indexOf(ast.callee.property.name) > -1;\n  }\n\n  isAstVariable(ast) {\n    return ast.type === 'Identifier' || ast.type === 'MemberExpression';\n  }\n\n  isSafe(ast) {\n    return this.isSafeDependencies(this.getDependencies(ast));\n  }\n\n  isSafeDependencies(dependencies) {\n    return dependencies && dependencies.every ? dependencies.every(dependency => dependency.isSafe) : true;\n  }\n\n  getDependencies(ast, dependencies, isNotSafe) {\n    if (!dependencies) {\n      dependencies = [];\n    }\n    if (!ast) return null;\n    if (Array.isArray(ast)) {\n      for (let i = 0; i < ast.length; i++) {\n        this.getDependencies(ast[i], dependencies, isNotSafe);\n      }\n      return dependencies;\n    }\n    switch (ast.type) {\n      case 'AssignmentExpression':\n        this.getDependencies(ast.left, dependencies, isNotSafe);\n        this.getDependencies(ast.right, dependencies, isNotSafe);\n        return dependencies;\n      case 'ConditionalExpression':\n        this.getDependencies(ast.test, dependencies, isNotSafe);\n        this.getDependencies(ast.alternate, dependencies, isNotSafe);\n        this.getDependencies(ast.consequent, dependencies, isNotSafe);\n        return dependencies;\n      case 'Literal':\n        dependencies.push({\n          origin: 'literal',\n          value: ast.value,\n          isSafe: isNotSafe === true ? false : ast.value > -Infinity && ast.value < Infinity && !isNaN(ast.value)\n        });\n        break;\n      case 'VariableDeclarator':\n        return this.getDependencies(ast.init, dependencies, isNotSafe);\n      case 'Identifier':\n        const declaration = this.getDeclaration(ast);\n        if (declaration) {\n          dependencies.push({\n            name: ast.name,\n            origin: 'declaration',\n            isSafe: isNotSafe ? false : this.isSafeDependencies(declaration.dependencies),\n          });\n        } else if (this.argumentNames.indexOf(ast.name) > -1) {\n          dependencies.push({\n            name: ast.name,\n            origin: 'argument',\n            isSafe: false,\n          });\n        } else if (this.strictTypingChecking) {\n          throw new Error(`Cannot find identifier origin \"${ast.name}\"`);\n        }\n        break;\n      case 'FunctionDeclaration':\n        return this.getDependencies(ast.body.body[ast.body.body.length - 1], dependencies, isNotSafe);\n      case 'ReturnStatement':\n        return this.getDependencies(ast.argument, dependencies);\n      case 'BinaryExpression':\n      case 'LogicalExpression':\n        isNotSafe = (ast.operator === '/' || ast.operator === '*');\n        this.getDependencies(ast.left, dependencies, isNotSafe);\n        this.getDependencies(ast.right, dependencies, isNotSafe);\n        return dependencies;\n      case 'UnaryExpression':\n      case 'UpdateExpression':\n        return this.getDependencies(ast.argument, dependencies, isNotSafe);\n      case 'VariableDeclaration':\n        return this.getDependencies(ast.declarations, dependencies, isNotSafe);\n      case 'ArrayExpression':\n        dependencies.push({\n          origin: 'declaration',\n          isSafe: true,\n        });\n        return dependencies;\n      case 'CallExpression':\n        dependencies.push({\n          origin: 'function',\n          isSafe: true,\n        });\n        return dependencies;\n      case 'MemberExpression':\n        const details = this.getMemberExpressionDetails(ast);\n        switch (details.signature) {\n          case 'value[]':\n            this.getDependencies(ast.object, dependencies, isNotSafe);\n            break;\n          case 'value[][]':\n            this.getDependencies(ast.object.object, dependencies, isNotSafe);\n            break;\n          case 'value[][][]':\n            this.getDependencies(ast.object.object.object, dependencies, isNotSafe);\n            break;\n          case 'this.output.value':\n            if (this.dynamicOutput) {\n              dependencies.push({\n                name: details.name,\n                origin: 'output',\n                isSafe: false,\n              });\n            }\n            break;\n        }\n        if (details) {\n          if (details.property) {\n            this.getDependencies(details.property, dependencies, isNotSafe);\n          }\n          if (details.xProperty) {\n            this.getDependencies(details.xProperty, dependencies, isNotSafe);\n          }\n          if (details.yProperty) {\n            this.getDependencies(details.yProperty, dependencies, isNotSafe);\n          }\n          if (details.zProperty) {\n            this.getDependencies(details.zProperty, dependencies, isNotSafe);\n          }\n          return dependencies;\n        }\n        case 'SequenceExpression':\n          return this.getDependencies(ast.expressions, dependencies, isNotSafe);\n        default:\n          throw this.astErrorOutput(`Unhandled type ${ ast.type } in getDependencies`, ast);\n    }\n    return dependencies;\n  }\n\n  getVariableSignature(ast, returnRawValue) {\n    if (!this.isAstVariable(ast)) {\n      throw new Error(`ast of type \"${ ast.type }\" is not a variable signature`);\n    }\n    if (ast.type === 'Identifier') {\n      return 'value';\n    }\n    const signature = [];\n    while (true) {\n      if (!ast) break;\n      if (ast.computed) {\n        signature.push('[]');\n      } else if (ast.type === 'ThisExpression') {\n        signature.unshift('this');\n      } else if (ast.property && ast.property.name) {\n        if (\n          ast.property.name === 'x' ||\n          ast.property.name === 'y' ||\n          ast.property.name === 'z'\n        ) {\n          signature.unshift(returnRawValue ? '.' + ast.property.name : '.value');\n        } else if (\n          ast.property.name === 'constants' ||\n          ast.property.name === 'thread' ||\n          ast.property.name === 'output'\n        ) {\n          signature.unshift('.' + ast.property.name);\n        } else {\n          signature.unshift(returnRawValue ? '.' + ast.property.name : '.value');\n        }\n      } else if (ast.name) {\n        signature.unshift(returnRawValue ? ast.name : 'value');\n      } else if (ast.callee && ast.callee.name) {\n        signature.unshift(returnRawValue ? ast.callee.name + '()' : 'fn()');\n      } else if (ast.elements) {\n        signature.unshift('[]');\n      } else {\n        signature.unshift('unknown');\n      }\n      ast = ast.object;\n    }\n\n    const signatureString = signature.join('');\n    if (returnRawValue) {\n      return signatureString;\n    }\n\n    const allowedExpressions = [\n      'value',\n      'value[]',\n      'value[][]',\n      'value[][][]',\n      'value[][][][]',\n      'value.value',\n      'value.thread.value',\n      'this.thread.value',\n      'this.output.value',\n      'this.constants.value',\n      'this.constants.value[]',\n      'this.constants.value[][]',\n      'this.constants.value[][][]',\n      'this.constants.value[][][][]',\n      'fn()[]',\n      'fn()[][]',\n      'fn()[][][]',\n      '[][]',\n    ];\n    if (allowedExpressions.indexOf(signatureString) > -1) {\n      return signatureString;\n    }\n    return null;\n  }\n\n  build() {\n    return this.toString().length > 0;\n  }\n\n  astGeneric(ast, retArr) {\n    if (ast === null) {\n      throw this.astErrorOutput('NULL ast', ast);\n    } else {\n      if (Array.isArray(ast)) {\n        for (let i = 0; i < ast.length; i++) {\n          this.astGeneric(ast[i], retArr);\n        }\n        return retArr;\n      }\n\n      switch (ast.type) {\n        case 'FunctionDeclaration':\n          return this.astFunctionDeclaration(ast, retArr);\n        case 'FunctionExpression':\n          return this.astFunctionExpression(ast, retArr);\n        case 'ReturnStatement':\n          return this.astReturnStatement(ast, retArr);\n        case 'Literal':\n          return this.astLiteral(ast, retArr);\n        case 'BinaryExpression':\n          return this.astBinaryExpression(ast, retArr);\n        case 'Identifier':\n          return this.astIdentifierExpression(ast, retArr);\n        case 'AssignmentExpression':\n          return this.astAssignmentExpression(ast, retArr);\n        case 'ExpressionStatement':\n          return this.astExpressionStatement(ast, retArr);\n        case 'EmptyStatement':\n          return this.astEmptyStatement(ast, retArr);\n        case 'BlockStatement':\n          return this.astBlockStatement(ast, retArr);\n        case 'IfStatement':\n          return this.astIfStatement(ast, retArr);\n        case 'SwitchStatement':\n          return this.astSwitchStatement(ast, retArr);\n        case 'BreakStatement':\n          return this.astBreakStatement(ast, retArr);\n        case 'ContinueStatement':\n          return this.astContinueStatement(ast, retArr);\n        case 'ForStatement':\n          return this.astForStatement(ast, retArr);\n        case 'WhileStatement':\n          return this.astWhileStatement(ast, retArr);\n        case 'DoWhileStatement':\n          return this.astDoWhileStatement(ast, retArr);\n        case 'VariableDeclaration':\n          return this.astVariableDeclaration(ast, retArr);\n        case 'VariableDeclarator':\n          return this.astVariableDeclarator(ast, retArr);\n        case 'ThisExpression':\n          return this.astThisExpression(ast, retArr);\n        case 'SequenceExpression':\n          return this.astSequenceExpression(ast, retArr);\n        case 'UnaryExpression':\n          return this.astUnaryExpression(ast, retArr);\n        case 'UpdateExpression':\n          return this.astUpdateExpression(ast, retArr);\n        case 'LogicalExpression':\n          return this.astLogicalExpression(ast, retArr);\n        case 'MemberExpression':\n          return this.astMemberExpression(ast, retArr);\n        case 'CallExpression':\n          return this.astCallExpression(ast, retArr);\n        case 'ArrayExpression':\n          return this.astArrayExpression(ast, retArr);\n        case 'DebuggerStatement':\n          return this.astDebuggerStatement(ast, retArr);\n        case 'ConditionalExpression':\n          return this.astConditionalExpression(ast, retArr);\n      }\n\n      throw this.astErrorOutput('Unknown ast type : ' + ast.type, ast);\n    }\n  }\n  astErrorOutput(error, ast) {\n    if (typeof this.source !== 'string') {\n      return new Error(error);\n    }\n\n    const debugString = utils.getAstString(this.source, ast);\n    const leadingSource = this.source.substr(ast.start);\n    const splitLines = leadingSource.split(/\\n/);\n    const lineBefore = splitLines.length > 0 ? splitLines[splitLines.length - 1] : 0;\n    return new Error(`${error} on line ${ splitLines.length }, position ${ lineBefore.length }:\\n ${ debugString }`);\n  }\n\n  astDebuggerStatement(arrNode, retArr) {\n    return retArr;\n  }\n\n  astConditionalExpression(ast, retArr) {\n    if (ast.type !== 'ConditionalExpression') {\n      throw this.astErrorOutput('Not a conditional expression', ast);\n    }\n    retArr.push('(');\n    this.astGeneric(ast.test, retArr);\n    retArr.push('?');\n    this.astGeneric(ast.consequent, retArr);\n    retArr.push(':');\n    this.astGeneric(ast.alternate, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astFunction(ast, retArr) {\n    throw new Error(`\"astFunction\" not defined on ${ this.constructor.name }`);\n  }\n\n  astFunctionDeclaration(ast, retArr) {\n    if (this.isChildFunction(ast)) {\n      return retArr;\n    }\n    return this.astFunction(ast, retArr);\n  }\n  astFunctionExpression(ast, retArr) {\n    if (this.isChildFunction(ast)) {\n      return retArr;\n    }\n    return this.astFunction(ast, retArr);\n  }\n  isChildFunction(ast) {\n    for (let i = 0; i < this.functions.length; i++) {\n      if (this.functions[i] === ast) {\n        return true;\n      }\n    }\n    return false;\n  }\n  astReturnStatement(ast, retArr) {\n    return retArr;\n  }\n  astLiteral(ast, retArr) {\n    this.literalTypes[this.astKey(ast)] = 'Number';\n    return retArr;\n  }\n  astBinaryExpression(ast, retArr) {\n    return retArr;\n  }\n  astIdentifierExpression(ast, retArr) {\n    return retArr;\n  }\n  astAssignmentExpression(ast, retArr) {\n    return retArr;\n  }\n  astExpressionStatement(esNode, retArr) {\n    this.astGeneric(esNode.expression, retArr);\n    retArr.push(';');\n    return retArr;\n  }\n  astEmptyStatement(eNode, retArr) {\n    return retArr;\n  }\n  astBlockStatement(ast, retArr) {\n    return retArr;\n  }\n  astIfStatement(ast, retArr) {\n    return retArr;\n  }\n  astSwitchStatement(ast, retArr) {\n    return retArr;\n  }\n  astBreakStatement(brNode, retArr) {\n    retArr.push('break;');\n    return retArr;\n  }\n  astContinueStatement(crNode, retArr) {\n    retArr.push('continue;\\n');\n    return retArr;\n  }\n  astForStatement(ast, retArr) {\n    return retArr;\n  }\n  astWhileStatement(ast, retArr) {\n    return retArr;\n  }\n  astDoWhileStatement(ast, retArr) {\n    return retArr;\n  }\n  astVariableDeclarator(iVarDecNode, retArr) {\n    this.astGeneric(iVarDecNode.id, retArr);\n    if (iVarDecNode.init !== null) {\n      retArr.push('=');\n      this.astGeneric(iVarDecNode.init, retArr);\n    }\n    return retArr;\n  }\n  astThisExpression(ast, retArr) {\n    return retArr;\n  }\n  astSequenceExpression(sNode, retArr) {\n    const { expressions } = sNode;\n    const sequenceResult = [];\n    for (let i = 0; i < expressions.length; i++) {\n      const expression = expressions[i];\n      const expressionResult = [];\n      this.astGeneric(expression, expressionResult);\n      sequenceResult.push(expressionResult.join(''));\n    }\n    if (sequenceResult.length > 1) {\n      retArr.push('(', sequenceResult.join(','), ')');\n    } else {\n      retArr.push(sequenceResult[0]);\n    }\n    return retArr;\n  }\n  astUnaryExpression(uNode, retArr) {\n    const unaryResult = this.checkAndUpconvertBitwiseUnary(uNode, retArr);\n    if (unaryResult) {\n      return retArr;\n    }\n\n    if (uNode.prefix) {\n      retArr.push(uNode.operator);\n      this.astGeneric(uNode.argument, retArr);\n    } else {\n      this.astGeneric(uNode.argument, retArr);\n      retArr.push(uNode.operator);\n    }\n\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseUnary(uNode, retArr) {}\n\n  astUpdateExpression(uNode, retArr) {\n    if (uNode.prefix) {\n      retArr.push(uNode.operator);\n      this.astGeneric(uNode.argument, retArr);\n    } else {\n      this.astGeneric(uNode.argument, retArr);\n      retArr.push(uNode.operator);\n    }\n\n    return retArr;\n  }\n  astLogicalExpression(logNode, retArr) {\n    retArr.push('(');\n    this.astGeneric(logNode.left, retArr);\n    retArr.push(logNode.operator);\n    this.astGeneric(logNode.right, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n  astMemberExpression(ast, retArr) {\n    return retArr;\n  }\n  astCallExpression(ast, retArr) {\n    return retArr;\n  }\n  astArrayExpression(ast, retArr) {\n    return retArr;\n  }\n\n  getMemberExpressionDetails(ast) {\n    if (ast.type !== 'MemberExpression') {\n      throw this.astErrorOutput(`Expression ${ ast.type } not a MemberExpression`, ast);\n    }\n    let name = null;\n    let type = null;\n    const variableSignature = this.getVariableSignature(ast);\n    switch (variableSignature) {\n      case 'value':\n        return null;\n      case 'value.thread.value':\n      case 'this.thread.value':\n      case 'this.output.value':\n        return {\n          signature: variableSignature,\n            type: 'Integer',\n            name: ast.property.name\n        };\n      case 'value[]':\n        if (typeof ast.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object),\n            xProperty: ast.property\n        };\n      case 'value[][]':\n        if (typeof ast.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object),\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value[][][]':\n        if (typeof ast.object.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object.object),\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value[][][][]':\n        if (typeof ast.object.object.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object.object.object),\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value.value':\n        if (typeof ast.property.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        if (this.isAstMathVariable(ast)) {\n          name = ast.property.name;\n          return {\n            name,\n            origin: 'Math',\n            type: 'Number',\n            signature: variableSignature,\n          };\n        }\n        switch (ast.property.name) {\n          case 'r':\n          case 'g':\n          case 'b':\n          case 'a':\n            name = ast.object.name;\n            return {\n              name,\n              property: ast.property.name,\n                origin: 'user',\n                signature: variableSignature,\n                type: 'Number'\n            };\n          default:\n            throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        case 'this.constants.value':\n          if (typeof ast.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n              signature: variableSignature,\n          };\n        case 'this.constants.value[]':\n          if (typeof ast.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n              signature: variableSignature,\n              xProperty: ast.property,\n          };\n        case 'this.constants.value[][]': {\n          if (typeof ast.object.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n            signature: variableSignature,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n          };\n        }\n        case 'this.constants.value[][][]': {\n          if (typeof ast.object.object.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.object.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n            signature: variableSignature,\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n          };\n        }\n        case 'fn()[]':\n        case 'fn()[][]':\n        case '[][]':\n          return {\n            signature: variableSignature,\n              property: ast.property,\n          };\n        default:\n          throw this.astErrorOutput('Unexpected expression', ast);\n    }\n  }\n\n  findIdentifierOrigin(astToFind) {\n    const stack = [this.ast];\n\n    while (stack.length > 0) {\n      const atNode = stack[0];\n      if (atNode.type === 'VariableDeclarator' && atNode.id && atNode.id.name && atNode.id.name === astToFind.name) {\n        return atNode;\n      }\n      stack.shift();\n      if (atNode.argument) {\n        stack.push(atNode.argument);\n      } else if (atNode.body) {\n        stack.push(atNode.body);\n      } else if (atNode.declarations) {\n        stack.push(atNode.declarations);\n      } else if (Array.isArray(atNode)) {\n        for (let i = 0; i < atNode.length; i++) {\n          stack.push(atNode[i]);\n        }\n      }\n    }\n    return null;\n  }\n\n  findLastReturn(ast) {\n    const stack = [ast || this.ast];\n\n    while (stack.length > 0) {\n      const atNode = stack.pop();\n      if (atNode.type === 'ReturnStatement') {\n        return atNode;\n      }\n      if (atNode.type === 'FunctionDeclaration') {\n        continue;\n      }\n      if (atNode.argument) {\n        stack.push(atNode.argument);\n      } else if (atNode.body) {\n        stack.push(atNode.body);\n      } else if (atNode.declarations) {\n        stack.push(atNode.declarations);\n      } else if (Array.isArray(atNode)) {\n        for (let i = 0; i < atNode.length; i++) {\n          stack.push(atNode[i]);\n        }\n      } else if (atNode.consequent) {\n        stack.push(atNode.consequent);\n      } else if (atNode.cases) {\n        stack.push(atNode.cases);\n      }\n    }\n    return null;\n  }\n\n  getInternalVariableName(name) {\n    if (!this._internalVariableNames.hasOwnProperty(name)) {\n      this._internalVariableNames[name] = 0;\n    }\n    this._internalVariableNames[name]++;\n    if (this._internalVariableNames[name] === 1) {\n      return name;\n    }\n    return name + this._internalVariableNames[name];\n  }\n\n  astKey(ast, separator = ',') {\n    if (!ast.start || !ast.end) throw new Error('AST start and end needed');\n    return `${ast.start}${separator}${ast.end}`;\n  }\n}\n\nconst typeLookupMap = {\n  'Number': 'Number',\n  'Float': 'Float',\n  'Integer': 'Integer',\n  'Array': 'Number',\n  'Array(2)': 'Number',\n  'Array(3)': 'Number',\n  'Array(4)': 'Number',\n  'Matrix(2)': 'Number',\n  'Matrix(3)': 'Number',\n  'Matrix(4)': 'Number',\n  'Array2D': 'Number',\n  'Array3D': 'Number',\n  'Input': 'Number',\n  'HTMLCanvas': 'Array(4)',\n  'OffscreenCanvas': 'Array(4)',\n  'HTMLImage': 'Array(4)',\n  'ImageBitmap': 'Array(4)',\n  'ImageData': 'Array(4)',\n  'HTMLVideo': 'Array(4)',\n  'HTMLImageArray': 'Array(4)',\n  'NumberTexture': 'Number',\n  'MemoryOptimizedNumberTexture': 'Number',\n  'Array1D(2)': 'Array(2)',\n  'Array1D(3)': 'Array(3)',\n  'Array1D(4)': 'Array(4)',\n  'Array2D(2)': 'Array(2)',\n  'Array2D(3)': 'Array(3)',\n  'Array2D(4)': 'Array(4)',\n  'Array3D(2)': 'Array(2)',\n  'Array3D(3)': 'Array(3)',\n  'Array3D(4)': 'Array(4)',\n  'ArrayTexture(1)': 'Number',\n  'ArrayTexture(2)': 'Array(2)',\n  'ArrayTexture(3)': 'Array(3)',\n  'ArrayTexture(4)': 'Array(4)',\n};\n\nmodule.exports = {\n  FunctionNode\n};\n},{\"../utils\":114,\"./function-tracer\":11,\"acorn\":1}],11:[function(require,module,exports){\nconst { utils } = require('../utils');\n\nfunction last(array) {\n  return array.length > 0 ? array[array.length - 1] : null;\n}\n\nconst states = {\n  trackIdentifiers: 'trackIdentifiers',\n  memberExpression: 'memberExpression',\n  inForLoopInit: 'inForLoopInit'\n};\n\nclass FunctionTracer {\n  constructor(ast) {\n    this.runningContexts = [];\n    this.functionContexts = [];\n    this.contexts = [];\n    this.functionCalls = [];\n    this.declarations = [];\n    this.identifiers = [];\n    this.functions = [];\n    this.returnStatements = [];\n    this.trackedIdentifiers = null;\n    this.states = [];\n    this.newFunctionContext();\n    this.scan(ast);\n  }\n\n  isState(state) {\n    return this.states[this.states.length - 1] === state;\n  }\n\n  hasState(state) {\n    return this.states.indexOf(state) > -1;\n  }\n\n  pushState(state) {\n    this.states.push(state);\n  }\n\n  popState(state) {\n    if (this.isState(state)) {\n      this.states.pop();\n    } else {\n      throw new Error(`Cannot pop the non-active state \"${state}\"`);\n    }\n  }\n\n  get currentFunctionContext() {\n    return last(this.functionContexts);\n  }\n\n  get currentContext() {\n    return last(this.runningContexts);\n  }\n\n  newFunctionContext() {\n    const newContext = { '@contextType': 'function' };\n    this.contexts.push(newContext);\n    this.functionContexts.push(newContext);\n  }\n\n  newContext(run) {\n    const newContext = Object.assign({ '@contextType': 'const/let' }, this.currentContext);\n    this.contexts.push(newContext);\n    this.runningContexts.push(newContext);\n    run();\n    const { currentFunctionContext } = this;\n    for (const p in currentFunctionContext) {\n      if (!currentFunctionContext.hasOwnProperty(p) || newContext.hasOwnProperty(p)) continue;\n      newContext[p] = currentFunctionContext[p];\n    }\n    this.runningContexts.pop();\n    return newContext;\n  }\n\n  useFunctionContext(run) {\n    const functionContext = last(this.functionContexts);\n    this.runningContexts.push(functionContext);\n    run();\n    this.runningContexts.pop();\n  }\n\n  getIdentifiers(run) {\n    const trackedIdentifiers = this.trackedIdentifiers = [];\n    this.pushState(states.trackIdentifiers);\n    run();\n    this.trackedIdentifiers = null;\n    this.popState(states.trackIdentifiers);\n    return trackedIdentifiers;\n  }\n\n  getDeclaration(name) {\n    const { currentContext, currentFunctionContext, runningContexts } = this;\n    const declaration = currentContext[name] || currentFunctionContext[name] || null;\n\n    if (\n      !declaration &&\n      currentContext === currentFunctionContext &&\n      runningContexts.length > 0\n    ) {\n      const previousRunningContext = runningContexts[runningContexts.length - 2];\n      if (previousRunningContext[name]) {\n        return previousRunningContext[name];\n      }\n    }\n\n    return declaration;\n  }\n\n  scan(ast) {\n    if (!ast) return;\n    if (Array.isArray(ast)) {\n      for (let i = 0; i < ast.length; i++) {\n        this.scan(ast[i]);\n      }\n      return;\n    }\n    switch (ast.type) {\n      case 'Program':\n        this.useFunctionContext(() => {\n          this.scan(ast.body);\n        });\n        break;\n      case 'BlockStatement':\n        this.newContext(() => {\n          this.scan(ast.body);\n        });\n        break;\n      case 'AssignmentExpression':\n      case 'LogicalExpression':\n        this.scan(ast.left);\n        this.scan(ast.right);\n        break;\n      case 'BinaryExpression':\n        this.scan(ast.left);\n        this.scan(ast.right);\n        break;\n      case 'UpdateExpression':\n        if (ast.operator === '++') {\n          const declaration = this.getDeclaration(ast.argument.name);\n          if (declaration) {\n            declaration.suggestedType = 'Integer';\n          }\n        }\n        this.scan(ast.argument);\n        break;\n      case 'UnaryExpression':\n        this.scan(ast.argument);\n        break;\n      case 'VariableDeclaration':\n        if (ast.kind === 'var') {\n          this.useFunctionContext(() => {\n            ast.declarations = utils.normalizeDeclarations(ast);\n            this.scan(ast.declarations);\n          });\n        } else {\n          ast.declarations = utils.normalizeDeclarations(ast);\n          this.scan(ast.declarations);\n        }\n        break;\n      case 'VariableDeclarator': {\n        const { currentContext } = this;\n        const inForLoopInit = this.hasState(states.inForLoopInit);\n        const declaration = {\n          ast: ast,\n          context: currentContext,\n          name: ast.id.name,\n          origin: 'declaration',\n          inForLoopInit,\n          inForLoopTest: null,\n          assignable: currentContext === this.currentFunctionContext || (!inForLoopInit && !currentContext.hasOwnProperty(ast.id.name)),\n          suggestedType: null,\n          valueType: null,\n          dependencies: null,\n          isSafe: null,\n        };\n        if (!currentContext[ast.id.name]) {\n          currentContext[ast.id.name] = declaration;\n        }\n        this.declarations.push(declaration);\n        this.scan(ast.id);\n        this.scan(ast.init);\n        break;\n      }\n      case 'FunctionExpression':\n      case 'FunctionDeclaration':\n        if (this.runningContexts.length === 0) {\n          this.scan(ast.body);\n        } else {\n          this.functions.push(ast);\n        }\n        break;\n      case 'IfStatement':\n        this.scan(ast.test);\n        this.scan(ast.consequent);\n        if (ast.alternate) this.scan(ast.alternate);\n        break;\n      case 'ForStatement': {\n        let testIdentifiers;\n        const context = this.newContext(() => {\n          this.pushState(states.inForLoopInit);\n          this.scan(ast.init);\n          this.popState(states.inForLoopInit);\n\n          testIdentifiers = this.getIdentifiers(() => {\n            this.scan(ast.test);\n          });\n\n          this.scan(ast.update);\n          this.newContext(() => {\n            this.scan(ast.body);\n          });\n        });\n\n        if (testIdentifiers) {\n          for (const p in context) {\n            if (p === '@contextType') continue;\n            if (testIdentifiers.indexOf(p) > -1) {\n              context[p].inForLoopTest = true;\n            }\n          }\n        }\n        break;\n      }\n      case 'DoWhileStatement':\n      case 'WhileStatement':\n        this.newContext(() => {\n          this.scan(ast.body);\n          this.scan(ast.test);\n        });\n        break;\n      case 'Identifier': {\n        if (this.isState(states.trackIdentifiers)) {\n          this.trackedIdentifiers.push(ast.name);\n        }\n        this.identifiers.push({\n          context: this.currentContext,\n          declaration: this.getDeclaration(ast.name),\n          ast,\n        });\n        break;\n      }\n      case 'ReturnStatement':\n        this.returnStatements.push(ast);\n        this.scan(ast.argument);\n        break;\n      case 'MemberExpression':\n        this.pushState(states.memberExpression);\n        this.scan(ast.object);\n        this.scan(ast.property);\n        this.popState(states.memberExpression);\n        break;\n      case 'ExpressionStatement':\n        this.scan(ast.expression);\n        break;\n      case 'SequenceExpression':\n        this.scan(ast.expressions);\n        break;\n      case 'CallExpression':\n        this.functionCalls.push({\n          context: this.currentContext,\n          ast,\n        });\n        this.scan(ast.arguments);\n        break;\n      case 'ArrayExpression':\n        this.scan(ast.elements);\n        break;\n      case 'ConditionalExpression':\n        this.scan(ast.test);\n        this.scan(ast.alternate);\n        this.scan(ast.consequent);\n        break;\n      case 'SwitchStatement':\n        this.scan(ast.discriminant);\n        this.scan(ast.cases);\n        break;\n      case 'SwitchCase':\n        this.scan(ast.test);\n        this.scan(ast.consequent);\n        break;\n\n      case 'ThisExpression':\n      case 'Literal':\n      case 'DebuggerStatement':\n      case 'EmptyStatement':\n      case 'BreakStatement':\n      case 'ContinueStatement':\n        break;\n      default:\n        throw new Error(`unhandled type \"${ast.type}\"`);\n    }\n  }\n}\n\nmodule.exports = {\n  FunctionTracer,\n};\n},{\"../utils\":114}],12:[function(require,module,exports){\nconst { glWiretap } = require('gl-wiretap');\nconst { utils } = require('../../utils');\n\nfunction toStringWithoutUtils(fn) {\n  return fn.toString()\n    .replace('=>', '')\n    .replace(/^function /, '')\n    .replace(/utils[.]/g, '/*utils.*/');\n}\n\nfunction glKernelString(Kernel, args, originKernel, setupContextString, destroyContextString) {\n  if (!originKernel.built) {\n    originKernel.build.apply(originKernel, args);\n  }\n  args = args ? Array.from(args).map(arg => {\n    switch (typeof arg) {\n      case 'boolean':\n        return new Boolean(arg);\n      case 'number':\n        return new Number(arg);\n      default:\n        return arg;\n    }\n  }) : null;\n  const uploadedValues = [];\n  const postResult = [];\n  const context = glWiretap(originKernel.context, {\n    useTrackablePrimitives: true,\n    onReadPixels: (targetName) => {\n      if (kernel.subKernels) {\n        if (!subKernelsResultVariableSetup) {\n          postResult.push(`    const result = { result: ${getRenderString(targetName, kernel)} };`);\n          subKernelsResultVariableSetup = true;\n        } else {\n          const property = kernel.subKernels[subKernelsResultIndex++].property;\n          postResult.push(`    result${isNaN(property) ? '.' + property : `[${property}]`} = ${getRenderString(targetName, kernel)};`);\n        }\n        if (subKernelsResultIndex === kernel.subKernels.length) {\n          postResult.push('    return result;');\n        }\n        return;\n      }\n      if (targetName) {\n        postResult.push(`    return ${getRenderString(targetName, kernel)};`);\n      } else {\n        postResult.push(`    return null;`);\n      }\n    },\n    onUnrecognizedArgumentLookup: (argument) => {\n      const argumentName = findKernelValue(argument, kernel.kernelArguments, [], context, uploadedValues);\n      if (argumentName) {\n        return argumentName;\n      }\n      const constantName = findKernelValue(argument, kernel.kernelConstants, constants ? Object.keys(constants).map(key => constants[key]) : [], context, uploadedValues);\n      if (constantName) {\n        return constantName;\n      }\n      return null;\n    }\n  });\n  let subKernelsResultVariableSetup = false;\n  let subKernelsResultIndex = 0;\n  const {\n    source,\n    canvas,\n    output,\n    pipeline,\n    graphical,\n    loopMaxIterations,\n    constants,\n    optimizeFloatMemory,\n    precision,\n    fixIntegerDivisionAccuracy,\n    functions,\n    nativeFunctions,\n    subKernels,\n    immutable,\n    argumentTypes,\n    constantTypes,\n    kernelArguments,\n    kernelConstants,\n    tactic,\n  } = originKernel;\n  const kernel = new Kernel(source, {\n    canvas,\n    context,\n    checkContext: false,\n    output,\n    pipeline,\n    graphical,\n    loopMaxIterations,\n    constants,\n    optimizeFloatMemory,\n    precision,\n    fixIntegerDivisionAccuracy,\n    functions,\n    nativeFunctions,\n    subKernels,\n    immutable,\n    argumentTypes,\n    constantTypes,\n    tactic,\n  });\n  let result = [];\n  context.setIndent(2);\n  kernel.build.apply(kernel, args);\n  result.push(context.toString());\n  context.reset();\n\n  kernel.kernelArguments.forEach((kernelArgument, i) => {\n    switch (kernelArgument.type) {\n      case 'Integer':\n      case 'Boolean':\n      case 'Number':\n      case 'Float':\n      case 'Array':\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'HTMLCanvas':\n      case 'HTMLImage':\n      case 'HTMLVideo':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\n        break;\n      case 'HTMLImageArray':\n        for (let imageIndex = 0; imageIndex < args[i].length; imageIndex++) {\n          const arg = args[i];\n          context.insertVariable(`uploadValue_${kernelArgument.name}[${imageIndex}]`, arg[imageIndex]);\n        }\n        break;\n      case 'Input':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\n        break;\n      case 'MemoryOptimizedNumberTexture':\n      case 'NumberTexture':\n      case 'Array1D(2)':\n      case 'Array1D(3)':\n      case 'Array1D(4)':\n      case 'Array2D(2)':\n      case 'Array2D(3)':\n      case 'Array2D(4)':\n      case 'Array3D(2)':\n      case 'Array3D(3)':\n      case 'Array3D(4)':\n      case 'ArrayTexture(1)':\n      case 'ArrayTexture(2)':\n      case 'ArrayTexture(3)':\n      case 'ArrayTexture(4)':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, args[i].texture);\n        break;\n      default:\n        throw new Error(`unhandled kernelArgumentType insertion for glWiretap of type ${kernelArgument.type}`);\n    }\n  });\n  result.push('/** start of injected functions **/');\n  result.push(`function ${toStringWithoutUtils(utils.flattenTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten2dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten3dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten4dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.isArray)}`);\n  if (kernel.renderOutput !== kernel.renderTexture && kernel.formatValues) {\n    result.push(\n      `  const renderOutput = function ${toStringWithoutUtils(kernel.formatValues)};`\n    );\n  }\n  result.push('/** end of injected functions **/');\n  result.push(`  const innerKernel = function (${kernel.kernelArguments.map(kernelArgument => kernelArgument.varName).join(', ')}) {`);\n  context.setIndent(4);\n  kernel.run.apply(kernel, args);\n  if (kernel.renderKernels) {\n    kernel.renderKernels();\n  } else if (kernel.renderOutput) {\n    kernel.renderOutput();\n  }\n  result.push('    /** start setup uploads for kernel values **/');\n  kernel.kernelArguments.forEach(kernelArgument => {\n    result.push('    ' + kernelArgument.getStringValueHandler().split('\\n').join('\\n    '));\n  });\n  result.push('    /** end setup uploads for kernel values **/');\n  result.push(context.toString());\n  if (kernel.renderOutput === kernel.renderTexture) {\n    context.reset();\n    const framebufferName = context.getContextVariableName(kernel.framebuffer);\n    if (kernel.renderKernels) {\n      const results = kernel.renderKernels();\n      const textureName = context.getContextVariableName(kernel.texture.texture);\n      result.push(`    return {\n      result: {\n        texture: ${ textureName },\n        type: '${ results.result.type }',\n        toArray: ${ getToArrayString(results.result, textureName, framebufferName) }\n      },`);\n      const { subKernels, mappedTextures } = kernel;\n      for (let i = 0; i < subKernels.length; i++) {\n        const texture = mappedTextures[i];\n        const subKernel = subKernels[i];\n        const subKernelResult = results[subKernel.property];\n        const subKernelTextureName = context.getContextVariableName(texture.texture);\n        result.push(`\n      ${subKernel.property}: {\n        texture: ${ subKernelTextureName },\n        type: '${ subKernelResult.type }',\n        toArray: ${ getToArrayString(subKernelResult, subKernelTextureName, framebufferName) }\n      },`);\n      }\n      result.push(`    };`);\n    } else {\n      const rendered = kernel.renderOutput();\n      const textureName = context.getContextVariableName(kernel.texture.texture);\n      result.push(`    return {\n        texture: ${ textureName },\n        type: '${ rendered.type }',\n        toArray: ${ getToArrayString(rendered, textureName, framebufferName) }\n      };`);\n    }\n  }\n  result.push(`    ${destroyContextString ? '\\n' + destroyContextString + '    ': ''}`);\n  result.push(postResult.join('\\n'));\n  result.push('  };');\n  if (kernel.graphical) {\n    result.push(getGetPixelsString(kernel));\n    result.push(`  innerKernel.getPixels = getPixels;`);\n  }\n  result.push('  return innerKernel;');\n\n  let constantsUpload = [];\n  kernelConstants.forEach((kernelConstant) => {\n    constantsUpload.push(`${kernelConstant.getStringValueHandler()}`);\n  });\n  return `function kernel(settings) {\n  const { context, constants } = settings;\n  ${constantsUpload.join('')}\n  ${setupContextString ? setupContextString : ''}\n${result.join('\\n')}\n}`;\n}\n\nfunction getRenderString(targetName, kernel) {\n  const readBackValue = kernel.precision === 'single' ? targetName : `new Float32Array(${targetName}.buffer)`;\n  if (kernel.output[2]) {\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]}, ${kernel.output[2]})`;\n  }\n  if (kernel.output[1]) {\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]})`;\n  }\n\n  return `renderOutput(${readBackValue}, ${kernel.output[0]})`;\n}\n\nfunction getGetPixelsString(kernel) {\n  const getPixels = kernel.getPixels.toString();\n  const useFunctionKeyword = !/^function/.test(getPixels);\n  return utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ getPixels }`, {\n    findDependency: (object, name) => {\n      if (object === 'utils') {\n        return `const ${name} = ${utils[name].toString()};`;\n      }\n      return null;\n    },\n    thisLookup: (property) => {\n      if (property === 'context') {\n        return null;\n      }\n      if (kernel.hasOwnProperty(property)) {\n        return JSON.stringify(kernel[property]);\n      }\n      throw new Error(`unhandled thisLookup ${ property }`);\n    }\n  });\n}\n\nfunction getToArrayString(kernelResult, textureName, framebufferName) {\n  const toArray = kernelResult.toArray.toString();\n  const useFunctionKeyword = !/^function/.test(toArray);\n  const flattenedFunctions = utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ toArray }`, {\n    findDependency: (object, name) => {\n      if (object === 'utils') {\n        return `const ${name} = ${utils[name].toString()};`;\n      } else if (object === 'this') {\n        if (name === 'framebuffer') {\n          return '';\n        }\n        return `${useFunctionKeyword ? 'function ' : ''}${kernelResult[name].toString()}`;\n      } else {\n        throw new Error('unhandled fromObject');\n      }\n    },\n    thisLookup: (property, isDeclaration) => {\n      if (property === 'texture') {\n        return textureName;\n      }\n      if (property === 'context') {\n        if (isDeclaration) return null;\n        return 'gl';\n      }\n      if (kernelResult.hasOwnProperty(property)) {\n        return JSON.stringify(kernelResult[property]);\n      }\n      throw new Error(`unhandled thisLookup ${ property }`);\n    }\n  });\n  return `() => {\n  function framebuffer() { return ${framebufferName}; };\n  ${flattenedFunctions}\n  return toArray();\n  }`;\n}\n\nfunction findKernelValue(argument, kernelValues, values, context, uploadedValues) {\n  if (argument === null) return null;\n  if (kernelValues === null) return null;\n  switch (typeof argument) {\n    case 'boolean':\n    case 'number':\n      return null;\n  }\n  if (\n    typeof HTMLImageElement !== 'undefined' &&\n    argument instanceof HTMLImageElement\n  ) {\n    for (let i = 0; i < kernelValues.length; i++) {\n      const kernelValue = kernelValues[i];\n      if (kernelValue.type !== 'HTMLImageArray' && kernelValue) continue;\n      if (kernelValue.uploadValue !== argument) continue;\n      const variableIndex = values[i].indexOf(argument);\n      if (variableIndex === -1) continue;\n      const variableName = `uploadValue_${kernelValue.name}[${variableIndex}]`;\n      context.insertVariable(variableName, argument);\n      return variableName;\n    }\n  }\n\n  for (let i = 0; i < kernelValues.length; i++) {\n    const kernelValue = kernelValues[i];\n    if (argument !== kernelValue.uploadValue) continue;\n    const variable = `uploadValue_${kernelValue.name}`;\n    context.insertVariable(variable, kernelValue);\n    return variable;\n  }\n  return null;\n}\n\nmodule.exports = {\n  glKernelString\n};\n},{\"../../utils\":114,\"gl-wiretap\":3}],13:[function(require,module,exports){\nconst { Kernel } = require('../kernel');\nconst { utils } = require('../../utils');\nconst { GLTextureArray2Float } = require('./texture/array-2-float');\nconst { GLTextureArray2Float2D } = require('./texture/array-2-float-2d');\nconst { GLTextureArray2Float3D } = require('./texture/array-2-float-3d');\nconst { GLTextureArray3Float } = require('./texture/array-3-float');\nconst { GLTextureArray3Float2D } = require('./texture/array-3-float-2d');\nconst { GLTextureArray3Float3D } = require('./texture/array-3-float-3d');\nconst { GLTextureArray4Float } = require('./texture/array-4-float');\nconst { GLTextureArray4Float2D } = require('./texture/array-4-float-2d');\nconst { GLTextureArray4Float3D } = require('./texture/array-4-float-3d');\nconst { GLTextureFloat } = require('./texture/float');\nconst { GLTextureFloat2D } = require('./texture/float-2d');\nconst { GLTextureFloat3D } = require('./texture/float-3d');\nconst { GLTextureMemoryOptimized } = require('./texture/memory-optimized');\nconst { GLTextureMemoryOptimized2D } = require('./texture/memory-optimized-2d');\nconst { GLTextureMemoryOptimized3D } = require('./texture/memory-optimized-3d');\nconst { GLTextureUnsigned } = require('./texture/unsigned');\nconst { GLTextureUnsigned2D } = require('./texture/unsigned-2d');\nconst { GLTextureUnsigned3D } = require('./texture/unsigned-3d');\nconst { GLTextureGraphical } = require('./texture/graphical');\n\nclass GLKernel extends Kernel {\n  static get mode() {\n    return 'gpu';\n  }\n\n  static getIsFloatRead() {\n    const kernelString = `function kernelFunction() {\n      return 1;\n    }`;\n    const kernel = new this(kernelString, {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [1],\n      precision: 'single',\n      returnType: 'Number',\n      tactic: 'speed',\n    });\n    kernel.build();\n    kernel.run();\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return result[0] === 1;\n  }\n\n  static getIsIntegerDivisionAccurate() {\n    function kernelFunction(v1, v2) {\n      return v1[this.thread.x] / v2[this.thread.x];\n    }\n    const kernel = new this(kernelFunction.toString(), {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [2],\n      returnType: 'Number',\n      precision: 'unsigned',\n      tactic: 'speed',\n    });\n    const args = [\n      [6, 6030401],\n      [3, 3991]\n    ];\n    kernel.build.apply(kernel, args);\n    kernel.run.apply(kernel, args);\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return result[0] === 2 && result[1] === 1511;\n  }\n\n  static getIsSpeedTacticSupported() {\n    function kernelFunction(value) {\n      return value[this.thread.x];\n    }\n    const kernel = new this(kernelFunction.toString(), {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [4],\n      returnType: 'Number',\n      precision: 'unsigned',\n      tactic: 'speed',\n    });\n    const args = [\n      [0, 1, 2, 3]\n    ];\n    kernel.build.apply(kernel, args);\n    kernel.run.apply(kernel, args);\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return Math.round(result[0]) === 0 && Math.round(result[1]) === 1 && Math.round(result[2]) === 2 && Math.round(result[3]) === 3;\n  }\n\n  static get testCanvas() {\n    throw new Error(`\"testCanvas\" not defined on ${ this.name }`);\n  }\n\n  static get testContext() {\n    throw new Error(`\"testContext\" not defined on ${ this.name }`);\n  }\n\n  static getFeatures() {\n    const gl = this.testContext;\n    const isDrawBuffers = this.getIsDrawBuffers();\n    return Object.freeze({\n      isFloatRead: this.getIsFloatRead(),\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n      isSpeedTacticSupported: this.getIsSpeedTacticSupported(),\n      isTextureFloat: this.getIsTextureFloat(),\n      isDrawBuffers,\n      kernelMap: isDrawBuffers,\n      channelCount: this.getChannelCount(),\n      maxTextureSize: this.getMaxTextureSize(),\n      lowIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),\n      lowFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),\n      mediumIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT),\n      mediumFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),\n      highIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),\n      highFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT),\n    });\n  }\n\n  static setupFeatureChecks() {\n    throw new Error(`\"setupFeatureChecks\" not defined on ${ this.name }`);\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    return kernel.getVariablePrecisionString() + (argumentTypes.length > 0 ? ':' + argumentTypes.join(',') : '');\n  }\n\n  setFixIntegerDivisionAccuracy(fix) {\n    this.fixIntegerDivisionAccuracy = fix;\n    return this;\n  }\n\n  setPrecision(flag) {\n    this.precision = flag;\n    return this;\n  }\n\n  setFloatTextures(flag) {\n    utils.warnDeprecated('method', 'setFloatTextures', 'setOptimizeFloatMemory');\n    this.floatTextures = flag;\n    return this;\n  }\n\n  static nativeFunctionArguments(source) {\n    const argumentTypes = [];\n    const argumentNames = [];\n    const states = [];\n    const isStartingVariableName = /^[a-zA-Z_]/;\n    const isVariableChar = /[a-zA-Z_0-9]/;\n    let i = 0;\n    let argumentName = null;\n    let argumentType = null;\n    while (i < source.length) {\n      const char = source[i];\n      const nextChar = source[i + 1];\n      const state = states.length > 0 ? states[states.length - 1] : null;\n\n      if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '*') {\n        states.push('MULTI_LINE_COMMENT');\n        i += 2;\n        continue;\n      } else if (state === 'MULTI_LINE_COMMENT' && char === '*' && nextChar === '/') {\n        states.pop();\n        i += 2;\n        continue;\n      }\n\n      else if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '/') {\n        states.push('COMMENT');\n        i += 2;\n        continue;\n      } else if (state === 'COMMENT' && char === '\\n') {\n        states.pop();\n        i++;\n        continue;\n      }\n\n      else if (state === null && char === '(') {\n        states.push('FUNCTION_ARGUMENTS');\n        i++;\n        continue;\n      } else if (state === 'FUNCTION_ARGUMENTS') {\n        if (char === ')') {\n          states.pop();\n          break;\n        }\n        if (char === 'f' && nextChar === 'l' && source[i + 2] === 'o' && source[i + 3] === 'a' && source[i + 4] === 't' && source[i + 5] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'float';\n          argumentName = '';\n          i += 6;\n          continue;\n        } else if (char === 'i' && nextChar === 'n' && source[i + 2] === 't' && source[i + 3] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'int';\n          argumentName = '';\n          i += 4;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '2' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec2';\n          argumentName = '';\n          i += 5;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '3' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec3';\n          argumentName = '';\n          i += 5;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '4' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec4';\n          argumentName = '';\n          i += 5;\n          continue;\n        }\n      }\n\n      else if (state === 'DECLARE_VARIABLE') {\n        if (argumentName === '') {\n          if (char === ' ') {\n            i++;\n            continue;\n          }\n          if (!isStartingVariableName.test(char)) {\n            throw new Error('variable name is not expected string');\n          }\n        }\n        argumentName += char;\n        if (!isVariableChar.test(nextChar)) {\n          states.pop();\n          argumentNames.push(argumentName);\n          argumentTypes.push(typeMap[argumentType]);\n        }\n      }\n\n      i++;\n    }\n    if (states.length > 0) {\n      throw new Error('GLSL function was not parsable');\n    }\n    return {\n      argumentNames,\n      argumentTypes,\n    };\n  }\n\n  static nativeFunctionReturnType(source) {\n    return typeMap[source.match(/int|float|vec[2-4]/)[0]];\n  }\n\n  static combineKernels(combinedKernel, lastKernel) {\n    combinedKernel.apply(null, arguments);\n    const {\n      texSize,\n      context,\n      threadDim\n    } = lastKernel.texSize;\n    let result;\n    if (lastKernel.precision === 'single') {\n      const w = texSize[0];\n      const h = Math.ceil(texSize[1] / 4);\n      result = new Float32Array(w * h * 4 * 4);\n      context.readPixels(0, 0, w, h * 4, context.RGBA, context.FLOAT, result);\n    } else {\n      const bytes = new Uint8Array(texSize[0] * texSize[1] * 4);\n      context.readPixels(0, 0, texSize[0], texSize[1], context.RGBA, context.UNSIGNED_BYTE, bytes);\n      result = new Float32Array(bytes.buffer);\n    }\n\n    result = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);\n\n    if (lastKernel.output.length === 1) {\n      return result;\n    } else if (lastKernel.output.length === 2) {\n      return utils.splitArray(result, lastKernel.output[0]);\n    } else if (lastKernel.output.length === 3) {\n      const cube = utils.splitArray(result, lastKernel.output[0] * lastKernel.output[1]);\n      return cube.map(function(x) {\n        return utils.splitArray(x, lastKernel.output[0]);\n      });\n    }\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.transferValues = null;\n    this.formatValues = null;\n    this.TextureConstructor = null;\n    this.renderOutput = null;\n    this.renderRawOutput = null;\n    this.texSize = null;\n    this.translatedSource = null;\n    this.compiledFragmentShader = null;\n    this.compiledVertexShader = null;\n    this.switchingKernels = null;\n    this._textureSwitched = null;\n    this._mappedTextureSwitched = null;\n  }\n\n  checkTextureSize() {\n    const { features } = this.constructor;\n    if (this.texSize[0] > features.maxTextureSize || this.texSize[1] > features.maxTextureSize) {\n      throw new Error(`Texture size [${this.texSize[0]},${this.texSize[1]}] generated by kernel is larger than supported size [${features.maxTextureSize},${features.maxTextureSize}]`);\n    }\n  }\n\n  translateSource() {\n    throw new Error(`\"translateSource\" not defined on ${this.constructor.name}`);\n  }\n\n  pickRenderStrategy(args) {\n    if (this.graphical) {\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\n      this.transferValues = (pixels) => pixels;\n      this.TextureConstructor = GLTextureGraphical;\n      return null;\n    }\n    if (this.precision === 'unsigned') {\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\n      this.transferValues = this.readPackedPixelsToFloat32Array;\n      if (this.pipeline) {\n        this.renderOutput = this.renderTexture;\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToTextures;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureUnsigned3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureUnsigned2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureUnsigned;\n              return null;\n            }\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              return this.requestFallback(args);\n        }\n      } else {\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToArrays;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            this.renderOutput = this.renderValues;\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureUnsigned3D;\n              this.formatValues = utils.erect3DPackedFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureUnsigned2D;\n              this.formatValues = utils.erect2DPackedFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureUnsigned;\n              this.formatValues = utils.erectPackedFloat;\n              return null;\n            }\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              return this.requestFallback(args);\n        }\n      }\n    } else if (this.precision === 'single') {\n      this.renderRawOutput = this.readFloatPixelsToFloat32Array;\n      this.transferValues = this.readFloatPixelsToFloat32Array;\n      if (this.pipeline) {\n        this.renderOutput = this.renderTexture;\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToTextures;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.optimizeFloatMemory) {\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureMemoryOptimized3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureMemoryOptimized2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureMemoryOptimized;\n                return null;\n              }\n            } else {\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureFloat3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureFloat2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureFloat;\n                return null;\n              }\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              return null;\n            }\n          }\n        }\n      }\n      this.renderOutput = this.renderValues;\n      if (this.subKernels !== null) {\n        this.renderKernels = this.renderKernelsToArrays;\n      }\n      if (this.optimizeFloatMemory) {\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureMemoryOptimized3D;\n              this.formatValues = utils.erectMemoryOptimized3DFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureMemoryOptimized2D;\n              this.formatValues = utils.erectMemoryOptimized2DFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureMemoryOptimized;\n              this.formatValues = utils.erectMemoryOptimizedFloat;\n              return null;\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              this.formatValues = utils.erect3DArray2;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              this.formatValues = utils.erect2DArray2;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              this.formatValues = utils.erectArray2;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              this.formatValues = utils.erect3DArray3;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              this.formatValues = utils.erect2DArray3;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              this.formatValues = utils.erectArray3;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              this.formatValues = utils.erect3DArray4;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              this.formatValues = utils.erect2DArray4;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              this.formatValues = utils.erectArray4;\n              return null;\n            }\n          }\n        }\n      } else {\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureFloat3D;\n              this.formatValues = utils.erect3DFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureFloat2D;\n              this.formatValues = utils.erect2DFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureFloat;\n              this.formatValues = utils.erectFloat;\n              return null;\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              this.formatValues = utils.erect3DArray2;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              this.formatValues = utils.erect2DArray2;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              this.formatValues = utils.erectArray2;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              this.formatValues = utils.erect3DArray3;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              this.formatValues = utils.erect2DArray3;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              this.formatValues = utils.erectArray3;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              this.formatValues = utils.erect3DArray4;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              this.formatValues = utils.erect2DArray4;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              this.formatValues = utils.erectArray4;\n              return null;\n            }\n          }\n        }\n      }\n    } else {\n      throw new Error(`unhandled precision of \"${this.precision}\"`);\n    }\n\n    throw new Error(`unhandled return type \"${this.returnType}\"`);\n  }\n\n  getKernelString() {\n    throw new Error(`abstract method call`);\n  }\n\n  getMainResultTexture() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Float':\n      case 'Integer':\n      case 'Number':\n        return this.getMainResultNumberTexture();\n      case 'Array(2)':\n        return this.getMainResultArray2Texture();\n      case 'Array(3)':\n        return this.getMainResultArray3Texture();\n      case 'Array(4)':\n        return this.getMainResultArray4Texture();\n      default:\n        throw new Error(`unhandled returnType type ${ this.returnType }`);\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelNumberTexture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray2Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray2Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray3Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray3Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray4Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray4Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultGraphical() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultMemoryOptimizedFloats() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultPackedPixels() {\n    throw new Error(`abstract method call`);\n  }\n\n  getMainResultString() {\n    if (this.graphical) {\n      return this.getMainResultGraphical();\n    } else if (this.precision === 'single') {\n      if (this.optimizeFloatMemory) {\n        return this.getMainResultMemoryOptimizedFloats();\n      }\n      return this.getMainResultTexture();\n    } else {\n      return this.getMainResultPackedPixels();\n    }\n  }\n\n  getMainResultNumberTexture() {\n    return utils.linesToString(this.getMainResultKernelNumberTexture()) +\n      utils.linesToString(this.getMainResultSubKernelNumberTexture());\n  }\n\n  getMainResultArray2Texture() {\n    return utils.linesToString(this.getMainResultKernelArray2Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray2Texture());\n  }\n\n  getMainResultArray3Texture() {\n    return utils.linesToString(this.getMainResultKernelArray3Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray3Texture());\n  }\n\n  getMainResultArray4Texture() {\n    return utils.linesToString(this.getMainResultKernelArray4Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray4Texture());\n  }\n\n  getFloatTacticDeclaration() {\n    const variablePrecision = this.getVariablePrecisionString(this.texSize, this.tactic);\n    return `precision ${variablePrecision} float;\\n`;\n  }\n\n  getIntTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic, true)} int;\\n`;\n  }\n\n  getSampler2DTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic)} sampler2D;\\n`;\n  }\n\n  getSampler2DArrayTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic)} sampler2DArray;\\n`;\n  }\n\n  renderTexture() {\n    return this.immutable ? this.texture.clone() : this.texture;\n  }\n  readPackedPixelsToUint8Array() {\n    if (this.precision !== 'unsigned') throw new Error('Requires this.precision to be \"unsigned\"');\n    const {\n      texSize,\n      context: gl\n    } = this;\n    const result = new Uint8Array(texSize[0] * texSize[1] * 4);\n    gl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n    return result;\n  }\n\n  readPackedPixelsToFloat32Array() {\n    return new Float32Array(this.readPackedPixelsToUint8Array().buffer);\n  }\n\n  readFloatPixelsToFloat32Array() {\n    if (this.precision !== 'single') throw new Error('Requires this.precision to be \"single\"');\n    const {\n      texSize,\n      context: gl\n    } = this;\n    const w = texSize[0];\n    const h = texSize[1];\n    const result = new Float32Array(w * h * 4);\n    gl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\n    return result;\n  }\n\n  getPixels(flip) {\n    const {\n      context: gl,\n      output\n    } = this;\n    const [width, height] = output;\n    const pixels = new Uint8Array(width * height * 4);\n    gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    return new Uint8ClampedArray((flip ? pixels : utils.flipPixels(pixels, width, height)).buffer);\n  }\n\n  renderKernelsToArrays() {\n    const result = {\n      result: this.renderOutput(),\n    };\n    for (let i = 0; i < this.subKernels.length; i++) {\n      result[this.subKernels[i].property] = this.mappedTextures[i].toArray();\n    }\n    return result;\n  }\n\n  renderKernelsToTextures() {\n    const result = {\n      result: this.renderOutput(),\n    };\n    if (this.immutable) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        result[this.subKernels[i].property] = this.mappedTextures[i].clone();\n      }\n    } else {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        result[this.subKernels[i].property] = this.mappedTextures[i];\n      }\n    }\n    return result;\n  }\n\n  resetSwitchingKernels() {\n    const existingValue = this.switchingKernels;\n    this.switchingKernels = null;\n    return existingValue;\n  }\n\n  setOutput(output) {\n    const newOutput = this.toKernelOutput(output);\n    if (this.program) {\n      if (!this.dynamicOutput) {\n        throw new Error('Resizing a kernel with dynamicOutput: false is not possible');\n      }\n      const newThreadDim = [newOutput[0], newOutput[1] || 1, newOutput[2] || 1];\n      const newTexSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, newThreadDim);\n      const oldTexSize = this.texSize;\n      if (oldTexSize) {\n        const oldPrecision = this.getVariablePrecisionString(oldTexSize, this.tactic);\n        const newPrecision = this.getVariablePrecisionString(newTexSize, this.tactic);\n        if (oldPrecision !== newPrecision) {\n          if (this.debug) {\n            console.warn('Precision requirement changed, asking GPU instance to recompile');\n          }\n          this.switchKernels({\n            type: 'outputPrecisionMismatch',\n            precision: newPrecision,\n            needed: output\n          });\n          return;\n        }\n      }\n      this.output = newOutput;\n      this.threadDim = newThreadDim;\n      this.texSize = newTexSize;\n      const { context: gl } = this;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n      this.updateMaxTexSize();\n      this.framebuffer.width = this.texSize[0];\n      this.framebuffer.height = this.texSize[1];\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      this.canvas.width = this.maxTexSize[0];\n      this.canvas.height = this.maxTexSize[1];\n      if (this.texture) {\n        this.texture.delete();\n      }\n      this.texture = null;\n      this._setupOutputTexture();\n      if (this.mappedTextures && this.mappedTextures.length > 0) {\n        for (let i = 0; i < this.mappedTextures.length; i++) {\n          this.mappedTextures[i].delete();\n        }\n        this.mappedTextures = null;\n        this._setupSubOutputTextures();\n      }\n    } else {\n      this.output = newOutput;\n    }\n    return this;\n  }\n  renderValues() {\n    return this.formatValues(\n      this.transferValues(),\n      this.output[0],\n      this.output[1],\n      this.output[2]\n    );\n  }\n  switchKernels(reason) {\n    if (this.switchingKernels) {\n      this.switchingKernels.push(reason);\n    } else {\n      this.switchingKernels = [reason];\n    }\n  }\n  getVariablePrecisionString(textureSize = this.texSize, tactic = this.tactic, isInt = false) {\n    if (!tactic) {\n      if (!this.constructor.features.isSpeedTacticSupported) return 'highp';\n      const low = this.constructor.features[isInt ? 'lowIntPrecision' : 'lowFloatPrecision'];\n      const medium = this.constructor.features[isInt ? 'mediumIntPrecision' : 'mediumFloatPrecision'];\n      const high = this.constructor.features[isInt ? 'highIntPrecision' : 'highFloatPrecision'];\n      const requiredSize = Math.log2(textureSize[0] * textureSize[1]);\n      if (requiredSize <= low.rangeMax) {\n        return 'lowp';\n      } else if (requiredSize <= medium.rangeMax) {\n        return 'mediump';\n      } else if (requiredSize <= high.rangeMax) {\n        return 'highp';\n      } else {\n        throw new Error(`The required size exceeds that of the ability of your system`);\n      }\n    }\n    switch (tactic) {\n      case 'speed':\n        return 'lowp';\n      case 'balanced':\n        return 'mediump';\n      case 'precision':\n        return 'highp';\n      default:\n        throw new Error(`Unknown tactic \"${tactic}\" use \"speed\", \"balanced\", \"precision\", or empty for auto`);\n    }\n  }\n\n  updateTextureArgumentRefs(kernelValue, arg) {\n    if (!this.immutable) return;\n    if (this.texture.texture === arg.texture) {\n      const { prevArg } = kernelValue;\n      if (prevArg) {\n        if (prevArg.texture._refs === 1) {\n          this.texture.delete();\n          this.texture = prevArg.clone();\n          this._textureSwitched = true;\n        }\n        prevArg.delete();\n      }\n      kernelValue.prevArg = arg.clone();\n    } else if (this.mappedTextures && this.mappedTextures.length > 0) {\n      const { mappedTextures } = this;\n      for (let i = 0; i < mappedTextures.length; i++) {\n        const mappedTexture = mappedTextures[i];\n        if (mappedTexture.texture === arg.texture) {\n          const { prevArg } = kernelValue;\n          if (prevArg) {\n            if (prevArg.texture._refs === 1) {\n              mappedTexture.delete();\n              mappedTextures[i] = prevArg.clone();\n              this._mappedTextureSwitched[i] = true;\n            }\n            prevArg.delete();\n          }\n          kernelValue.prevArg = arg.clone();\n          return;\n        }\n      }\n    }\n  }\n\n  onActivate(previousKernel) {\n    this._textureSwitched = true;\n    this.texture = previousKernel.texture;\n    if (this.mappedTextures) {\n      for (let i = 0; i < this.mappedTextures.length; i++) {\n        this._mappedTextureSwitched[i] = true;\n      }\n      this.mappedTextures = previousKernel.mappedTextures;\n    }\n  }\n\n  initCanvas() {}\n}\n\nconst typeMap = {\n  int: 'Integer',\n  float: 'Number',\n  vec2: 'Array(2)',\n  vec3: 'Array(3)',\n  vec4: 'Array(4)',\n};\n\nmodule.exports = {\n  GLKernel\n};\n},{\"../../utils\":114,\"../kernel\":36,\"./texture/array-2-float\":16,\"./texture/array-2-float-2d\":14,\"./texture/array-2-float-3d\":15,\"./texture/array-3-float\":19,\"./texture/array-3-float-2d\":17,\"./texture/array-3-float-3d\":18,\"./texture/array-4-float\":22,\"./texture/array-4-float-2d\":20,\"./texture/array-4-float-3d\":21,\"./texture/float\":25,\"./texture/float-2d\":23,\"./texture/float-3d\":24,\"./texture/graphical\":26,\"./texture/memory-optimized\":30,\"./texture/memory-optimized-2d\":28,\"./texture/memory-optimized-3d\":29,\"./texture/unsigned\":33,\"./texture/unsigned-2d\":31,\"./texture/unsigned-3d\":32}],14:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erect2DArray2(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],15:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erect3DArray2(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],16:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erectArray2(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float\n};\n},{\"../../../utils\":114,\"./float\":25}],17:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erect2DArray3(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],18:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erect3DArray3(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],19:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erectArray3(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float\n};\n},{\"../../../utils\":114,\"./float\":25}],20:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erect2DArray4(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],21:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erect3DArray4(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],22:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erectArray4(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float\n};\n},{\"../../../utils\":114,\"./float\":25}],23:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureFloat2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  toArray() {\n    return utils.erect2DFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat2D\n};\n},{\"../../../utils\":114,\"./float\":25}],24:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureFloat3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  toArray() {\n    return utils.erect3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat3D\n};\n},{\"../../../utils\":114,\"./float\":25}],25:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTexture } = require('./index');\n\nclass GLTextureFloat extends GLTexture {\n  get textureType() {\n    return this.context.FLOAT;\n  }\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  renderRawOutput() {\n    const gl = this.context;\n    const size = this.size;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture,\n      0\n    );\n    const result = new Float32Array(size[0] * size[1] * 4);\n    gl.readPixels(0, 0, size[0], size[1], gl.RGBA, gl.FLOAT, result);\n    return result;\n  }\n  renderValues() {\n    if (this._deleted) return null;\n    return this.renderRawOutput();\n  }\n  toArray() {\n    return utils.erectFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat\n};\n},{\"../../../utils\":114,\"./index\":27}],26:[function(require,module,exports){\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureGraphical extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return this.renderValues();\n  }\n}\n\nmodule.exports = {\n  GLTextureGraphical\n};\n},{\"./unsigned\":33}],27:[function(require,module,exports){\nconst { Texture } = require('../../../texture');\n\nclass GLTexture extends Texture {\n  get textureType() {\n    throw new Error(`\"textureType\" not implemented on ${ this.name }`);\n  }\n\n  clone() {\n    return new this.constructor(this);\n  }\n\n  beforeMutate() {\n    if (this.texture._refs > 1) {\n      this.newTexture();\n      return true;\n    }\n    return false;\n  }\n\n  cloneTexture() {\n    this.texture._refs--;\n    const { context: gl, size, texture, kernel } = this;\n    if (kernel.debug) {\n      console.warn('cloning internal texture');\n    }\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    selectTexture(gl, texture);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    const target = gl.createTexture();\n    selectTexture(gl, target);\n    gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n    gl.copyTexSubImage2D(gl.TEXTURE_2D, 0, 0, 0, 0, 0, size[0], size[1]);\n    target._refs = 1;\n    this.texture = target;\n  }\n\n  newTexture() {\n    this.texture._refs--;\n    const gl = this.context;\n    const size = this.size;\n    const kernel = this.kernel;\n    if (kernel.debug) {\n      console.warn('new internal texture');\n    }\n    const target = gl.createTexture();\n    selectTexture(gl, target);\n    gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n    target._refs = 1;\n    this.texture = target;\n  }\n\n  clear() {\n    if (this.texture._refs) {\n      this.texture._refs--;\n      const gl = this.context;\n      const target = this.texture = gl.createTexture();\n      selectTexture(gl, target);\n      const size = this.size;\n      target._refs = 1;\n      gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n    }\n    const { context: gl, texture } = this;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    selectTexture(gl, texture);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n  }\n\n  delete() {\n    if (this._deleted) return;\n    this._deleted = true;\n    if (this.texture._refs) {\n      this.texture._refs--;\n      if (this.texture._refs) return;\n    }\n    this.context.deleteTexture(this.texture);\n  }\n\n  framebuffer() {\n    if (!this._framebuffer) {\n      this._framebuffer = this.kernel.getRawValueFramebuffer(this.size[0], this.size[1]);\n    }\n    return this._framebuffer;\n  }\n}\n\nfunction selectTexture(gl, texture) {\n  gl.activeTexture(gl.TEXTURE15);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n}\n\nmodule.exports = { GLTexture };\n},{\"../../../texture\":113}],28:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimized2DFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized2D\n};\n},{\"../../../utils\":114,\"./float\":25}],29:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimized3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized3D\n};\n},{\"../../../utils\":114,\"./float\":25}],30:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimizedFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized\n};\n},{\"../../../utils\":114,\"./float\":25}],31:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureUnsigned2D extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  toArray() {\n    return utils.erect2DPackedFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned2D\n};\n},{\"../../../utils\":114,\"./unsigned\":33}],32:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureUnsigned3D extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  toArray() {\n    return utils.erect3DPackedFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned3D\n};\n},{\"../../../utils\":114,\"./unsigned\":33}],33:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTexture } = require('./index');\n\nclass GLTextureUnsigned extends GLTexture {\n  get textureType() {\n    return this.context.UNSIGNED_BYTE;\n  }\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  renderRawOutput() {\n    const { context: gl } = this;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture,\n      0\n    );\n    const result = new Uint8Array(this.size[0] * this.size[1] * 4);\n    gl.readPixels(0, 0, this.size[0], this.size[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n    return result;\n  }\n  renderValues() {\n    if (this._deleted) return null;\n    return new Float32Array(this.renderRawOutput().buffer);\n  }\n  toArray() {\n    return utils.erectPackedFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned\n};\n},{\"../../../utils\":114,\"./index\":27}],34:[function(require,module,exports){\nconst getContext = require('gl');\nconst { WebGLKernel } = require('../web-gl/kernel');\nconst { glKernelString } = require('../gl/kernel-string');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\nlet features = null;\n\nclass HeadlessGLKernel extends WebGLKernel {\n  static get isSupported() {\n    if (isSupported !== null) return isSupported;\n    this.setupFeatureChecks();\n    isSupported = testContext !== null;\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    testCanvas = null;\n    testExtensions = null;\n    if (typeof getContext !== 'function') return;\n    try { \n      testContext = getContext(2, 2, {\n        preserveDrawingBuffer: true\n      });\n      if (!testContext || !testContext.getExtension) return;\n      testExtensions = {\n        STACKGL_resize_drawingbuffer: testContext.getExtension('STACKGL_resize_drawingbuffer'),\n        STACKGL_destroy_context: testContext.getExtension('STACKGL_destroy_context'),\n        OES_texture_float: testContext.getExtension('OES_texture_float'),\n        OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n        OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n        WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\n        WEBGL_color_buffer_float: testContext.getExtension('WEBGL_color_buffer_float'),\n      };\n      features = this.getFeatures();\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  static isContextMatch(context) {\n    try {\n      return context.getParameter(context.RENDERER) === 'ANGLE';\n    } catch (e) {\n      return false;\n    }\n  }\n\n  static getIsTextureFloat() {\n    return Boolean(testExtensions.OES_texture_float);\n  }\n\n  static getIsDrawBuffers() {\n    return Boolean(testExtensions.WEBGL_draw_buffers);\n  }\n\n  static getChannelCount() {\n    return testExtensions.WEBGL_draw_buffers ?\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\n      1;\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  initCanvas() {\n    return {};\n  }\n\n  initContext() {\n    return getContext(2, 2, {\n      preserveDrawingBuffer: true\n    });\n  }\n\n  initExtensions() {\n    this.extensions = {\n      STACKGL_resize_drawingbuffer: this.context.getExtension('STACKGL_resize_drawingbuffer'),\n      STACKGL_destroy_context: this.context.getExtension('STACKGL_destroy_context'),\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\n    };\n  }\n\n  build() {\n    super.build.apply(this, arguments);\n    if (!this.fallbackRequested) {\n      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n    }\n  }\n\n  destroyExtensions() {\n    this.extensions.STACKGL_resize_drawingbuffer = null;\n    this.extensions.STACKGL_destroy_context = null;\n    this.extensions.OES_texture_float = null;\n    this.extensions.OES_texture_float_linear = null;\n    this.extensions.OES_element_index_uint = null;\n    this.extensions.WEBGL_draw_buffers = null;\n  }\n\n  static destroyContext(context) {\n    const extension = context.getExtension('STACKGL_destroy_context');\n    if (extension && extension.destroy) {\n      extension.destroy();\n    }\n  }\n\n  toString() {\n    const setupContextString = `const gl = context || require('gl')(1, 1);\\n`;\n    const destroyContextString = `    if (!context) { gl.getExtension('STACKGL_destroy_context').destroy(); }\\n`;\n    return glKernelString(this.constructor, arguments, this, setupContextString, destroyContextString);\n  }\n\n  setOutput(output) {\n    super.setOutput(output);\n    if (this.graphical && this.extensions.STACKGL_resize_drawingbuffer) {\n      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n    }\n    return this;\n  }\n}\n\nmodule.exports = {\n  HeadlessGLKernel\n};\n},{\"../gl/kernel-string\":12,\"../web-gl/kernel\":70,\"gl\":2}],35:[function(require,module,exports){\nclass KernelValue {\n  constructor(value, settings) {\n    const {\n      name,\n      kernel,\n      context,\n      checkContext,\n      onRequestContextHandle,\n      onUpdateValueMismatch,\n      origin,\n      strictIntegers,\n      type,\n      tactic,\n    } = settings;\n    if (!name) {\n      throw new Error('name not set');\n    }\n    if (!type) {\n      throw new Error('type not set');\n    }\n    if (!origin) {\n      throw new Error('origin not set');\n    }\n    if (origin !== 'user' && origin !== 'constants') {\n      throw new Error(`origin must be \"user\" or \"constants\" value is \"${ origin }\"`);\n    }\n    if (!onRequestContextHandle) {\n      throw new Error('onRequestContextHandle is not set');\n    }\n    this.name = name;\n    this.origin = origin;\n    this.tactic = tactic;\n    this.varName = origin === 'constants' ? `constants.${name}` : name;\n    this.kernel = kernel;\n    this.strictIntegers = strictIntegers;\n    this.type = value.type || type;\n    this.size = value.size || null;\n    this.index = null;\n    this.context = context;\n    this.checkContext = checkContext !== null && checkContext !== undefined ? checkContext : true;\n    this.contextHandle = null;\n    this.onRequestContextHandle = onRequestContextHandle;\n    this.onUpdateValueMismatch = onUpdateValueMismatch;\n    this.forceUploadEachRun = null;\n  }\n\n  get id() {\n    return `${this.origin}_${name}`;\n  }\n\n  getSource() {\n    throw new Error(`\"getSource\" not defined on ${ this.constructor.name }`);\n  }\n\n  updateValue(value) {\n    throw new Error(`\"updateValue\" not defined on ${ this.constructor.name }`);\n  }\n}\n\nmodule.exports = {\n  KernelValue\n};\n},{}],36:[function(require,module,exports){\nconst { utils } = require('../utils');\nconst { Input } = require('../input');\n\nclass Kernel {\n  static get isSupported() {\n    throw new Error(`\"isSupported\" not implemented on ${ this.name }`);\n  }\n\n  static isContextMatch(context) {\n    throw new Error(`\"isContextMatch\" not implemented on ${ this.name }`);\n  }\n\n  static getFeatures() {\n    throw new Error(`\"getFeatures\" not implemented on ${ this.name }`);\n  }\n\n  static destroyContext(context) {\n    throw new Error(`\"destroyContext\" called on ${ this.name }`);\n  }\n\n  static nativeFunctionArguments() {\n    throw new Error(`\"nativeFunctionArguments\" called on ${ this.name }`);\n  }\n\n  static nativeFunctionReturnType() {\n    throw new Error(`\"nativeFunctionReturnType\" called on ${ this.name }`);\n  }\n\n  static combineKernels() {\n    throw new Error(`\"combineKernels\" called on ${ this.name }`);\n  }\n\n  constructor(source, settings) {\n    if (typeof source !== 'object') {\n      if (typeof source !== 'string') {\n        throw new Error('source not a string');\n      }\n      if (!utils.isFunctionString(source)) {\n        throw new Error('source not a function string');\n      }\n    }\n    this.useLegacyEncoder = false;\n    this.fallbackRequested = false;\n    this.onRequestFallback = null;\n\n    this.argumentNames = typeof source === 'string' ? utils.getArgumentNamesFromString(source) : null;\n    this.argumentTypes = null;\n    this.argumentSizes = null;\n    this.argumentBitRatios = null;\n    this.kernelArguments = null;\n    this.kernelConstants = null;\n    this.forceUploadKernelConstants = null;\n\n\n    this.source = source;\n\n    this.output = null;\n\n    this.debug = false;\n\n    this.graphical = false;\n\n    this.loopMaxIterations = 0;\n\n    this.constants = null;\n\n    this.constantTypes = null;\n\n    this.constantBitRatios = null;\n\n    this.dynamicArguments = false;\n\n    this.dynamicOutput = false;\n\n    this.canvas = null;\n\n    this.context = null;\n\n    this.checkContext = null;\n\n    this.gpu = null;\n\n    this.functions = null;\n\n    this.nativeFunctions = null;\n\n    this.injectedNative = null;\n\n    this.subKernels = null;\n\n    this.validate = true;\n\n    this.immutable = false;\n\n    this.pipeline = false;\n\n    this.precision = null;\n\n    this.tactic = null;\n\n    this.plugins = null;\n\n    this.returnType = null;\n    this.leadingReturnStatement = null;\n    this.followingReturnStatement = null;\n    this.optimizeFloatMemory = null;\n    this.strictIntegers = false;\n    this.fixIntegerDivisionAccuracy = null;\n    this.built = false;\n    this.signature = null;\n  }\n\n  mergeSettings(settings) {\n    for (let p in settings) {\n      if (!settings.hasOwnProperty(p) || !this.hasOwnProperty(p)) continue;\n      switch (p) {\n        case 'output':\n          if (!Array.isArray(settings.output)) {\n            this.setOutput(settings.output); \n            continue;\n          }\n          break;\n        case 'functions':\n          this.functions = [];\n          for (let i = 0; i < settings.functions.length; i++) {\n            this.addFunction(settings.functions[i]);\n          }\n          continue;\n        case 'graphical':\n          if (settings[p] && !settings.hasOwnProperty('precision')) {\n            this.precision = 'unsigned';\n          }\n          this[p] = settings[p];\n          continue;\n        case 'nativeFunctions':\n          if (!settings.nativeFunctions) continue;\n          this.nativeFunctions = [];\n          for (let i = 0; i < settings.nativeFunctions.length; i++) {\n            const s = settings.nativeFunctions[i];\n            const { name, source } = s;\n            this.addNativeFunction(name, source, s);\n          }\n          continue;\n      }\n      this[p] = settings[p];\n    }\n\n    if (!this.canvas) this.canvas = this.initCanvas();\n    if (!this.context) this.context = this.initContext();\n    if (!this.plugins) this.plugins = this.initPlugins(settings);\n  }\n  build() {\n    throw new Error(`\"build\" not defined on ${ this.constructor.name }`);\n  }\n\n  run() {\n    throw new Error(`\"run\" not defined on ${ this.constructor.name }`)\n  }\n\n  initCanvas() {\n    throw new Error(`\"initCanvas\" not defined on ${ this.constructor.name }`);\n  }\n\n  initContext() {\n    throw new Error(`\"initContext\" not defined on ${ this.constructor.name }`);\n  }\n\n  initPlugins(settings) {\n    throw new Error(`\"initPlugins\" not defined on ${ this.constructor.name }`);\n  }\n\n  addFunction(source, settings = {}) {\n    if (source.name && source.source && source.argumentTypes && 'returnType' in source) {\n      this.functions.push(source);\n    } else if ('settings' in source && 'source' in source) {\n      this.functions.push(this.functionToIGPUFunction(source.source, source.settings));\n    } else if (typeof source === 'string' || typeof source === 'function') {\n      this.functions.push(this.functionToIGPUFunction(source, settings));\n    } else {\n      throw new Error(`function not properly defined`);\n    }\n    return this;\n  }\n\n  addNativeFunction(name, source, settings = {}) {\n    const { argumentTypes, argumentNames } = settings.argumentTypes ?\n      splitArgumentTypes(settings.argumentTypes) :\n      this.constructor.nativeFunctionArguments(source) || {};\n    this.nativeFunctions.push({\n      name,\n      source,\n      settings,\n      argumentTypes,\n      argumentNames,\n      returnType: settings.returnType || this.constructor.nativeFunctionReturnType(source)\n    });\n    return this;\n  }\n\n  setupArguments(args) {\n    this.kernelArguments = [];\n    if (!this.argumentTypes) {\n      if (!this.argumentTypes) {\n        this.argumentTypes = [];\n        for (let i = 0; i < args.length; i++) {\n          const argType = utils.getVariableType(args[i], this.strictIntegers);\n          const type = argType === 'Integer' ? 'Number' : argType;\n          this.argumentTypes.push(type);\n          this.kernelArguments.push({\n            type\n          });\n        }\n      }\n    } else {\n      for (let i = 0; i < this.argumentTypes.length; i++) {\n        this.kernelArguments.push({\n          type: this.argumentTypes[i]\n        });\n      }\n    }\n\n    this.argumentSizes = new Array(args.length);\n    this.argumentBitRatios = new Int32Array(args.length);\n\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n      this.argumentSizes[i] = arg.constructor === Input ? arg.size : null;\n      this.argumentBitRatios[i] = this.getBitRatio(arg);\n    }\n\n    if (this.argumentNames.length !== args.length) {\n      throw new Error(`arguments are miss-aligned`);\n    }\n  }\n\n  setupConstants() {\n    this.kernelConstants = [];\n    let needsConstantTypes = this.constantTypes === null;\n    if (needsConstantTypes) {\n      this.constantTypes = {};\n    }\n    this.constantBitRatios = {};\n    if (this.constants) {\n      for (let name in this.constants) {\n        if (needsConstantTypes) {\n          const type = utils.getVariableType(this.constants[name], this.strictIntegers);\n          this.constantTypes[name] = type;\n          this.kernelConstants.push({\n            name,\n            type\n          });\n        } else {\n          this.kernelConstants.push({\n            name,\n            type: this.constantTypes[name]\n          });\n        }\n        this.constantBitRatios[name] = this.getBitRatio(this.constants[name]);\n      }\n    }\n  }\n\n  setOptimizeFloatMemory(flag) {\n    this.optimizeFloatMemory = flag;\n    return this;\n  }\n\n  toKernelOutput(output) {\n    if (output.hasOwnProperty('x')) {\n      if (output.hasOwnProperty('y')) {\n        if (output.hasOwnProperty('z')) {\n          return [output.x, output.y, output.z];\n        } else {\n          return [output.x, output.y];\n        }\n      } else {\n        return [output.x];\n      }\n    } else {\n      return output;\n    }\n  }\n\n  setOutput(output) {\n    this.output = this.toKernelOutput(output);\n    return this;\n  }\n\n  setDebug(flag) {\n    this.debug = flag;\n    return this;\n  }\n\n  setGraphical(flag) {\n    this.graphical = flag;\n    this.precision = 'unsigned';\n    return this;\n  }\n\n  setLoopMaxIterations(max) {\n    this.loopMaxIterations = max;\n    return this;\n  }\n\n  setConstants(constants) {\n    this.constants = constants;\n    return this;\n  }\n\n  setConstantTypes(constantTypes) {\n    this.constantTypes = constantTypes;\n    return this;\n  }\n\n  setFunctions(functions) {\n    for (let i = 0; i < functions.length; i++) {\n      this.addFunction(functions[i]);\n    }\n    return this;\n  }\n\n  setNativeFunctions(nativeFunctions) {\n    for (let i = 0; i < nativeFunctions.length; i++) {\n      const settings = nativeFunctions[i];\n      const { name, source } = settings;\n      this.addNativeFunction(name, source, settings);\n    }\n    return this;\n  }\n\n  setInjectedNative(injectedNative) {\n    this.injectedNative = injectedNative;\n    return this;\n  }\n\n  setPipeline(flag) {\n    this.pipeline = flag;\n    return this;\n  }\n\n  setPrecision(flag) {\n    this.precision = flag;\n    return this;\n  }\n\n  setDimensions(flag) {\n    utils.warnDeprecated('method', 'setDimensions', 'setOutput');\n    this.output = flag;\n    return this;\n  }\n\n  setOutputToTexture(flag) {\n    utils.warnDeprecated('method', 'setOutputToTexture', 'setPipeline');\n    this.pipeline = flag;\n    return this;\n  }\n\n  setImmutable(flag) {\n    this.immutable = flag;\n    return this;\n  }\n\n  setCanvas(canvas) {\n    this.canvas = canvas;\n    return this;\n  }\n\n  setStrictIntegers(flag) {\n    this.strictIntegers = flag;\n    return this;\n  }\n\n  setDynamicOutput(flag) {\n    this.dynamicOutput = flag;\n    return this;\n  }\n\n  setHardcodeConstants(flag) {\n    utils.warnDeprecated('method', 'setHardcodeConstants');\n    this.setDynamicOutput(flag);\n    this.setDynamicArguments(flag);\n    return this;\n  }\n\n  setDynamicArguments(flag) {\n    this.dynamicArguments = flag;\n    return this;\n  }\n\n  setUseLegacyEncoder(flag) {\n    this.useLegacyEncoder = flag;\n    return this;\n  }\n\n  setWarnVarUsage(flag) {\n    utils.warnDeprecated('method', 'setWarnVarUsage');\n    return this;\n  }\n\n  getCanvas() {\n    utils.warnDeprecated('method', 'getCanvas');\n    return this.canvas;\n  }\n\n  getWebGl() {\n    utils.warnDeprecated('method', 'getWebGl');\n    return this.context;\n  }\n\n  setContext(context) {\n    this.context = context;\n    return this;\n  }\n\n  setArgumentTypes(argumentTypes) {\n    if (Array.isArray(argumentTypes)) {\n      this.argumentTypes = argumentTypes;\n    } else {\n      this.argumentTypes = [];\n      for (const p in argumentTypes) {\n        if (!argumentTypes.hasOwnProperty(p)) continue;\n        const argumentIndex = this.argumentNames.indexOf(p);\n        if (argumentIndex === -1) throw new Error(`unable to find argument ${ p }`);\n        this.argumentTypes[argumentIndex] = argumentTypes[p];\n      }\n    }\n    return this;\n  }\n\n  setTactic(tactic) {\n    this.tactic = tactic;\n    return this;\n  }\n\n  requestFallback(args) {\n    if (!this.onRequestFallback) {\n      throw new Error(`\"onRequestFallback\" not defined on ${ this.constructor.name }`);\n    }\n    this.fallbackRequested = true;\n    return this.onRequestFallback(args);\n  }\n\n  validateSettings() {\n    throw new Error(`\"validateSettings\" not defined on ${ this.constructor.name }`);\n  }\n\n  addSubKernel(subKernel) {\n    if (this.subKernels === null) {\n      this.subKernels = [];\n    }\n    if (!subKernel.source) throw new Error('subKernel missing \"source\" property');\n    if (!subKernel.property && isNaN(subKernel.property)) throw new Error('subKernel missing \"property\" property');\n    if (!subKernel.name) throw new Error('subKernel missing \"name\" property');\n    this.subKernels.push(subKernel);\n    return this;\n  }\n\n  destroy(removeCanvasReferences) {\n    throw new Error(`\"destroy\" called on ${ this.constructor.name }`);\n  }\n\n  getBitRatio(value) {\n    if (this.precision === 'single') {\n      return 4;\n    } else if (Array.isArray(value[0])) {\n      return this.getBitRatio(value[0]);\n    } else if (value.constructor === Input) {\n      return this.getBitRatio(value.value);\n    }\n    switch (value.constructor) {\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Int8Array:\n        return 1;\n      case Uint16Array:\n      case Int16Array:\n        return 2;\n      case Float32Array:\n      case Int32Array:\n      default:\n        return 4;\n    }\n  }\n\n  getPixels(flip) {\n    throw new Error(`\"getPixels\" called on ${ this.constructor.name }`);\n  }\n\n  checkOutput() {\n    if (!this.output || !utils.isArray(this.output)) throw new Error('kernel.output not an array');\n    if (this.output.length < 1) throw new Error('kernel.output is empty, needs at least 1 value');\n    for (let i = 0; i < this.output.length; i++) {\n      if (isNaN(this.output[i]) || this.output[i] < 1) {\n        throw new Error(`${ this.constructor.name }.output[${ i }] incorrectly defined as \\`${ this.output[i] }\\`, needs to be numeric, and greater than 0`);\n      }\n    }\n  }\n\n  prependString(value) {\n    throw new Error(`\"prependString\" called on ${ this.constructor.name }`);\n  }\n\n  hasPrependString(value) {\n    throw new Error(`\"hasPrependString\" called on ${ this.constructor.name }`);\n  }\n\n  toJSON() {\n    return {\n      settings: {\n        output: this.output,\n        pipeline: this.pipeline,\n        argumentNames: this.argumentNames,\n        argumentsTypes: this.argumentTypes,\n        constants: this.constants,\n        pluginNames: this.plugins ? this.plugins.map(plugin => plugin.name) : null,\n        returnType: this.returnType,\n      }\n    };\n  }\n\n  buildSignature(args) {\n    const Constructor = this.constructor;\n    this.signature = Constructor.getSignature(this, Constructor.getArgumentTypes(this, args));\n  }\n\n  static getArgumentTypes(kernel, args) {\n    const argumentTypes = new Array(args.length);\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n      const type = kernel.argumentTypes[i];\n      if (arg.type) {\n        argumentTypes[i] = arg.type;\n      } else {\n        switch (type) {\n          case 'Number':\n          case 'Integer':\n          case 'Float':\n          case 'ArrayTexture(1)':\n            argumentTypes[i] = utils.getVariableType(arg);\n            break;\n          default:\n            argumentTypes[i] = type;\n        }\n      }\n    }\n    return argumentTypes;\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    throw new Error(`\"getSignature\" not implemented on ${ this.name }`);\n  }\n\n  functionToIGPUFunction(source, settings = {}) {\n    if (typeof source !== 'string' && typeof source !== 'function') throw new Error('source not a string or function');\n    const sourceString = typeof source === 'string' ? source : source.toString();\n    let argumentTypes = [];\n\n    if (Array.isArray(settings.argumentTypes)) {\n      argumentTypes = settings.argumentTypes;\n    } else if (typeof settings.argumentTypes === 'object') {\n      argumentTypes = utils.getArgumentNamesFromString(sourceString)\n        .map(name => settings.argumentTypes[name]) || [];\n    } else {\n      argumentTypes = settings.argumentTypes || [];\n    }\n\n    return {\n      name: utils.getFunctionNameFromString(sourceString) || null,\n      source: sourceString,\n      argumentTypes,\n      returnType: settings.returnType || null,\n    };\n  }\n\n  onActivate(previousKernel) {}\n}\n\nfunction splitArgumentTypes(argumentTypesObject) {\n  const argumentNames = Object.keys(argumentTypesObject);\n  const argumentTypes = [];\n  for (let i = 0; i < argumentNames.length; i++) {\n    const argumentName = argumentNames[i];\n    argumentTypes.push(argumentTypesObject[argumentName]);\n  }\n  return { argumentTypes, argumentNames };\n}\n\nmodule.exports = {\n  Kernel\n};\n},{\"../input\":110,\"../utils\":114}],37:[function(require,module,exports){\nconst fragmentShader = `__HEADER__;\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nvarying vec2 vTexCoord;\n\nfloat acosh(float x) {\n  return log(x + sqrt(x * x - 1.0));\n}\n\nfloat sinh(float x) {\n  return (pow(${Math.E}, x) - pow(${Math.E}, -x)) / 2.0;\n}\n\nfloat asinh(float x) {\n  return log(x + sqrt(x * x + 1.0));\n}\n\nfloat atan2(float v1, float v2) {\n  if (v1 == 0.0 || v2 == 0.0) return 0.0;\n  return atan(v1 / v2);\n}\n\nfloat atanh(float x) {\n  x = (x + 1.0) / (x - 1.0);\n  if (x < 0.0) {\n    return 0.5 * log(-x);\n  }\n  return 0.5 * log(x);\n}\n\nfloat cbrt(float x) {\n  if (x >= 0.0) {\n    return pow(x, 1.0 / 3.0);\n  } else {\n    return -pow(x, 1.0 / 3.0);\n  }\n}\n\nfloat cosh(float x) {\n  return (pow(${Math.E}, x) + pow(${Math.E}, -x)) / 2.0; \n}\n\nfloat expm1(float x) {\n  return pow(${Math.E}, x) - 1.0; \n}\n\nfloat fround(highp float x) {\n  return x;\n}\n\nfloat imul(float v1, float v2) {\n  return float(int(v1) * int(v2));\n}\n\nfloat log10(float x) {\n  return log2(x) * (1.0 / log2(10.0));\n}\n\nfloat log1p(float x) {\n  return log(1.0 + x);\n}\n\nfloat _pow(float v1, float v2) {\n  if (v2 == 0.0) return 1.0;\n  return pow(v1, v2);\n}\n\nfloat tanh(float x) {\n  float e = exp(2.0 * x);\n  return (e - 1.0) / (e + 1.0);\n}\n\nfloat trunc(float x) {\n  if (x >= 0.0) {\n    return floor(x); \n  } else {\n    return ceil(x);\n  }\n}\n\nvec4 _round(vec4 x) {\n  return floor(x + 0.5);\n}\n\nfloat _round(float x) {\n  return floor(x + 0.5);\n}\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x / y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(_round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(_round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  if (channel == 0) return texel.r * 255.0 + texel.g * 65280.0;\n  if (channel == 1) return texel.b * 255.0 + texel.a * 65280.0;\n  return 0.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  if (channel == 0) return texel.r * 255.0;\n  if (channel == 1) return texel.g * 255.0;\n  if (channel == 2) return texel.b * 255.0;\n  if (channel == 3) return texel.a * 255.0;\n  return 0.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return texel.r;\n  if (channel == 1) return texel.g;\n  if (channel == 2) return texel.b;\n  if (channel == 3) return texel.a;\n  return 0.0;\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture2D(tex, st / vec2(texSize));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture2D(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n  \n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture2D(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\nvoid color(sampler2D image) {\n  actualColor = texture2D(image, vTexCoord);\n}\n\nfloat modulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -mod(number, divisor);\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return mod(number, divisor);\n}\n\n__INJECTED_NATIVE__;\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}`;\n\nmodule.exports = {\n  fragmentShader\n};\n},{}],38:[function(require,module,exports){\nconst { utils } = require('../../utils');\nconst { FunctionNode } = require('../function-node');\n\nclass WebGLFunctionNode extends FunctionNode {\n  constructor(source, settings) {\n    super(source, settings);\n    if (settings && settings.hasOwnProperty('fixIntegerDivisionAccuracy')) {\n      this.fixIntegerDivisionAccuracy = settings.fixIntegerDivisionAccuracy;\n    }\n  }\n\n  astConditionalExpression(ast, retArr) {\n    if (ast.type !== 'ConditionalExpression') {\n      throw this.astErrorOutput('Not a conditional expression', ast);\n    }\n    const consequentType = this.getType(ast.consequent);\n    const alternateType = this.getType(ast.alternate);\n    if (consequentType === null && alternateType === null) {\n      retArr.push('if (');\n      this.astGeneric(ast.test, retArr);\n      retArr.push(') {');\n      this.astGeneric(ast.consequent, retArr);\n      retArr.push(';');\n      retArr.push('} else {');\n      this.astGeneric(ast.alternate, retArr);\n      retArr.push(';');\n      retArr.push('}');\n      return retArr;\n    }\n    retArr.push('(');\n    this.astGeneric(ast.test, retArr);\n    retArr.push('?');\n    this.astGeneric(ast.consequent, retArr);\n    retArr.push(':');\n    this.astGeneric(ast.alternate, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astFunction(ast, retArr) {\n    if (this.isRootKernel) {\n      retArr.push('void');\n    } else {\n      if (!this.returnType) {\n        const lastReturn = this.findLastReturn();\n        if (lastReturn) {\n          this.returnType = this.getType(ast.body);\n          if (this.returnType === 'LiteralInteger') {\n            this.returnType = 'Number';\n          }\n        }\n      }\n\n      const { returnType } = this;\n      if (!returnType) {\n        retArr.push('void');\n      } else {\n        const type = typeMap[returnType];\n        if (!type) {\n          throw new Error(`unknown type ${returnType}`);\n        }\n        retArr.push(type);\n      }\n    }\n    retArr.push(' ');\n    retArr.push(this.name);\n    retArr.push('(');\n\n    if (!this.isRootKernel) {\n      for (let i = 0; i < this.argumentNames.length; ++i) {\n        const argumentName = this.argumentNames[i];\n\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        let argumentType = this.argumentTypes[this.argumentNames.indexOf(argumentName)];\n        if (!argumentType) {\n          throw this.astErrorOutput(`Unknown argument ${argumentName} type`, ast);\n        }\n        if (argumentType === 'LiteralInteger') {\n          this.argumentTypes[i] = argumentType = 'Number';\n        }\n        const type = typeMap[argumentType];\n        if (!type) {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        const name = utils.sanitizeName(argumentName);\n        if (type === 'sampler2D' || type === 'sampler2DArray') {\n          retArr.push(`${type} user_${name},ivec2 user_${name}Size,ivec3 user_${name}Dim`);\n        } else {\n          retArr.push(`${type} user_${name}`);\n        }\n      }\n    }\n\n    retArr.push(') {\\n');\n\n    for (let i = 0; i < ast.body.body.length; ++i) {\n      this.astGeneric(ast.body.body[i], retArr);\n      retArr.push('\\n');\n    }\n\n    retArr.push('}\\n');\n    return retArr;\n  }\n\n  astReturnStatement(ast, retArr) {\n    if (!ast.argument) throw this.astErrorOutput('Unexpected return statement', ast);\n    this.pushState('skip-literal-correction');\n    const type = this.getType(ast.argument);\n    this.popState('skip-literal-correction');\n\n    const result = [];\n\n    if (!this.returnType) {\n      if (type === 'LiteralInteger' || type === 'Integer') {\n        this.returnType = 'Number';\n      } else {\n        this.returnType = type;\n      }\n    }\n\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Float':\n        switch (type) {\n          case 'Integer':\n            result.push('float(');\n            this.astGeneric(ast.argument, result);\n            result.push(')');\n            break;\n          case 'LiteralInteger':\n            this.castLiteralToFloat(ast.argument, result);\n\n            if (this.getType(ast) === 'Integer') {\n              result.unshift('float(');\n              result.push(')');\n            }\n            break;\n          default:\n            this.astGeneric(ast.argument, result);\n        }\n        break;\n      case 'Integer':\n        switch (type) {\n          case 'Float':\n          case 'Number':\n            this.castValueToInteger(ast.argument, result);\n            break;\n          case 'LiteralInteger':\n            this.castLiteralToInteger(ast.argument, result);\n            break;\n          default:\n            this.astGeneric(ast.argument, result);\n        }\n        break;\n      case 'Array(4)':\n      case 'Array(3)':\n      case 'Array(2)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n      case 'Input':\n        this.astGeneric(ast.argument, result);\n        break;\n      default:\n        throw this.astErrorOutput(`unhandled return type ${this.returnType}`, ast);\n    }\n\n    if (this.isRootKernel) {\n      retArr.push(`kernelResult = ${ result.join('') };`);\n      retArr.push('return;');\n    } else if (this.isSubKernel) {\n      retArr.push(`subKernelResult_${ this.name } = ${ result.join('') };`);\n      retArr.push(`return subKernelResult_${ this.name };`);\n    } else {\n      retArr.push(`return ${ result.join('') };`);\n    }\n    return retArr;\n  }\n\n  astLiteral(ast, retArr) {\n    if (isNaN(ast.value)) {\n      throw this.astErrorOutput(\n        'Non-numeric literal not supported : ' + ast.value,\n        ast\n      );\n    }\n\n    const key = this.astKey(ast);\n    if (Number.isInteger(ast.value)) {\n      if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n        this.literalTypes[key] = 'Integer';\n        retArr.push(`${ast.value}`);\n      } else if (this.isState('casting-to-float') || this.isState('building-float')) {\n        this.literalTypes[key] = 'Number';\n        retArr.push(`${ast.value}.0`);\n      } else {\n        this.literalTypes[key] = 'Number';\n        retArr.push(`${ast.value}.0`);\n      }\n    } else if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n      this.literalTypes[key] = 'Integer';\n      retArr.push(Math.round(ast.value));\n    } else {\n      this.literalTypes[key] = 'Number';\n      retArr.push(`${ast.value}`);\n    }\n    return retArr;\n  }\n\n  astBinaryExpression(ast, retArr) {\n    if (this.checkAndUpconvertOperator(ast, retArr)) {\n      return retArr;\n    }\n\n    if (this.fixIntegerDivisionAccuracy && ast.operator === '/') {\n      retArr.push('divWithIntCheck(');\n      this.pushState('building-float');\n      switch (this.getType(ast.left)) {\n        case 'Integer':\n          this.castValueToFloat(ast.left, retArr);\n          break;\n        case 'LiteralInteger':\n          this.castLiteralToFloat(ast.left, retArr);\n          break;\n        default:\n          this.astGeneric(ast.left, retArr);\n      }\n      retArr.push(', ');\n      switch (this.getType(ast.right)) {\n        case 'Integer':\n          this.castValueToFloat(ast.right, retArr);\n          break;\n        case 'LiteralInteger':\n          this.castLiteralToFloat(ast.right, retArr);\n          break;\n        default:\n          this.astGeneric(ast.right, retArr);\n      }\n      this.popState('building-float');\n      retArr.push(')');\n      return retArr;\n    }\n\n    retArr.push('(');\n    const leftType = this.getType(ast.left) || 'Number';\n    const rightType = this.getType(ast.right) || 'Number';\n    if (!leftType || !rightType) {\n      throw this.astErrorOutput(`Unhandled binary expression`, ast);\n    }\n    const key = leftType + ' & ' + rightType;\n    switch (key) {\n      case 'Integer & Integer':\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n      case 'Number & Float':\n      case 'Float & Number':\n      case 'Float & Float':\n      case 'Number & Number':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'LiteralInteger & LiteralInteger':\n        if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n          this.pushState('building-integer');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.astGeneric(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.castLiteralToFloat(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castLiteralToFloat(ast.right, retArr);\n          this.popState('building-float');\n        }\n        break;\n\n      case 'Integer & Float':\n      case 'Integer & Number':\n        if (ast.operator === '>' || ast.operator === '<' && ast.right.type === 'Literal') {\n          if (!Number.isInteger(ast.right.value)) {\n            this.pushState('building-float');\n            this.castValueToFloat(ast.left, retArr);\n            retArr.push(operatorMap[ast.operator] || ast.operator);\n            this.astGeneric(ast.right, retArr);\n            this.popState('building-float');\n            break;\n          }\n        }\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.pushState('casting-to-integer');\n        if (ast.right.type === 'Literal') {\n          const literalResult = [];\n          this.astGeneric(ast.right, literalResult);\n          const literalType = this.getType(ast.right);\n          if (literalType === 'Integer') {\n            retArr.push(literalResult.join(''));\n          } else {\n            throw this.astErrorOutput(`Unhandled binary expression with literal`, ast);\n          }\n        } else {\n          retArr.push('int(');\n          this.astGeneric(ast.right, retArr);\n          retArr.push(')');\n        }\n        this.popState('casting-to-integer');\n        this.popState('building-integer');\n        break;\n      case 'Integer & LiteralInteger':\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castLiteralToInteger(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n\n      case 'Number & Integer':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castValueToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'Float & LiteralInteger':\n      case 'Number & LiteralInteger':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castLiteralToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'LiteralInteger & Float':\n      case 'LiteralInteger & Number':\n        if (this.isState('casting-to-integer')) {\n          this.pushState('building-integer');\n          this.castLiteralToInteger(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castValueToInteger(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.pushState('casting-to-float');\n          this.astGeneric(ast.right, retArr);\n          this.popState('casting-to-float');\n          this.popState('building-float');\n        }\n        break;\n      case 'LiteralInteger & Integer':\n        this.pushState('building-integer');\n        this.castLiteralToInteger(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n\n      case 'Boolean & Boolean':\n        this.pushState('building-boolean');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-boolean');\n        break;\n\n      case 'Float & Integer':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castValueToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n\n      default:\n        throw this.astErrorOutput(`Unhandled binary expression between ${key}`, ast);\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  checkAndUpconvertOperator(ast, retArr) {\n    const bitwiseResult = this.checkAndUpconvertBitwiseOperators(ast, retArr);\n    if (bitwiseResult) {\n      return bitwiseResult;\n    }\n    const upconvertableOperators = {\n      '%': this.fixIntegerDivisionAccuracy ? 'integerCorrectionModulo' : 'modulo',\n      '**': 'pow',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    switch (this.getType(ast.left)) {\n      case 'Integer':\n        this.castValueToFloat(ast.left, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToFloat(ast.left, retArr);\n        break;\n      default:\n        this.astGeneric(ast.left, retArr);\n    }\n    retArr.push(',');\n    switch (this.getType(ast.right)) {\n      case 'Integer':\n        this.castValueToFloat(ast.right, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToFloat(ast.right, retArr);\n        break;\n      default:\n        this.astGeneric(ast.right, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseOperators(ast, retArr) {\n    const upconvertableOperators = {\n      '&': 'bitwiseAnd',\n      '|': 'bitwiseOr',\n      '^': 'bitwiseXOR',\n      '<<': 'bitwiseZeroFillLeftShift',\n      '>>': 'bitwiseSignedRightShift',\n      '>>>': 'bitwiseZeroFillRightShift',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    const leftType = this.getType(ast.left);\n    switch (leftType) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.left, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.left, retArr);\n        break;\n      default:\n        this.astGeneric(ast.left, retArr);\n    }\n    retArr.push(',');\n    const rightType = this.getType(ast.right);\n    switch (rightType) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.right, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.right, retArr);\n        break;\n      default:\n        this.astGeneric(ast.right, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseUnary(ast, retArr) {\n    const upconvertableOperators = {\n      '~': 'bitwiseNot',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    switch (this.getType(ast.argument)) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.argument, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.argument, retArr);\n        break;\n      default:\n        this.astGeneric(ast.argument, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  castLiteralToInteger(ast, retArr) {\n    this.pushState('casting-to-integer');\n    this.astGeneric(ast, retArr);\n    this.popState('casting-to-integer');\n    return retArr;\n  }\n\n  castLiteralToFloat(ast, retArr) {\n    this.pushState('casting-to-float');\n    this.astGeneric(ast, retArr);\n    this.popState('casting-to-float');\n    return retArr;\n  }\n\n  castValueToInteger(ast, retArr) {\n    this.pushState('casting-to-integer');\n    retArr.push('int(');\n    this.astGeneric(ast, retArr);\n    retArr.push(')');\n    this.popState('casting-to-integer');\n    return retArr;\n  }\n\n  castValueToFloat(ast, retArr) {\n    this.pushState('casting-to-float');\n    retArr.push('float(');\n    this.astGeneric(ast, retArr);\n    retArr.push(')');\n    this.popState('casting-to-float');\n    return retArr;\n  }\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n    }\n\n    const type = this.getType(idtNode);\n\n    const name = utils.sanitizeName(idtNode.name);\n    if (idtNode.name === 'Infinity') {\n      retArr.push('3.402823466e+38');\n    } else if (type === 'Boolean') {\n      if (this.argumentNames.indexOf(name) > -1) {\n        retArr.push(`bool(user_${name})`);\n      } else {\n        retArr.push(`user_${name}`);\n      }\n    } else {\n      retArr.push(`user_${name}`);\n    }\n\n    return retArr;\n  }\n\n  astForStatement(forNode, retArr) {\n    if (forNode.type !== 'ForStatement') {\n      throw this.astErrorOutput('Invalid for statement', forNode);\n    }\n\n    const initArr = [];\n    const testArr = [];\n    const updateArr = [];\n    const bodyArr = [];\n    let isSafe = null;\n\n    if (forNode.init) {\n      const { declarations } = forNode.init;\n      if (declarations.length > 1) {\n        isSafe = false;\n      }\n      this.astGeneric(forNode.init, initArr);\n      for (let i = 0; i < declarations.length; i++) {\n        if (declarations[i].init && declarations[i].init.type !== 'Literal') {\n          isSafe = false;\n        }\n      }\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.test) {\n      this.astGeneric(forNode.test, testArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.update) {\n      this.astGeneric(forNode.update, updateArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.body) {\n      this.pushState('loop-body');\n      this.astGeneric(forNode.body, bodyArr);\n      this.popState('loop-body');\n    }\n\n    if (isSafe === null) {\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n    }\n\n    if (isSafe) {\n      const initString = initArr.join('');\n      const initNeedsSemiColon = initString[initString.length - 1] !== ';';\n      retArr.push(`for (${initString}${initNeedsSemiColon ? ';' : ''}${testArr.join('')};${updateArr.join('')}){\\n`);\n      retArr.push(bodyArr.join(''));\n      retArr.push('}\\n');\n    } else {\n      const iVariableName = this.getInternalVariableName('safeI');\n      if (initArr.length > 0) {\n        retArr.push(initArr.join(''), '\\n');\n      }\n      retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n      if (testArr.length > 0) {\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\n      }\n      retArr.push(bodyArr.join(''));\n      retArr.push(`\\n${updateArr.join('')};`);\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astWhileStatement(whileNode, retArr) {\n    if (whileNode.type !== 'WhileStatement') {\n      throw this.astErrorOutput('Invalid while statement', whileNode);\n    }\n\n    const iVariableName = this.getInternalVariableName('safeI');\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n    retArr.push('if (!');\n    this.astGeneric(whileNode.test, retArr);\n    retArr.push(') break;\\n');\n    this.astGeneric(whileNode.body, retArr);\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n  astDoWhileStatement(doWhileNode, retArr) {\n    if (doWhileNode.type !== 'DoWhileStatement') {\n      throw this.astErrorOutput('Invalid while statement', doWhileNode);\n    }\n\n    const iVariableName = this.getInternalVariableName('safeI');\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n    this.astGeneric(doWhileNode.body, retArr);\n    retArr.push('if (!');\n    this.astGeneric(doWhileNode.test, retArr);\n    retArr.push(') break;\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n\n  astAssignmentExpression(assNode, retArr) {\n    if (assNode.operator === '%=') {\n      this.astGeneric(assNode.left, retArr);\n      retArr.push('=');\n      retArr.push('mod(');\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(',');\n      this.astGeneric(assNode.right, retArr);\n      retArr.push(')');\n    } else if (assNode.operator === '**=') {\n      this.astGeneric(assNode.left, retArr);\n      retArr.push('=');\n      retArr.push('pow(');\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(',');\n      this.astGeneric(assNode.right, retArr);\n      retArr.push(')');\n    } else {\n      const leftType = this.getType(assNode.left);\n      const rightType = this.getType(assNode.right);\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(assNode.operator);\n      if (leftType !== 'Integer' && rightType === 'Integer') {\n        retArr.push('float(');\n        this.astGeneric(assNode.right, retArr);\n        retArr.push(')');\n      } else {\n        this.astGeneric(assNode.right, retArr);\n      }\n      return retArr;\n    }\n  }\n\n  astBlockStatement(bNode, retArr) {\n    if (this.isState('loop-body')) {\n      this.pushState('block-body'); \n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      this.popState('block-body');\n    } else {\n      retArr.push('{\\n');\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astVariableDeclaration(varDecNode, retArr) {\n    const declarations = varDecNode.declarations;\n    if (!declarations || !declarations[0] || !declarations[0].init) {\n      throw this.astErrorOutput('Unexpected expression', varDecNode);\n    }\n    const result = [];\n    let lastType = null;\n    const declarationSets = [];\n    let declarationSet = [];\n    for (let i = 0; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      const init = declaration.init;\n      const info = this.getDeclaration(declaration.id);\n      const actualType = this.getType(declaration.init);\n      let type = actualType;\n      if (type === 'LiteralInteger') {\n        if (info.suggestedType === 'Integer') {\n          type = 'Integer';\n        } else {\n          type = 'Number';\n        }\n      }\n      const markupType = typeMap[type];\n      if (!markupType) {\n        throw this.astErrorOutput(`Markup type ${ type } not handled`, varDecNode);\n      }\n      const declarationResult = [];\n      if (actualType === 'Integer' && type === 'Integer') {\n        info.valueType = 'Number';\n        if (i === 0 || lastType === null) {\n          declarationResult.push('float ');\n        } else if (type !== lastType) {\n          throw new Error('Unhandled declaration');\n        }\n        lastType = type;\n        declarationResult.push(`user_${utils.sanitizeName(declaration.id.name)}=`);\n        declarationResult.push('float(');\n        this.astGeneric(init, declarationResult);\n        declarationResult.push(')');\n      } else {\n        info.valueType = type;\n        if (i === 0 || lastType === null) {\n          declarationResult.push(`${markupType} `);\n        } else if (type !== lastType) {\n          declarationSets.push(declarationSet.join(','));\n          declarationSet = [];\n          declarationResult.push(`${markupType} `);\n        }\n        lastType = type;\n        declarationResult.push(`user_${utils.sanitizeName(declaration.id.name)}=`);\n        if (actualType === 'Number' && type === 'Integer') {\n          if (init.left && init.left.type === 'Literal') {\n            this.astGeneric(init, declarationResult);\n          } else {\n            declarationResult.push('int(');\n            this.astGeneric(init, declarationResult);\n            declarationResult.push(')');\n          }\n        } else if (actualType === 'LiteralInteger' && type === 'Integer') {\n          this.castLiteralToInteger(init, declarationResult);\n        } else {\n          this.astGeneric(init, declarationResult);\n        }\n      }\n      declarationSet.push(declarationResult.join(''));\n    }\n\n    if (declarationSet.length > 0) {\n      declarationSets.push(declarationSet.join(','));\n    }\n\n    result.push(declarationSets.join(';'));\n\n    retArr.push(result.join(''));\n    retArr.push(';');\n    return retArr;\n  }\n\n  astIfStatement(ifNode, retArr) {\n    retArr.push('if (');\n    this.astGeneric(ifNode.test, retArr);\n    retArr.push(')');\n    if (ifNode.consequent.type === 'BlockStatement') {\n      this.astGeneric(ifNode.consequent, retArr);\n    } else {\n      retArr.push(' {\\n');\n      this.astGeneric(ifNode.consequent, retArr);\n      retArr.push('\\n}\\n');\n    }\n\n    if (ifNode.alternate) {\n      retArr.push('else ');\n      if (ifNode.alternate.type === 'BlockStatement' || ifNode.alternate.type === 'IfStatement') {\n        this.astGeneric(ifNode.alternate, retArr);\n      } else {\n        retArr.push(' {\\n');\n        this.astGeneric(ifNode.alternate, retArr);\n        retArr.push('\\n}\\n');\n      }\n    }\n    return retArr;\n  }\n\n  astSwitchStatement(ast, retArr) {\n    if (ast.type !== 'SwitchStatement') {\n      throw this.astErrorOutput('Invalid switch statement', ast);\n    }\n    const { discriminant, cases } = ast;\n    const type = this.getType(discriminant);\n    const varName = `switchDiscriminant${this.astKey(ast, '_')}`;\n    switch (type) {\n      case 'Float':\n      case 'Number':\n        retArr.push(`float ${varName} = `);\n        this.astGeneric(discriminant, retArr);\n        retArr.push(';\\n');\n        break;\n      case 'Integer':\n        retArr.push(`int ${varName} = `);\n        this.astGeneric(discriminant, retArr);\n        retArr.push(';\\n');\n        break;\n    }\n    if (cases.length === 1 && !cases[0].test) {\n      this.astGeneric(cases[0].consequent, retArr);\n      return retArr;\n    }\n\n    let fallingThrough = false;\n    let defaultResult = [];\n    let movingDefaultToEnd = false;\n    let pastFirstIf = false;\n    for (let i = 0; i < cases.length; i++) {\n      if (!cases[i].test) {\n        if (cases.length > i + 1) {\n          movingDefaultToEnd = true;\n          this.astGeneric(cases[i].consequent, defaultResult);\n          continue;\n        } else {\n          retArr.push(' else {\\n');\n        }\n      } else {\n        if (i === 0 || !pastFirstIf) {\n          pastFirstIf = true;\n          retArr.push(`if (${varName} == `);\n        } else {\n          if (fallingThrough) {\n            retArr.push(`${varName} == `);\n            fallingThrough = false;\n          } else {\n            retArr.push(` else if (${varName} == `);\n          }\n        }\n        if (type === 'Integer') {\n          const testType = this.getType(cases[i].test);\n          switch (testType) {\n            case 'Number':\n            case 'Float':\n              this.castValueToInteger(cases[i].test, retArr);\n              break;\n            case 'LiteralInteger':\n              this.castLiteralToInteger(cases[i].test, retArr);\n              break;\n          }\n        } else if (type === 'Float') {\n          const testType = this.getType(cases[i].test);\n          switch (testType) {\n            case 'LiteralInteger':\n              this.castLiteralToFloat(cases[i].test, retArr);\n              break;\n            case 'Integer':\n              this.castValueToFloat(cases[i].test, retArr);\n              break;\n          }\n        } else {\n          throw new Error('unhanlded');\n        }\n        if (!cases[i].consequent || cases[i].consequent.length === 0) {\n          fallingThrough = true;\n          retArr.push(' || ');\n          continue;\n        }\n        retArr.push(`) {\\n`);\n      }\n      this.astGeneric(cases[i].consequent, retArr);\n      retArr.push('\\n}');\n    }\n    if (movingDefaultToEnd) {\n      retArr.push(' else {');\n      retArr.push(defaultResult.join(''));\n      retArr.push('}');\n    }\n    return retArr;\n  }\n\n  astThisExpression(tNode, retArr) {\n    retArr.push('this');\n    return retArr;\n  }\n\n  astMemberExpression(mNode, retArr) {\n    const {\n      property,\n      name,\n      signature,\n      origin,\n      type,\n      xProperty,\n      yProperty,\n      zProperty\n    } = this.getMemberExpressionDetails(mNode);\n    switch (signature) {\n      case 'value.thread.value':\n      case 'this.thread.value':\n        if (name !== 'x' && name !== 'y' && name !== 'z') {\n          throw this.astErrorOutput('Unexpected expression, expected `this.thread.x`, `this.thread.y`, or `this.thread.z`', mNode);\n        }\n        retArr.push(`threadId.${name}`);\n        return retArr;\n      case 'this.output.value':\n        if (this.dynamicOutput) {\n          switch (name) {\n            case 'x':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.x)');\n              } else {\n                retArr.push('uOutputDim.x');\n              }\n              break;\n            case 'y':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.y)');\n              } else {\n                retArr.push('uOutputDim.y');\n              }\n              break;\n            case 'z':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.z)');\n              } else {\n                retArr.push('uOutputDim.z');\n              }\n              break;\n            default:\n              throw this.astErrorOutput('Unexpected expression', mNode);\n          }\n        } else {\n          switch (name) {\n            case 'x':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[0]);\n              } else {\n                retArr.push(this.output[0], '.0');\n              }\n              break;\n            case 'y':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[1]);\n              } else {\n                retArr.push(this.output[1], '.0');\n              }\n              break;\n            case 'z':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[2]);\n              } else {\n                retArr.push(this.output[2], '.0');\n              }\n              break;\n            default:\n              throw this.astErrorOutput('Unexpected expression', mNode);\n          }\n        }\n        return retArr;\n      case 'value':\n        throw this.astErrorOutput('Unexpected expression', mNode);\n      case 'value[]':\n      case 'value[][]':\n      case 'value[][][]':\n      case 'value[][][][]':\n      case 'value.value':\n        if (origin === 'Math') {\n          retArr.push(Math[name]);\n          return retArr;\n        }\n        const cleanName = utils.sanitizeName(name);\n        switch (property) {\n          case 'r':\n            retArr.push(`user_${ cleanName }.r`);\n            return retArr;\n          case 'g':\n            retArr.push(`user_${ cleanName }.g`);\n            return retArr;\n          case 'b':\n            retArr.push(`user_${ cleanName }.b`);\n            return retArr;\n          case 'a':\n            retArr.push(`user_${ cleanName }.a`);\n            return retArr;\n        }\n        break;\n      case 'this.constants.value':\n        if (typeof xProperty === 'undefined') {\n          switch (type) {\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              retArr.push(`constants_${ utils.sanitizeName(name) }`);\n              return retArr;\n          }\n        }\n        case 'this.constants.value[]':\n        case 'this.constants.value[][]':\n        case 'this.constants.value[][][]':\n        case 'this.constants.value[][][][]':\n          break;\n        case 'fn()[]':\n          this.astCallExpression(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(property));\n          retArr.push(']');\n          return retArr;\n        case 'fn()[][]':\n          this.astCallExpression(mNode.object.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(mNode.object.property));\n          retArr.push(']');\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(mNode.property));\n          retArr.push(']');\n          return retArr;\n        case '[][]':\n          this.astArrayExpression(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(property));\n          retArr.push(']');\n          return retArr;\n        default:\n          throw this.astErrorOutput('Unexpected expression', mNode);\n    }\n\n    if (mNode.computed === false) {\n      switch (type) {\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n        case 'Boolean':\n          retArr.push(`${origin}_${utils.sanitizeName(name)}`);\n          return retArr;\n      }\n    }\n\n    const markupName = `${origin}_${utils.sanitizeName(name)}`;\n\n    switch (type) {\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        this.astGeneric(mNode.object, retArr);\n        retArr.push('[');\n        retArr.push(this.memberExpressionPropertyMarkup(xProperty));\n        retArr.push(']');\n        break;\n      case 'HTMLImageArray':\n        retArr.push(`getImage3D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(1)':\n        retArr.push(`getFloatFromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(2)':\n      case 'Array2D(2)':\n      case 'Array3D(2)':\n        retArr.push(`getMemoryOptimizedVec2(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(2)':\n        retArr.push(`getVec2FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(3)':\n      case 'Array2D(3)':\n      case 'Array3D(3)':\n        retArr.push(`getMemoryOptimizedVec3(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(3)':\n        retArr.push(`getVec3FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(4)':\n      case 'Array2D(4)':\n      case 'Array3D(4)':\n        retArr.push(`getMemoryOptimizedVec4(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(4)':\n      case 'HTMLCanvas':\n      case 'OffscreenCanvas':\n      case 'HTMLImage':\n      case 'ImageBitmap':\n      case 'ImageData':\n      case 'HTMLVideo':\n        retArr.push(`getVec4FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'NumberTexture':\n      case 'Array':\n      case 'Array2D':\n      case 'Array3D':\n      case 'Array4D':\n      case 'Input':\n      case 'Number':\n      case 'Float':\n      case 'Integer':\n        if (this.precision === 'single') {\n          retArr.push(`getMemoryOptimized32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n        } else {\n          const bitRatio = (origin === 'user' ?\n            this.lookupFunctionArgumentBitRatio(this.name, name) :\n            this.constantBitRatios[name]\n          );\n          switch (bitRatio) {\n            case 1:\n              retArr.push(`get8(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            case 2:\n              retArr.push(`get16(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            case 4:\n            case 0:\n              retArr.push(`get32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            default:\n              throw new Error(`unhandled bit ratio of ${bitRatio}`);\n          }\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n        }\n        break;\n      case 'MemoryOptimizedNumberTexture':\n        retArr.push(`getMemoryOptimized32(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        retArr.push(`${markupName}[${this.memberExpressionPropertyMarkup(yProperty)}]`);\n        if (yProperty) {\n          retArr.push(`[${this.memberExpressionPropertyMarkup(xProperty)}]`);\n        }\n        break;\n      default:\n        throw new Error(`unhandled member expression \"${ type }\"`);\n    }\n    return retArr;\n  }\n\n  astCallExpression(ast, retArr) {\n    if (!ast.callee) {\n      throw this.astErrorOutput('Unknown CallExpression', ast);\n    }\n\n    let functionName = null;\n    const isMathFunction = this.isAstMathFunction(ast);\n\n    if (isMathFunction || (ast.callee.object && ast.callee.object.type === 'ThisExpression')) {\n      functionName = ast.callee.property.name;\n    }\n    else if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[0].type === 'Literal' && !isNaN(ast.callee.expressions[0].raw)) {\n      functionName = ast.callee.expressions[1].property.name;\n    } else {\n      functionName = ast.callee.name;\n    }\n\n    if (!functionName) {\n      throw this.astErrorOutput(`Unhandled function, couldn't find name`, ast);\n    }\n\n    switch (functionName) {\n      case 'pow':\n        functionName = '_pow';\n        break;\n      case 'round':\n        functionName = '_round';\n        break;\n    }\n\n    if (this.calledFunctions.indexOf(functionName) < 0) {\n      this.calledFunctions.push(functionName);\n    }\n\n    if (functionName === 'random' && this.plugins && this.plugins.length > 0) {\n      for (let i = 0; i < this.plugins.length; i++) {\n        const plugin = this.plugins[i];\n        if (plugin.functionMatch === 'Math.random()' && plugin.functionReplace) {\n          retArr.push(plugin.functionReplace);\n          return retArr;\n        }\n      }\n    }\n\n    if (this.onFunctionCall) {\n      this.onFunctionCall(this.name, functionName, ast.arguments);\n    }\n\n    retArr.push(functionName);\n\n    retArr.push('(');\n\n    if (isMathFunction) {\n      for (let i = 0; i < ast.arguments.length; ++i) {\n        const argument = ast.arguments[i];\n        const argumentType = this.getType(argument);\n        if (i > 0) {\n          retArr.push(', ');\n        }\n\n        switch (argumentType) {\n          case 'Integer':\n            this.castValueToFloat(argument, retArr);\n            break;\n          default:\n            this.astGeneric(argument, retArr);\n            break;\n        }\n      }\n    } else {\n      const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n      for (let i = 0; i < ast.arguments.length; ++i) {\n        const argument = ast.arguments[i];\n        let targetType = targetTypes[i];\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        const argumentType = this.getType(argument);\n        if (!targetType) {\n          this.triggerImplyArgumentType(functionName, i, argumentType, this);\n          targetType = argumentType;\n        }\n        switch (argumentType) {\n          case 'Boolean':\n            this.astGeneric(argument, retArr);\n            continue;\n          case 'Number':\n          case 'Float':\n            if (targetType === 'Integer') {\n              retArr.push('int(');\n              this.astGeneric(argument, retArr);\n              retArr.push(')');\n              continue;\n            } else if (targetType === 'Number' || targetType === 'Float') {\n              this.astGeneric(argument, retArr);\n              continue;\n            } else if (targetType === 'LiteralInteger') {\n              this.castLiteralToFloat(argument, retArr);\n              continue;\n            }\n            break;\n          case 'Integer':\n            if (targetType === 'Number' || targetType === 'Float') {\n              retArr.push('float(');\n              this.astGeneric(argument, retArr);\n              retArr.push(')');\n              continue;\n            } else if (targetType === 'Integer') {\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n          case 'LiteralInteger':\n            if (targetType === 'Integer') {\n              this.castLiteralToInteger(argument, retArr);\n              continue;\n            } else if (targetType === 'Number' || targetType === 'Float') {\n              this.castLiteralToFloat(argument, retArr);\n              continue;\n            } else if (targetType === 'LiteralInteger') {\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n          case 'Array(2)':\n          case 'Array(3)':\n          case 'Array(4)':\n            if (targetType === argumentType) {\n              if (argument.type === 'Identifier') {\n                retArr.push(`user_${utils.sanitizeName(argument.name)}`);\n              } else if (argument.type === 'ArrayExpression' || argument.type === 'MemberExpression' || argument.type === 'CallExpression') {\n                this.astGeneric(argument, retArr);\n              } else {\n                throw this.astErrorOutput(`Unhandled argument type ${ argument.type }`, ast);\n              }\n              continue;\n            }\n            break;\n          case 'HTMLCanvas':\n          case 'OffscreenCanvas':\n          case 'HTMLImage':\n          case 'ImageBitmap':\n          case 'ImageData':\n          case 'HTMLImageArray':\n          case 'HTMLVideo':\n          case 'ArrayTexture(1)':\n          case 'ArrayTexture(2)':\n          case 'ArrayTexture(3)':\n          case 'ArrayTexture(4)':\n          case 'Array':\n          case 'Input':\n            if (targetType === argumentType) {\n              if (argument.type !== 'Identifier') throw this.astErrorOutput(`Unhandled argument type ${ argument.type }`, ast);\n              this.triggerImplyArgumentBitRatio(this.name, argument.name, functionName, i);\n              const name = utils.sanitizeName(argument.name);\n              retArr.push(`user_${name},user_${name}Size,user_${name}Dim`);\n              continue;\n            }\n            break;\n        }\n        throw this.astErrorOutput(`Unhandled argument combination of ${ argumentType } and ${ targetType } for argument named \"${ argument.name }\"`, ast);\n      }\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  astArrayExpression(arrNode, retArr) {\n    const returnType = this.getType(arrNode);\n\n    const arrLen = arrNode.elements.length;\n\n    switch (returnType) {\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        retArr.push(`mat${arrLen}(`);\n        break;\n      default:\n        retArr.push(`vec${arrLen}(`);\n    }\n    for (let i = 0; i < arrLen; ++i) {\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      const subNode = arrNode.elements[i];\n      this.astGeneric(subNode, retArr)\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  memberExpressionXYZ(x, y, z, retArr) {\n    if (z) {\n      retArr.push(this.memberExpressionPropertyMarkup(z), ', ');\n    } else {\n      retArr.push('0, ');\n    }\n    if (y) {\n      retArr.push(this.memberExpressionPropertyMarkup(y), ', ');\n    } else {\n      retArr.push('0, ');\n    }\n    retArr.push(this.memberExpressionPropertyMarkup(x));\n    return retArr;\n  }\n\n  memberExpressionPropertyMarkup(property) {\n    if (!property) {\n      throw new Error('Property not set');\n    }\n    const type = this.getType(property);\n    const result = [];\n    switch (type) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(property, result);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(property, result);\n        break;\n      default:\n        this.astGeneric(property, result);\n    }\n    return result.join('');\n  }\n}\n\nconst typeMap = {\n  'Array': 'sampler2D',\n  'Array(2)': 'vec2',\n  'Array(3)': 'vec3',\n  'Array(4)': 'vec4',\n  'Matrix(2)': 'mat2',\n  'Matrix(3)': 'mat3',\n  'Matrix(4)': 'mat4',\n  'Array2D': 'sampler2D',\n  'Array3D': 'sampler2D',\n  'Boolean': 'bool',\n  'Float': 'float',\n  'Input': 'sampler2D',\n  'Integer': 'int',\n  'Number': 'float',\n  'LiteralInteger': 'float',\n  'NumberTexture': 'sampler2D',\n  'MemoryOptimizedNumberTexture': 'sampler2D',\n  'ArrayTexture(1)': 'sampler2D',\n  'ArrayTexture(2)': 'sampler2D',\n  'ArrayTexture(3)': 'sampler2D',\n  'ArrayTexture(4)': 'sampler2D',\n  'HTMLVideo': 'sampler2D',\n  'HTMLCanvas': 'sampler2D',\n  'OffscreenCanvas': 'sampler2D',\n  'HTMLImage': 'sampler2D',\n  'ImageBitmap': 'sampler2D',\n  'ImageData': 'sampler2D',\n  'HTMLImageArray': 'sampler2DArray',\n};\n\nconst operatorMap = {\n  '===': '==',\n  '!==': '!='\n};\n\nmodule.exports = {\n  WebGLFunctionNode\n};\n},{\"../../utils\":114,\"../function-node\":10}],39:[function(require,module,exports){\nconst { WebGLKernelValueBoolean } = require('./kernel-value/boolean');\nconst { WebGLKernelValueFloat } = require('./kernel-value/float');\nconst { WebGLKernelValueInteger } = require('./kernel-value/integer');\n\nconst { WebGLKernelValueHTMLImage } = require('./kernel-value/html-image');\nconst { WebGLKernelValueDynamicHTMLImage } = require('./kernel-value/dynamic-html-image');\n\nconst { WebGLKernelValueHTMLVideo } = require('./kernel-value/html-video');\nconst { WebGLKernelValueDynamicHTMLVideo } = require('./kernel-value/dynamic-html-video');\n\nconst { WebGLKernelValueSingleInput } = require('./kernel-value/single-input');\nconst { WebGLKernelValueDynamicSingleInput } = require('./kernel-value/dynamic-single-input');\n\nconst { WebGLKernelValueUnsignedInput } = require('./kernel-value/unsigned-input');\nconst { WebGLKernelValueDynamicUnsignedInput } = require('./kernel-value/dynamic-unsigned-input');\n\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('./kernel-value/memory-optimized-number-texture');\nconst { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } = require('./kernel-value/dynamic-memory-optimized-number-texture');\n\nconst { WebGLKernelValueNumberTexture } = require('./kernel-value/number-texture');\nconst { WebGLKernelValueDynamicNumberTexture } = require('./kernel-value/dynamic-number-texture');\n\nconst { WebGLKernelValueSingleArray } = require('./kernel-value/single-array');\nconst { WebGLKernelValueDynamicSingleArray } = require('./kernel-value/dynamic-single-array');\n\nconst { WebGLKernelValueSingleArray1DI } = require('./kernel-value/single-array1d-i');\nconst { WebGLKernelValueDynamicSingleArray1DI } = require('./kernel-value/dynamic-single-array1d-i');\n\nconst { WebGLKernelValueSingleArray2DI } = require('./kernel-value/single-array2d-i');\nconst { WebGLKernelValueDynamicSingleArray2DI } = require('./kernel-value/dynamic-single-array2d-i');\n\nconst { WebGLKernelValueSingleArray3DI } = require('./kernel-value/single-array3d-i');\nconst { WebGLKernelValueDynamicSingleArray3DI } = require('./kernel-value/dynamic-single-array3d-i');\n\nconst { WebGLKernelValueArray2 } = require('./kernel-value/array2');\nconst { WebGLKernelValueArray3 } = require('./kernel-value/array3');\nconst { WebGLKernelValueArray4 } = require('./kernel-value/array4');\n\nconst { WebGLKernelValueUnsignedArray } = require('./kernel-value/unsigned-array');\nconst { WebGLKernelValueDynamicUnsignedArray } = require('./kernel-value/dynamic-unsigned-array');\n\nconst kernelValueMaps = {\n  unsigned: {\n    dynamic: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Integer': WebGLKernelValueInteger,\n      'Float': WebGLKernelValueFloat,\n      'Array': WebGLKernelValueDynamicUnsignedArray,\n      'Array(2)': WebGLKernelValueArray2,\n      'Array(3)': WebGLKernelValueArray3,\n      'Array(4)': WebGLKernelValueArray4,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGLKernelValueDynamicUnsignedInput,\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueDynamicHTMLImage,\n      'OffscreenCanvas': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n      'ImageBitmap': WebGLKernelValueDynamicHTMLImage,\n      'ImageData': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Float': WebGLKernelValueFloat,\n      'Integer': WebGLKernelValueInteger,\n      'Array': WebGLKernelValueUnsignedArray,\n      'Array(2)': WebGLKernelValueArray2,\n      'Array(3)': WebGLKernelValueArray3,\n      'Array(4)': WebGLKernelValueArray4,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGLKernelValueUnsignedInput,\n      'NumberTexture': WebGLKernelValueNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueHTMLImage,\n      'OffscreenCanvas': WebGLKernelValueHTMLImage,\n      'HTMLImage': WebGLKernelValueHTMLImage,\n      'ImageBitmap': WebGLKernelValueHTMLImage,\n      'ImageData': WebGLKernelValueHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueHTMLVideo,\n    }\n  },\n  single: {\n    dynamic: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Integer': WebGLKernelValueInteger,\n      'Float': WebGLKernelValueFloat,\n      'Array': WebGLKernelValueDynamicSingleArray,\n      'Array(2)': WebGLKernelValueArray2,\n      'Array(3)': WebGLKernelValueArray3,\n      'Array(4)': WebGLKernelValueArray4,\n      'Array1D(2)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array1D(3)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array1D(4)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array2D(2)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array2D(3)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array2D(4)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array3D(2)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array3D(3)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array3D(4)': WebGLKernelValueDynamicSingleArray3DI,\n      'Input': WebGLKernelValueDynamicSingleInput,\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueDynamicHTMLImage,\n      'OffscreenCanvas': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n      'ImageBitmap': WebGLKernelValueDynamicHTMLImage,\n      'ImageData': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Float': WebGLKernelValueFloat,\n      'Integer': WebGLKernelValueInteger,\n      'Array': WebGLKernelValueSingleArray,\n      'Array(2)': WebGLKernelValueArray2,\n      'Array(3)': WebGLKernelValueArray3,\n      'Array(4)': WebGLKernelValueArray4,\n      'Array1D(2)': WebGLKernelValueSingleArray1DI,\n      'Array1D(3)': WebGLKernelValueSingleArray1DI,\n      'Array1D(4)': WebGLKernelValueSingleArray1DI,\n      'Array2D(2)': WebGLKernelValueSingleArray2DI,\n      'Array2D(3)': WebGLKernelValueSingleArray2DI,\n      'Array2D(4)': WebGLKernelValueSingleArray2DI,\n      'Array3D(2)': WebGLKernelValueSingleArray3DI,\n      'Array3D(3)': WebGLKernelValueSingleArray3DI,\n      'Array3D(4)': WebGLKernelValueSingleArray3DI,\n      'Input': WebGLKernelValueSingleInput,\n      'NumberTexture': WebGLKernelValueNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueHTMLImage,\n      'OffscreenCanvas': WebGLKernelValueHTMLImage,\n      'HTMLImage': WebGLKernelValueHTMLImage,\n      'ImageBitmap': WebGLKernelValueHTMLImage,\n      'ImageData': WebGLKernelValueHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueHTMLVideo,\n    }\n  },\n};\n\nfunction lookupKernelValueType(type, dynamic, precision, value) {\n  if (!type) {\n    throw new Error('type missing');\n  }\n  if (!dynamic) {\n    throw new Error('dynamic missing');\n  }\n  if (!precision) {\n    throw new Error('precision missing');\n  }\n  if (value.type) {\n    type = value.type;\n  }\n  const types = kernelValueMaps[precision][dynamic];\n  if (types[type] === false) {\n    return null;\n  } else if (types[type] === undefined) {\n    throw new Error(`Could not find a KernelValue for ${ type }`);\n  }\n  return types[type];\n}\n\nmodule.exports = {\n  lookupKernelValueType,\n  kernelValueMaps,\n};\n},{\"./kernel-value/array2\":41,\"./kernel-value/array3\":42,\"./kernel-value/array4\":43,\"./kernel-value/boolean\":44,\"./kernel-value/dynamic-html-image\":45,\"./kernel-value/dynamic-html-video\":46,\"./kernel-value/dynamic-memory-optimized-number-texture\":47,\"./kernel-value/dynamic-number-texture\":48,\"./kernel-value/dynamic-single-array\":49,\"./kernel-value/dynamic-single-array1d-i\":50,\"./kernel-value/dynamic-single-array2d-i\":51,\"./kernel-value/dynamic-single-array3d-i\":52,\"./kernel-value/dynamic-single-input\":53,\"./kernel-value/dynamic-unsigned-array\":54,\"./kernel-value/dynamic-unsigned-input\":55,\"./kernel-value/float\":56,\"./kernel-value/html-image\":57,\"./kernel-value/html-video\":58,\"./kernel-value/integer\":60,\"./kernel-value/memory-optimized-number-texture\":61,\"./kernel-value/number-texture\":62,\"./kernel-value/single-array\":63,\"./kernel-value/single-array1d-i\":64,\"./kernel-value/single-array2d-i\":65,\"./kernel-value/single-array3d-i\":66,\"./kernel-value/single-input\":67,\"./kernel-value/unsigned-array\":68,\"./kernel-value/unsigned-input\":69}],40:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\nconst { Input } = require('../../../input');\n\nclass WebGLKernelArray extends WebGLKernelValue {\n  checkSize(width, height) {\n    if (!this.kernel.validate) return;\n    const { maxTextureSize } = this.kernel.constructor.features;\n    if (width > maxTextureSize || height > maxTextureSize) {\n      if (width > height) {\n        throw new Error(`Argument texture width of ${width} larger than maximum size of ${maxTextureSize} for your GPU`);\n      } else if (width < height) {\n        throw new Error(`Argument texture height of ${height} larger than maximum size of ${maxTextureSize} for your GPU`);\n      } else {\n        throw new Error(`Argument texture height and width of ${height} larger than maximum size of ${maxTextureSize} for your GPU`);\n      }\n    }\n  }\n\n  setup() {\n    this.requestTexture();\n    this.setupTexture();\n    this.defineTexture();\n  }\n\n  requestTexture() {\n    this.texture = this.onRequestTexture();\n  }\n\n  defineTexture() {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  }\n\n  setupTexture() {\n    this.contextHandle = this.onRequestContextHandle();\n    this.index = this.onRequestIndex();\n    this.dimensionsId = this.id + 'Dim';\n    this.sizeId = this.id + 'Size';\n  }\n\n  getBitRatio(value) {\n    if (Array.isArray(value[0])) {\n      return this.getBitRatio(value[0]);\n    } else if (value.constructor === Input) {\n      return this.getBitRatio(value.value);\n    }\n    switch (value.constructor) {\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Int8Array:\n        return 1;\n      case Uint16Array:\n      case Int16Array:\n        return 2;\n      case Float32Array:\n      case Int32Array:\n      default:\n        return 4;\n    }\n  }\n\n  destroy() {\n    if (this.prevArg) {\n      this.prevArg.delete();\n    }\n    this.context.deleteTexture(this.texture);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelArray\n};\n},{\"../../../input\":110,\"./index\":59}],41:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueArray2 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec2 ${this.id} = vec2(${value[0]},${value[1]});\\n`;\n    }\n    return `uniform vec2 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform2fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueArray2\n};\n},{\"./index\":59}],42:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueArray3 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec3 ${this.id} = vec3(${value[0]},${value[1]},${value[2]});\\n`;\n    }\n    return `uniform vec3 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform3fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueArray3\n};\n},{\"./index\":59}],43:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueArray4 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec4 ${this.id} = vec4(${value[0]},${value[1]},${value[2]},${value[3]});\\n`;\n    }\n    return `uniform vec4 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform4fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueArray4\n};\n},{\"./index\":59}],44:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueBoolean extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const bool ${this.id} = ${value};\\n`;\n    }\n    return `uniform bool ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueBoolean\n};\n},{\"../../../utils\":114,\"./index\":59}],45:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueHTMLImage } = require('./html-image');\n\nclass WebGLKernelValueDynamicHTMLImage extends WebGLKernelValueHTMLImage {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    const { width, height } = value;\n    this.checkSize(width, height);\n    this.dimensions = [width, height, 1];\n    this.textureSize = [width, height];\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicHTMLImage\n};\n},{\"../../../utils\":114,\"./html-image\":57}],46:[function(require,module,exports){\nconst { WebGLKernelValueDynamicHTMLImage } = require('./dynamic-html-image');\n\nclass WebGLKernelValueDynamicHTMLVideo extends WebGLKernelValueDynamicHTMLImage {}\n\nmodule.exports = {\n  WebGLKernelValueDynamicHTMLVideo\n};\n},{\"./dynamic-html-image\":45}],47:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('./memory-optimized-number-texture');\n\nclass WebGLKernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    this.dimensions = inputTexture.dimensions;\n    this.checkSize(inputTexture.size[0], inputTexture.size[1]);\n    this.textureSize = inputTexture.size;\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(inputTexture);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"./memory-optimized-number-texture\":61}],48:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueNumberTexture } = require('./number-texture');\n\nclass WebGLKernelValueDynamicNumberTexture extends WebGLKernelValueNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = value.dimensions;\n    this.checkSize(value.size[0], value.size[1]);\n    this.textureSize = value.size;\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicNumberTexture\n};\n},{\"../../../utils\":114,\"./number-texture\":62}],49:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray } = require('./single-array');\n\nclass WebGLKernelValueDynamicSingleArray extends WebGLKernelValueSingleArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray\n};\n},{\"../../../utils\":114,\"./single-array\":63}],50:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray1DI } = require('./single-array1d-i');\n\nclass WebGLKernelValueDynamicSingleArray1DI extends WebGLKernelValueSingleArray1DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray1DI\n};\n},{\"../../../utils\":114,\"./single-array1d-i\":64}],51:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray2DI } = require('./single-array2d-i');\n\nclass WebGLKernelValueDynamicSingleArray2DI extends WebGLKernelValueSingleArray2DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray2DI\n};\n},{\"../../../utils\":114,\"./single-array2d-i\":65}],52:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray3DI } = require('./single-array3d-i');\n\nclass WebGLKernelValueDynamicSingleArray3DI extends WebGLKernelValueSingleArray3DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray3DI\n};\n},{\"../../../utils\":114,\"./single-array3d-i\":66}],53:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleInput } = require('./single-input');\n\nclass WebGLKernelValueDynamicSingleInput extends WebGLKernelValueSingleInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleInput\n};\n},{\"../../../utils\":114,\"./single-input\":67}],54:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedArray } = require('./unsigned-array');\n\nclass WebGLKernelValueDynamicUnsignedArray extends WebGLKernelValueUnsignedArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    const Type = this.getTransferArrayType(value);\n    this.preUploadValue = new Type(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicUnsignedArray\n};\n},{\"../../../utils\":114,\"./unsigned-array\":68}],55:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedInput } = require('./unsigned-input');\n\nclass WebGLKernelValueDynamicUnsignedInput extends WebGLKernelValueUnsignedInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    const Type = this.getTransferArrayType(value.value);\n    this.preUploadValue = new Type(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicUnsignedInput\n};\n},{\"../../../utils\":114,\"./unsigned-input\":69}],56:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueFloat extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      if (Number.isInteger(value)) {\n        return `const float ${this.id} = ${value}.0;\\n`;\n      }\n      return `const float ${this.id} = ${value};\\n`;\n    }\n    return `uniform float ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1f(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueFloat\n};\n},{\"../../../utils\":114,\"./index\":59}],57:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueHTMLImage extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const { width, height } = value;\n    this.checkSize(width, height);\n    this.dimensions = [width, height, 1];\n    this.textureSize = [width, height];\n    this.uploadValue = value;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputImage) {\n    if (inputImage.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputImage.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue = inputImage);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueHTMLImage\n};\n},{\"../../../utils\":114,\"./array\":40}],58:[function(require,module,exports){\nconst { WebGLKernelValueHTMLImage } = require('./html-image');\n\nclass WebGLKernelValueHTMLVideo extends WebGLKernelValueHTMLImage {}\n\nmodule.exports = {\n  WebGLKernelValueHTMLVideo\n};\n},{\"./html-image\":57}],59:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { KernelValue } = require('../../kernel-value');\n\nclass WebGLKernelValue extends KernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.dimensionsId = null;\n    this.sizeId = null;\n    this.initialValueConstructor = value.constructor;\n    this.onRequestTexture = settings.onRequestTexture;\n    this.onRequestIndex = settings.onRequestIndex;\n    this.uploadValue = null;\n    this.textureSize = null;\n    this.bitRatio = null;\n    this.prevArg = null;\n  }\n\n  get id() {\n    return `${this.origin}_${utils.sanitizeName(this.name)}`;\n  }\n\n  setup() {}\n\n  getTransferArrayType(value) {\n    if (Array.isArray(value[0])) {\n      return this.getTransferArrayType(value[0]);\n    }\n    switch (value.constructor) {\n      case Array:\n      case Int32Array:\n      case Int16Array:\n      case Int8Array:\n        return Float32Array;\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Uint16Array:\n      case Uint32Array:\n      case Float32Array:\n      case Float64Array:\n        return value.constructor;\n    }\n    console.warn('Unfamiliar constructor type.  Will go ahead and use, but likley this may result in a transfer of zeros');\n    return value.constructor;\n  }\n\n  getStringValueHandler() {\n    throw new Error(`\"getStringValueHandler\" not implemented on ${this.constructor.name}`);\n  }\n\n  getVariablePrecisionString() {\n    return this.kernel.getVariablePrecisionString(this.textureSize || undefined, this.tactic || undefined);\n  }\n\n  destroy() {}\n}\n\nmodule.exports = {\n  WebGLKernelValue\n};\n},{\"../../../utils\":114,\"../../kernel-value\":35}],60:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueInteger extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const int ${this.id} = ${ parseInt(value) };\\n`;\n    }\n    return `uniform int ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueInteger\n};\n},{\"../../../utils\":114,\"./index\":59}],61:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nconst sameError = `Source and destination textures are the same.  Use immutable = true and manually cleanup kernel output texture memory with texture.delete()`;\n\nclass WebGLKernelValueMemoryOptimizedNumberTexture extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const [width, height] = value.size;\n    this.checkSize(width, height);\n    this.dimensions = value.dimensions;\n    this.textureSize = value.size;\n    this.uploadValue = value.texture;\n    this.forceUploadEachRun = true;\n  }\n\n  setup() {\n    this.setupTexture();\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    if (inputTexture.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputTexture.constructor);\n      return;\n    }\n    if (this.checkContext && inputTexture.context !== this.context) {\n      throw new Error(`Value ${this.name} (${this.type}) must be from same context`);\n    }\n\n    const { kernel, context: gl } = this;\n    if (kernel.pipeline) {\n      if (kernel.immutable) {\n        kernel.updateTextureArgumentRefs(this, inputTexture);\n      } else {\n        if (kernel.texture && kernel.texture.texture === inputTexture.texture) {\n          throw new Error(sameError);\n        } else if (kernel.mappedTextures) {\n          const { mappedTextures } = kernel;\n          for (let i = 0; i < mappedTextures.length; i++) {\n            if (mappedTextures[i].texture === inputTexture.texture) {\n              throw new Error(sameError);\n            }\n          }\n        }\n      }\n    }\n\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueMemoryOptimizedNumberTexture,\n  sameError\n};\n},{\"../../../utils\":114,\"./array\":40}],62:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\nconst { sameError } = require('./memory-optimized-number-texture');\n\nclass WebGLKernelValueNumberTexture extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const [width, height] = value.size;\n    this.checkSize(width, height);\n    const { size: textureSize, dimensions } = value;\n    this.bitRatio = this.getBitRatio(value);\n    this.dimensions = dimensions;\n    this.textureSize = textureSize;\n    this.uploadValue = value.texture;\n    this.forceUploadEachRun = true;\n  }\n\n  setup() {\n    this.setupTexture();\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    if (inputTexture.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputTexture.constructor);\n      return;\n    }\n    if (this.checkContext && inputTexture.context !== this.context) {\n      throw new Error(`Value ${this.name} (${this.type}) must be from same context`);\n    }\n\n    const { kernel, context: gl } = this;\n    if (kernel.pipeline) {\n      if (kernel.immutable) {\n        kernel.updateTextureArgumentRefs(this, inputTexture);\n      } else {\n        if (kernel.texture && kernel.texture.texture === inputTexture.texture) {\n          throw new Error(sameError);\n        } else if (kernel.mappedTextures) {\n          const { mappedTextures } = kernel;\n          for (let i = 0; i < mappedTextures.length; i++) {\n            if (mappedTextures[i].texture === inputTexture.texture) {\n              throw new Error(sameError);\n            }\n          }\n        }\n      }\n    }\n\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueNumberTexture\n};\n},{\"../../../utils\":114,\"./array\":40,\"./memory-optimized-number-texture\":61}],63:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray\n};\n},{\"../../../utils\":114,\"./array\":40}],64:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray1DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], 1, 1]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten2dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray1DI\n};\n},{\"../../../utils\":114,\"./array\":40}],65:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray2DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], 1]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten3dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray2DI\n};\n},{\"../../../utils\":114,\"./array\":40}],66:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray3DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], valueDimensions[3]]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten4dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray3DI\n};\n},{\"../../../utils\":114,\"./array\":40}],67:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleInput extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}.value, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    if (input.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(input.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleInput\n};\n},{\"../../../utils\":114,\"./array\":40}],68:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueUnsignedArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = this.getBitRatio(value);\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.TranserArrayType = this.getTransferArrayType(value);\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\n      `flattenTo(${this.varName}, preUploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.preUploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueUnsignedArray\n};\n},{\"../../../utils\":114,\"./array\":40}],69:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueUnsignedInput extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = this.getBitRatio(value);\n    const [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.TranserArrayType = this.getTransferArrayType(value.value);\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\n      `flattenTo(${this.varName}.value, preUploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    if (input.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.preUploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueUnsignedInput\n};\n},{\"../../../utils\":114,\"./array\":40}],70:[function(require,module,exports){\nconst { GLKernel } = require('../gl/kernel');\nconst { FunctionBuilder } = require('../function-builder');\nconst { WebGLFunctionNode } = require('./function-node');\nconst { utils } = require('../../utils');\nconst mrud = require('../../plugins/math-random-uniformly-distributed');\nconst { fragmentShader } = require('./fragment-shader');\nconst { vertexShader } = require('./vertex-shader');\nconst { glKernelString } = require('../gl/kernel-string');\nconst { lookupKernelValueType } = require('./kernel-value-maps');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\nlet features = null;\n\nconst plugins = [mrud];\nconst canvases = [];\nconst maxTexSizes = {};\n\n\nclass WebGLKernel extends GLKernel {\n  static get isSupported() {\n    if (isSupported !== null) {\n      return isSupported;\n    }\n    this.setupFeatureChecks();\n    isSupported = this.isContextMatch(testContext);\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    if (typeof document !== 'undefined') {\n      testCanvas = document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      testCanvas = new OffscreenCanvas(0, 0);\n    }\n    if (!testCanvas) return;\n    testContext = testCanvas.getContext('webgl') || testCanvas.getContext('experimental-webgl');\n    if (!testContext || !testContext.getExtension) return;\n    testExtensions = {\n      OES_texture_float: testContext.getExtension('OES_texture_float'),\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\n    };\n    features = this.getFeatures();\n  }\n\n  static isContextMatch(context) {\n    if (typeof WebGLRenderingContext !== 'undefined') {\n      return context instanceof WebGLRenderingContext;\n    }\n    return false;\n  }\n\n  static getIsTextureFloat() {\n    return Boolean(testExtensions.OES_texture_float);\n  }\n\n  static getIsDrawBuffers() {\n    return Boolean(testExtensions.WEBGL_draw_buffers);\n  }\n\n  static getChannelCount() {\n    return testExtensions.WEBGL_draw_buffers ?\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\n      1;\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static lookupKernelValueType(type, dynamic, precision, value) {\n    return lookupKernelValueType(type, dynamic, precision, value);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  static get fragmentShader() {\n    return fragmentShader;\n  }\n\n  static get vertexShader() {\n    return vertexShader;\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.program = null;\n    this.pipeline = settings.pipeline;\n    this.endianness = utils.systemEndianness();\n    this.extensions = {};\n    this.argumentTextureCount = 0;\n    this.constantTextureCount = 0;\n    this.fragShader = null;\n    this.vertShader = null;\n    this.drawBuffersMap = null;\n\n    this.maxTexSize = null;\n    this.onRequestSwitchKernel = null;\n\n    this.texture = null;\n    this.mappedTextures = null;\n    this.mergeSettings(source.settings || settings);\n\n    this.threadDim = null;\n    this.framebuffer = null;\n    this.buffer = null;\n\n    this.textureCache = [];\n    this.programUniformLocationCache = {};\n    this.uniform1fCache = {};\n    this.uniform1iCache = {};\n    this.uniform2fCache = {};\n    this.uniform2fvCache = {};\n    this.uniform2ivCache = {};\n    this.uniform3fvCache = {};\n    this.uniform3ivCache = {};\n    this.uniform4fvCache = {};\n    this.uniform4ivCache = {};\n  }\n\n  initCanvas() {\n    if (typeof document !== 'undefined') {\n      const canvas = document.createElement('canvas');\n      canvas.width = 2;\n      canvas.height = 2;\n      return canvas;\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(0, 0);\n    }\n  }\n\n  initContext() {\n    const settings = {\n      alpha: false,\n      depth: false,\n      antialias: false\n    };\n    return this.canvas.getContext('webgl', settings) || this.canvas.getContext('experimental-webgl', settings);\n  }\n\n  initPlugins(settings) {\n    const pluginsToUse = [];\n    const { source } = this;\n    if (typeof source === 'string') {\n      for (let i = 0; i < plugins.length; i++) {\n        const plugin = plugins[i];\n        if (source.match(plugin.functionMatch)) {\n          pluginsToUse.push(plugin);\n        }\n      }\n    } else if (typeof source === 'object') {\n      if (settings.pluginNames) { \n        for (let i = 0; i < plugins.length; i++) {\n          const plugin = plugins[i];\n          const usePlugin = settings.pluginNames.some(pluginName => pluginName === plugin.name);\n          if (usePlugin) {\n            pluginsToUse.push(plugin);\n          }\n        }\n      }\n    }\n    return pluginsToUse;\n  }\n\n  initExtensions() {\n    this.extensions = {\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\n      WEBGL_color_buffer_float: this.context.getExtension('WEBGL_color_buffer_float'),\n    };\n  }\n\n  validateSettings(args) {\n    if (!this.validate) {\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, this.output);\n      return;\n    }\n\n    const { features } = this.constructor;\n\n    if (this.optimizeFloatMemory === true && !features.isTextureFloat) {\n      throw new Error('Float textures are not supported');\n    } else if (this.precision === 'single' && !features.isFloatRead) {\n      throw new Error('Single precision not supported');\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\n    }\n\n    if (this.subKernels && this.subKernels.length > 0 && !this.extensions.WEBGL_draw_buffers) {\n      throw new Error('could not instantiate draw buffers extension');\n    }\n\n    if (this.fixIntegerDivisionAccuracy === null) {\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n      this.fixIntegerDivisionAccuracy = false;\n    }\n\n    this.checkOutput();\n\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      switch (argType) {\n        case 'Array':\n          this.output = utils.getDimensions(argType);\n          break;\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n          this.output = args[0].output;\n          break;\n        default:\n          throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n\n      if (this.precision === 'precision') {\n        this.precision = 'unsigned';\n        console.warn('Cannot use graphical mode and single precision at the same time');\n      }\n\n      this.texSize = utils.clone(this.output);\n      return;\n    } else if (this.precision === null && features.isTextureFloat) {\n      this.precision = 'single';\n    }\n\n    this.texSize = utils.getKernelTextureSize({\n      optimizeFloatMemory: this.optimizeFloatMemory,\n      precision: this.precision,\n    }, this.output);\n\n    this.checkTextureSize();\n  }\n\n  updateMaxTexSize() {\n    const { texSize, canvas } = this;\n    if (this.maxTexSize === null) {\n      let canvasIndex = canvases.indexOf(canvas);\n      if (canvasIndex === -1) {\n        canvasIndex = canvases.length;\n        canvases.push(canvas);\n        maxTexSizes[canvasIndex] = [texSize[0], texSize[1]];\n      }\n      this.maxTexSize = maxTexSizes[canvasIndex];\n    }\n    if (this.maxTexSize[0] < texSize[0]) {\n      this.maxTexSize[0] = texSize[0];\n    }\n    if (this.maxTexSize[1] < texSize[1]) {\n      this.maxTexSize[1] = texSize[1];\n    }\n  }\n\n  setupArguments(args) {\n    this.kernelArguments = [];\n    this.argumentTextureCount = 0;\n    const needsArgumentTypes = this.argumentTypes === null;\n    if (needsArgumentTypes) {\n      this.argumentTypes = [];\n    }\n    this.argumentSizes = [];\n    this.argumentBitRatios = [];\n\n    if (args.length < this.argumentNames.length) {\n      throw new Error('not enough arguments for kernel');\n    } else if (args.length > this.argumentNames.length) {\n      throw new Error('too many arguments for kernel');\n    }\n\n    const { context: gl } = this;\n    let textureIndexes = 0;\n\n    const onRequestTexture = () => {\n      return this.createTexture();\n    };\n    const onRequestIndex = () => {\n      return this.constantTextureCount + textureIndexes++;\n    };\n    const onUpdateValueMismatch = (constructor) => {\n      this.switchKernels({\n        type: 'argumentMismatch',\n        needed: constructor\n      });\n    };\n    const onRequestContextHandle = () => {\n      return gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount++;\n    };\n\n    for (let index = 0; index < args.length; index++) {\n      const value = args[index];\n      const name = this.argumentNames[index];\n      let type;\n      if (needsArgumentTypes) {\n        type = utils.getVariableType(value, this.strictIntegers);\n        this.argumentTypes.push(type);\n      } else {\n        type = this.argumentTypes[index];\n      }\n      const KernelValue = this.constructor.lookupKernelValueType(type, this.dynamicArguments ? 'dynamic' : 'static', this.precision, args[index]);\n      if (KernelValue === null) {\n        return this.requestFallback(args);\n      }\n      const kernelArgument = new KernelValue(value, {\n        name,\n        type,\n        tactic: this.tactic,\n        origin: 'user',\n        context: gl,\n        checkContext: this.checkContext,\n        kernel: this,\n        strictIntegers: this.strictIntegers,\n        onRequestTexture,\n        onRequestIndex,\n        onUpdateValueMismatch,\n        onRequestContextHandle,\n      });\n      this.kernelArguments.push(kernelArgument);\n      kernelArgument.setup();\n      this.argumentSizes.push(kernelArgument.textureSize);\n      this.argumentBitRatios[index] = kernelArgument.bitRatio;\n    }\n  }\n\n  createTexture() {\n    const texture = this.context.createTexture();\n    this.textureCache.push(texture);\n    return texture;\n  }\n\n  setupConstants(args) {\n    const { context: gl } = this;\n    this.kernelConstants = [];\n    this.forceUploadKernelConstants = [];\n    let needsConstantTypes = this.constantTypes === null;\n    if (needsConstantTypes) {\n      this.constantTypes = {};\n    }\n    this.constantBitRatios = {};\n    let textureIndexes = 0;\n    for (const name in this.constants) {\n      const value = this.constants[name];\n      let type;\n      if (needsConstantTypes) {\n        type = utils.getVariableType(value, this.strictIntegers);\n        this.constantTypes[name] = type;\n      } else {\n        type = this.constantTypes[name];\n      }\n      const KernelValue = this.constructor.lookupKernelValueType(type, 'static', this.precision, value);\n      if (KernelValue === null) {\n        return this.requestFallback(args);\n      }\n      const kernelValue = new KernelValue(value, {\n        name,\n        type,\n        tactic: this.tactic,\n        origin: 'constants',\n        context: this.context,\n        checkContext: this.checkContext,\n        kernel: this,\n        strictIntegers: this.strictIntegers,\n        onRequestTexture: () => {\n          return this.createTexture();\n        },\n        onRequestIndex: () => {\n          return textureIndexes++;\n        },\n        onRequestContextHandle: () => {\n          return gl.TEXTURE0 + this.constantTextureCount++;\n        }\n      });\n      this.constantBitRatios[name] = kernelValue.bitRatio;\n      this.kernelConstants.push(kernelValue);\n      kernelValue.setup();\n      if (kernelValue.forceUploadEachRun) {\n        this.forceUploadKernelConstants.push(kernelValue);\n      }\n    }\n  }\n\n  build() {\n    if (this.built) return;\n    this.initExtensions();\n    this.validateSettings(arguments);\n    this.setupConstants(arguments);\n    if (this.fallbackRequested) return;\n    this.setupArguments(arguments);\n    if (this.fallbackRequested) return;\n    this.updateMaxTexSize();\n    this.translateSource();\n    const failureResult = this.pickRenderStrategy(arguments);\n    if (failureResult) {\n      return failureResult;\n    }\n    const { texSize, context: gl, canvas } = this;\n    gl.enable(gl.SCISSOR_TEST);\n    if (this.pipeline && this.precision === 'single') {\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      canvas.width = this.maxTexSize[0];\n      canvas.height = this.maxTexSize[1];\n    } else {\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      canvas.width = this.maxTexSize[0];\n      canvas.height = this.maxTexSize[1];\n    }\n    const threadDim = this.threadDim = Array.from(this.output);\n    while (threadDim.length < 3) {\n      threadDim.push(1);\n    }\n\n    const compiledVertexShader = this.getVertexShader(arguments);\n    const vertShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertShader, compiledVertexShader);\n    gl.compileShader(vertShader);\n    this.vertShader = vertShader;\n\n    const compiledFragmentShader = this.getFragmentShader(arguments);\n    const fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragShader, compiledFragmentShader);\n    gl.compileShader(fragShader);\n    this.fragShader = fragShader;\n\n    if (this.debug) {\n      console.log('GLSL Shader Output:');\n      console.log(compiledFragmentShader);\n    }\n\n    if (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\n      throw new Error('Error compiling vertex shader: ' + gl.getShaderInfoLog(vertShader));\n    }\n    if (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {\n      throw new Error('Error compiling fragment shader: ' + gl.getShaderInfoLog(fragShader));\n    }\n\n    const program = this.program = gl.createProgram();\n    gl.attachShader(program, vertShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    this.framebuffer = gl.createFramebuffer();\n    this.framebuffer.width = texSize[0];\n    this.framebuffer.height = texSize[1];\n    this.rawValueFramebuffers = {};\n\n    const vertices = new Float32Array([-1, -1,\n      1, -1, -1, 1,\n      1, 1\n    ]);\n    const texCoords = new Float32Array([\n      0, 0,\n      1, 0,\n      0, 1,\n      1, 1\n    ]);\n\n    const texCoordOffset = vertices.byteLength;\n\n    let buffer = this.buffer;\n    if (!buffer) {\n      buffer = this.buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, vertices.byteLength + texCoords.byteLength, gl.STATIC_DRAW);\n    } else {\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    }\n\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, vertices);\n    gl.bufferSubData(gl.ARRAY_BUFFER, texCoordOffset, texCoords);\n\n    const aPosLoc = gl.getAttribLocation(this.program, 'aPos');\n    gl.enableVertexAttribArray(aPosLoc);\n    gl.vertexAttribPointer(aPosLoc, 2, gl.FLOAT, false, 0, 0);\n    const aTexCoordLoc = gl.getAttribLocation(this.program, 'aTexCoord');\n    gl.enableVertexAttribArray(aTexCoordLoc);\n    gl.vertexAttribPointer(aTexCoordLoc, 2, gl.FLOAT, false, 0, texCoordOffset);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\n    let i = 0;\n    gl.useProgram(this.program);\n    for (let p in this.constants) {\n      this.kernelConstants[i++].updateValue(this.constants[p]);\n    }\n\n    this._setupOutputTexture();\n    if (\n      this.subKernels !== null &&\n      this.subKernels.length > 0\n    ) {\n      this._mappedTextureSwitched = {};\n      this._setupSubOutputTextures();\n    }\n    this.buildSignature(arguments);\n    this.built = true;\n  }\n\n  translateSource() {\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGLFunctionNode, {\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n    });\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\n    this.setupReturnTypes(functionBuilder);\n  }\n\n  setupReturnTypes(functionBuilder) {\n    if (!this.graphical && !this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n\n    if (this.subKernels && this.subKernels.length > 0) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        const subKernel = this.subKernels[i];\n        if (!subKernel.returnType) {\n          subKernel.returnType = functionBuilder.getSubKernelResultType(i);\n        }\n      }\n    }\n  }\n\n  run() {\n    const { kernelArguments, texSize, forceUploadKernelConstants, context: gl } = this;\n\n    gl.useProgram(this.program);\n    gl.scissor(0, 0, texSize[0], texSize[1]);\n    if (this.dynamicOutput) {\n      this.setUniform3iv('uOutputDim', new Int32Array(this.threadDim));\n      this.setUniform2iv('uTexSize', texSize);\n    }\n\n    this.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\n\n    for (let i = 0; i < forceUploadKernelConstants.length; i++) {\n      const constant = forceUploadKernelConstants[i];\n      constant.updateValue(this.constants[constant.name]);\n      if (this.switchingKernels) return;\n    }\n    for (let i = 0; i < kernelArguments.length; i++) {\n      kernelArguments[i].updateValue(arguments[i]);\n      if (this.switchingKernels) return;\n    }\n\n    if (this.plugins) {\n      for (let i = 0; i < this.plugins.length; i++) {\n        const plugin = this.plugins[i];\n        if (plugin.onBeforeRun) {\n          plugin.onBeforeRun(this);\n        }\n      }\n    }\n\n    if (this.graphical) {\n      if (this.pipeline) {\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n        if (this.immutable) {\n          this._replaceOutputTexture();\n        }\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        return this.immutable ? this.texture.clone() : this.texture;\n      }\n      gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n      return;\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    if (this.immutable) {\n      this._replaceOutputTexture();\n    }\n\n    if (this.subKernels !== null) {\n      if (this.immutable) {\n        this._replaceSubOutputTextures();\n      }\n      this.drawBuffers();\n    }\n\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n  drawBuffers() {\n    this.extensions.WEBGL_draw_buffers.drawBuffersWEBGL(this.drawBuffersMap);\n  }\n\n  getInternalFormat() {\n    return this.context.RGBA;\n  }\n  getTextureFormat() {\n    const { context: gl } = this;\n    switch (this.getInternalFormat()) {\n      case gl.RGBA:\n        return gl.RGBA;\n      default:\n        throw new Error('Unknown internal format');\n    }\n  }\n\n  _replaceOutputTexture() {\n    if (this.texture.beforeMutate() || this._textureSwitched) {\n      const gl = this.context;\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      this._textureSwitched = false;\n    }\n  }\n\n  _setupOutputTexture() {\n    const gl = this.context;\n    const texSize = this.texSize;\n    if (this.texture) {\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      return;\n    }\n    const texture = this.createTexture();\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    const format = this.getInternalFormat();\n    if (this.precision === 'single') {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, format, gl.UNSIGNED_BYTE, null);\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    this.texture = new this.TextureConstructor({\n      texture,\n      size: texSize,\n      dimensions: this.threadDim,\n      output: this.output,\n      context: this.context,\n      internalFormat: this.getInternalFormat(),\n      textureFormat: this.getTextureFormat(),\n      kernel: this,\n    });\n  }\n\n  _replaceSubOutputTextures() {\n    const gl = this.context;\n    for (let i = 0; i < this.mappedTextures.length; i++) {\n      const mappedTexture = this.mappedTextures[i];\n      if (mappedTexture.beforeMutate() || this._mappedTextureSwitched[i]) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, mappedTexture.texture, 0);\n        this._mappedTextureSwitched[i] = false;\n      }\n    }\n  }\n\n  _setupSubOutputTextures() {\n    const gl = this.context;\n    if (this.mappedTextures) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, this.mappedTextures[i].texture, 0);\n      }\n      return;\n    }\n    const texSize = this.texSize;\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n    this.mappedTextures = [];\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const texture = this.createTexture();\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      if (this.precision === 'single') {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\n      this.mappedTextures.push(new this.TextureConstructor({\n        texture,\n        size: texSize,\n        dimensions: this.threadDim,\n        output: this.output,\n        context: this.context,\n        internalFormat: this.getInternalFormat(),\n        textureFormat: this.getTextureFormat(),\n        kernel: this,\n      }));\n    }\n  }\n\n  setUniform1f(name, value) {\n    if (this.uniform1fCache.hasOwnProperty(name)) {\n      const cache = this.uniform1fCache[name];\n      if (value === cache) {\n        return;\n      }\n    }\n    this.uniform1fCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform1f(loc, value);\n  }\n\n  setUniform1i(name, value) {\n    if (this.uniform1iCache.hasOwnProperty(name)) {\n      const cache = this.uniform1iCache[name];\n      if (value === cache) {\n        return;\n      }\n    }\n    this.uniform1iCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform1i(loc, value);\n  }\n\n  setUniform2f(name, value1, value2) {\n    if (this.uniform2fCache.hasOwnProperty(name)) {\n      const cache = this.uniform2fCache[name];\n      if (\n        value1 === cache[0] &&\n        value2 === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2fCache[name] = [value1, value2];\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2f(loc, value1, value2);\n  }\n\n  setUniform2fv(name, value) {\n    if (this.uniform2fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform2fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2fv(loc, value);\n  }\n\n  setUniform2iv(name, value) {\n    if (this.uniform2ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform2ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2iv(loc, value);\n  }\n\n  setUniform3fv(name, value) {\n    if (this.uniform3fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform3fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2]\n      ) {\n        return;\n      }\n    }\n    this.uniform3fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform3fv(loc, value);\n  }\n\n  setUniform3iv(name, value) {\n    if (this.uniform3ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform3ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2]\n      ) {\n        return;\n      }\n    }\n    this.uniform3ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform3iv(loc, value);\n  }\n\n  setUniform4fv(name, value) {\n    if (this.uniform4fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform4fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2] &&\n        value[3] === cache[3]\n      ) {\n        return;\n      }\n    }\n    this.uniform4fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform4fv(loc, value);\n  }\n\n  setUniform4iv(name, value) {\n    if (this.uniform4ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform4ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2] &&\n        value[3] === cache[3]\n      ) {\n        return;\n      }\n    }\n    this.uniform4ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform4iv(loc, value);\n  }\n\n  getUniformLocation(name) {\n    if (this.programUniformLocationCache.hasOwnProperty(name)) {\n      return this.programUniformLocationCache[name];\n    }\n    return this.programUniformLocationCache[name] = this.context.getUniformLocation(this.program, name);\n  }\n\n  _getFragShaderArtifactMap(args) {\n    return {\n      HEADER: this._getHeaderString(),\n      LOOP_MAX: this._getLoopMaxString(),\n      PLUGINS: this._getPluginsString(),\n      CONSTANTS: this._getConstantsString(),\n      DECODE32_ENDIANNESS: this._getDecode32EndiannessString(),\n      ENCODE32_ENDIANNESS: this._getEncode32EndiannessString(),\n      DIVIDE_WITH_INTEGER_CHECK: this._getDivideWithIntegerCheckString(),\n      INJECTED_NATIVE: this._getInjectedNative(),\n      MAIN_CONSTANTS: this._getMainConstantsString(),\n      MAIN_ARGUMENTS: this._getMainArgumentsString(args),\n      KERNEL: this.getKernelString(),\n      MAIN_RESULT: this.getMainResultString(),\n      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\n      INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\n      SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\n      SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration(),\n    };\n  }\n\n  _getVertShaderArtifactMap(args) {\n    return {\n      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\n      INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\n      SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\n      SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration(),\n    };\n  }\n\n  _getHeaderString() {\n    return (\n      this.subKernels !== null ?\n      '#extension GL_EXT_draw_buffers : require\\n' :\n      ''\n    );\n  }\n\n  _getLoopMaxString() {\n    return (\n      this.loopMaxIterations ?\n      ` ${parseInt(this.loopMaxIterations)};\\n` :\n      ' 1000;\\n'\n    );\n  }\n\n  _getPluginsString() {\n    if (!this.plugins) return '\\n';\n    return this.plugins.map(plugin => plugin.source && this.source.match(plugin.functionMatch) ? plugin.source : '').join('\\n');\n  }\n\n  _getConstantsString() {\n    const result = [];\n    const { threadDim, texSize } = this;\n    if (this.dynamicOutput) {\n      result.push(\n        'uniform ivec3 uOutputDim',\n        'uniform ivec2 uTexSize'\n      );\n    } else {\n      result.push(\n        `ivec3 uOutputDim = ivec3(${threadDim[0]}, ${threadDim[1]}, ${threadDim[2]})`,\n        `ivec2 uTexSize = ivec2(${texSize[0]}, ${texSize[1]})`\n      );\n    }\n    return utils.linesToString(result);\n  }\n\n  _getTextureCoordinate() {\n    const subKernels = this.subKernels;\n    if (subKernels === null || subKernels.length < 1) {\n      return 'varying vec2 vTexCoord;\\n';\n    } else {\n      return 'out vec2 vTexCoord;\\n';\n    }\n  }\n\n  _getDecode32EndiannessString() {\n    return (\n      this.endianness === 'LE' ?\n      '' :\n      '  texel.rgba = texel.abgr;\\n'\n    );\n  }\n\n  _getEncode32EndiannessString() {\n    return (\n      this.endianness === 'LE' ?\n      '' :\n      '  texel.rgba = texel.abgr;\\n'\n    );\n  }\n\n  _getDivideWithIntegerCheckString() {\n    return this.fixIntegerDivisionAccuracy ?\n      `float divWithIntCheck(float x, float y) {\n  if (floor(x) == x && floor(y) == y && integerMod(x, y) == 0.0) {\n    return float(int(x) / int(y));\n  }\n  return x / y;\n}\n\nfloat integerCorrectionModulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -(number - (divisor * floor(divWithIntCheck(number, divisor))));\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return number - (divisor * floor(divWithIntCheck(number, divisor)));\n}` :\n      '';\n  }\n\n  _getMainArgumentsString(args) {\n    const results = [];\n    const { argumentNames } = this;\n    for (let i = 0; i < argumentNames.length; i++) {\n      results.push(this.kernelArguments[i].getSource(args[i]));\n    }\n    return results.join('');\n  }\n\n  _getInjectedNative() {\n    return this.injectedNative || '';\n  }\n\n  _getMainConstantsString() {\n    const result = [];\n    const { constants } = this;\n    if (constants) {\n      let i = 0;\n      for (const name in constants) {\n        if (!this.constants.hasOwnProperty(name)) continue;\n        result.push(this.kernelConstants[i++].getSource(this.constants[name]));\n      }\n    }\n    return result.join('');\n  }\n\n  getRawValueFramebuffer(width, height) {\n    if (!this.rawValueFramebuffers[width]) {\n      this.rawValueFramebuffers[width] = {};\n    }\n    if (!this.rawValueFramebuffers[width][height]) {\n      const framebuffer = this.context.createFramebuffer();\n      framebuffer.width = width;\n      framebuffer.height = height;\n      this.rawValueFramebuffers[width][height] = framebuffer;\n    }\n    return this.rawValueFramebuffers[width][height];\n  }\n\n  getKernelResultDeclaration() {\n    switch (this.returnType) {\n      case 'Array(2)':\n        return 'vec2 kernelResult';\n      case 'Array(3)':\n        return 'vec3 kernelResult';\n      case 'Array(4)':\n        return 'vec4 kernelResult';\n      case 'LiteralInteger':\n      case 'Float':\n      case 'Number':\n      case 'Integer':\n        return 'float kernelResult';\n      default:\n        if (this.graphical) {\n          return 'float kernelResult';\n        } else {\n          throw new Error(`unrecognized output type \"${ this.returnType }\"`);\n        }\n    }\n  }\n  getKernelString() {\n    const result = [this.getKernelResultDeclaration()];\n    const { subKernels } = this;\n    if (subKernels !== null) {\n      switch (this.returnType) {\n        case 'Number':\n        case 'Float':\n        case 'Integer':\n          for (let i = 0; i < subKernels.length; i++) {\n            const subKernel = subKernels[i];\n            result.push(\n              subKernel.returnType === 'Integer' ?\n              `int subKernelResult_${ subKernel.name } = 0` :\n              `float subKernelResult_${ subKernel.name } = 0.0`\n            );\n          }\n          break;\n        case 'Array(2)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec2 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n        case 'Array(3)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec3 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n        case 'Array(4)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec4 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n      }\n    }\n\n    return utils.linesToString(result) + this.translatedSource;\n  }\n\n  getMainResultGraphical() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragColor = actualColor',\n    ]);\n  }\n\n  getMainResultPackedPixels() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return this.getMainResultKernelPackedPixels() +\n          this.getMainResultSubKernelPackedPixels();\n      default:\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\n    }\n  }\n\n  getMainResultKernelPackedPixels() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  gl_FragData[0] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\n    ]);\n  }\n\n  getMainResultSubKernelPackedPixels() {\n    const result = [];\n    if (!this.subKernels) return '';\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\n        );\n      }\n    }\n    return utils.linesToString(result);\n  }\n\n  getMainResultMemoryOptimizedFloats() {\n    const result = [\n      '  index *= 4',\n    ];\n\n    switch (this.returnType) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        const channels = ['r', 'g', 'b', 'a'];\n        for (let i = 0; i < channels.length; i++) {\n          const channel = channels[i];\n          this.getMainResultKernelMemoryOptimizedFloats(result, channel);\n          this.getMainResultSubKernelMemoryOptimizedFloats(result, channel);\n          if (i + 1 < channels.length) {\n            result.push('  index += 1');\n          }\n        }\n        break;\n      default:\n        throw new Error(`optimized output only usable with Numbers, ${this.returnType} specified`);\n    }\n\n    return utils.linesToString(result);\n  }\n\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\n    result.push(\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  gl_FragData[0].${channel} = kernelResult`\n    );\n  }\n\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}].${channel} = float(subKernelResult_${this.subKernels[i].name})`\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}].${channel} = subKernelResult_${this.subKernels[i].name}`\n        );\n      }\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelNumberTexture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}][0] = float(subKernelResult_${subKernel.name})`\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}][0] = subKernelResult_${subKernel.name}`\n        );\n      }\n    }\n    return result;\n  }\n\n  getMainResultKernelArray2Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult[0]',\n      '  gl_FragData[0][1] = kernelResult[1]',\n    ];\n  }\n\n  getMainResultSubKernelArray2Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray3Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult[0]',\n      '  gl_FragData[0][1] = kernelResult[1]',\n      '  gl_FragData[0][2] = kernelResult[2]',\n    ];\n  }\n\n  getMainResultSubKernelArray3Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n        `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray4Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelArray4Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    switch (this.returnType) {\n      case 'Number':\n      case 'Float':\n      case 'Integer':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          const subKernel = this.subKernels[i];\n          if (subKernel.returnType === 'Integer') {\n            result.push(\n              `  gl_FragData[${i + 1}] = float(subKernelResult_${this.subKernels[i].name})`\n            );\n          } else {\n            result.push(\n              `  gl_FragData[${i + 1}] = subKernelResult_${this.subKernels[i].name}`\n            );\n          }\n        }\n        break;\n      case 'Array(2)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`\n          );\n        }\n        break;\n      case 'Array(3)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`\n          );\n        }\n        break;\n      case 'Array(4)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\n            `  gl_FragData[${i + 1}][3] = subKernelResult_${this.subKernels[i].name}[3]`\n          );\n        }\n        break;\n    }\n\n    return result;\n  }\n\n  replaceArtifacts(src, map) {\n    return src.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z]*[0-9]?)*)__;\\n/g, (match, artifact) => {\n      if (map.hasOwnProperty(artifact)) {\n        return map[artifact];\n      }\n      throw `unhandled artifact ${artifact}`;\n    });\n  }\n\n  getFragmentShader(args) {\n    if (this.compiledFragmentShader !== null) {\n      return this.compiledFragmentShader;\n    }\n    return this.compiledFragmentShader = this.replaceArtifacts(this.constructor.fragmentShader, this._getFragShaderArtifactMap(args));\n  }\n\n  getVertexShader(args) {\n    if (this.compiledVertexShader !== null) {\n      return this.compiledVertexShader;\n    }\n    return this.compiledVertexShader = this.replaceArtifacts(this.constructor.vertexShader, this._getVertShaderArtifactMap(args));\n  }\n\n  toString() {\n    const setupContextString = utils.linesToString([\n      `const gl = context`,\n    ]);\n    return glKernelString(this.constructor, arguments, this, setupContextString);\n  }\n\n  destroy(removeCanvasReferences) {\n    if (!this.context) return;\n    if (this.buffer) {\n      this.context.deleteBuffer(this.buffer);\n    }\n    if (this.framebuffer) {\n      this.context.deleteFramebuffer(this.framebuffer);\n    }\n    for (const width in this.rawValueFramebuffers) {\n      for (const height in this.rawValueFramebuffers[width]) {\n        this.context.deleteFramebuffer(this.rawValueFramebuffers[width][height]);\n        delete this.rawValueFramebuffers[width][height];\n      }\n      delete this.rawValueFramebuffers[width];\n    }\n    if (this.vertShader) {\n      this.context.deleteShader(this.vertShader);\n    }\n    if (this.fragShader) {\n      this.context.deleteShader(this.fragShader);\n    }\n    if (this.program) {\n      this.context.deleteProgram(this.program);\n    }\n    if (this.texture) {\n      this.texture.delete();\n      const textureCacheIndex = this.textureCache.indexOf(this.texture.texture);\n      if (textureCacheIndex > -1) {\n        this.textureCache.splice(textureCacheIndex, 1);\n      }\n      this.texture = null;\n    }\n    if (this.mappedTextures && this.mappedTextures.length) {\n      for (let i = 0; i < this.mappedTextures.length; i++) {\n        const mappedTexture = this.mappedTextures[i];\n        mappedTexture.delete();\n        const textureCacheIndex = this.textureCache.indexOf(mappedTexture.texture);\n        if (textureCacheIndex > -1) {\n          this.textureCache.splice(textureCacheIndex, 1);\n        }\n      }\n      this.mappedTextures = null;\n    }\n    if (this.kernelArguments) {\n      for (let i = 0; i < this.kernelArguments.length; i++) {\n        this.kernelArguments[i].destroy();\n      }\n    }\n    if (this.kernelConstants) {\n      for (let i = 0; i < this.kernelConstants.length; i++) {\n        this.kernelConstants[i].destroy();\n      }\n    }\n    while (this.textureCache.length > 0) {\n      const texture = this.textureCache.pop();\n      this.context.deleteTexture(texture);\n    }\n    if (removeCanvasReferences) {\n      const idx = canvases.indexOf(this.canvas);\n      if (idx >= 0) {\n        canvases[idx] = null;\n        maxTexSizes[idx] = null;\n      }\n    }\n    this.destroyExtensions();\n    delete this.context;\n    delete this.canvas;\n    if (!this.gpu) return;\n    const i = this.gpu.kernels.indexOf(this);\n    if (i === -1) return;\n    this.gpu.kernels.splice(i, 1);\n  }\n\n  destroyExtensions() {\n    this.extensions.OES_texture_float = null;\n    this.extensions.OES_texture_float_linear = null;\n    this.extensions.OES_element_index_uint = null;\n    this.extensions.WEBGL_draw_buffers = null;\n  }\n\n  static destroyContext(context) {\n    const extension = context.getExtension('WEBGL_lose_context');\n    if (extension) {\n      extension.loseContext();\n    }\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGLFunctionNode).toJSON();\n    json.settings.threadDim = this.threadDim;\n    return json;\n  }\n}\n\nmodule.exports = {\n  WebGLKernel\n};\n},{\"../../plugins/math-random-uniformly-distributed\":112,\"../../utils\":114,\"../function-builder\":9,\"../gl/kernel\":13,\"../gl/kernel-string\":12,\"./fragment-shader\":37,\"./function-node\":38,\"./kernel-value-maps\":39,\"./vertex-shader\":71}],71:[function(require,module,exports){\nconst vertexShader = `__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nattribute vec2 aPos;\nattribute vec2 aTexCoord;\n\nvarying vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}`;\n\nmodule.exports = {\n  vertexShader\n};\n},{}],72:[function(require,module,exports){\nconst fragmentShader = `#version 300 es\n__HEADER__;\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n__SAMPLER_2D_ARRAY_TACTIC_DECLARATION__;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nin vec2 vTexCoord;\n\nfloat atan2(float v1, float v2) {\n  if (v1 == 0.0 || v2 == 0.0) return 0.0;\n  return atan(v1 / v2);\n}\n\nfloat cbrt(float x) {\n  if (x >= 0.0) {\n    return pow(x, 1.0 / 3.0);\n  } else {\n    return -pow(x, 1.0 / 3.0);\n  }\n}\n\nfloat expm1(float x) {\n  return pow(${Math.E}, x) - 1.0; \n}\n\nfloat fround(highp float x) {\n  return x;\n}\n\nfloat imul(float v1, float v2) {\n  return float(int(v1) * int(v2));\n}\n\nfloat log10(float x) {\n  return log2(x) * (1.0 / log2(10.0));\n}\n\nfloat log1p(float x) {\n  return log(1.0 + x);\n}\n\nfloat _pow(float v1, float v2) {\n  if (v2 == 0.0) return 1.0;\n  return pow(v1, v2);\n}\n\nfloat _round(float x) {\n  return floor(x + 0.5);\n}\n\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x/y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  return texel[channel*2] * 255.0 + texel[channel*2 + 1] * 65280.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  return texel[channel] * 255.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  index = index / 4;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return texel[channel];\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, st / vec2(texSize));\n}\n\nvec4 getImage3D(sampler2DArray tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, vec3(st / vec2(texSize), z));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n\n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\nfloat modulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -mod(number, divisor);\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return mod(number, divisor);\n}\n\n__INJECTED_NATIVE__;\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}`;\n\nmodule.exports = {\n  fragmentShader\n};\n},{}],73:[function(require,module,exports){\nconst { utils } = require('../../utils');\nconst { WebGLFunctionNode } = require('../web-gl/function-node');\n\nclass WebGL2FunctionNode extends WebGLFunctionNode {\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput(\n        'IdentifierExpression - not an Identifier',\n        idtNode\n      );\n    }\n\n    const type = this.getType(idtNode);\n\n    const name = utils.sanitizeName(idtNode.name);\n    if (idtNode.name === 'Infinity') {\n      retArr.push('intBitsToFloat(2139095039)');\n    } else if (type === 'Boolean') {\n      if (this.argumentNames.indexOf(name) > -1) {\n        retArr.push(`bool(user_${name})`);\n      } else {\n        retArr.push(`user_${name}`);\n      }\n    } else {\n      retArr.push(`user_${name}`);\n    }\n\n    return retArr;\n  }\n}\n\nmodule.exports = {\n  WebGL2FunctionNode\n};\n},{\"../../utils\":114,\"../web-gl/function-node\":38}],74:[function(require,module,exports){\nconst { WebGL2KernelValueBoolean } = require('./kernel-value/boolean');\nconst { WebGL2KernelValueFloat } = require('./kernel-value/float');\nconst { WebGL2KernelValueInteger } = require('./kernel-value/integer');\n\nconst { WebGL2KernelValueHTMLImage } = require('./kernel-value/html-image');\nconst { WebGL2KernelValueDynamicHTMLImage } = require('./kernel-value/dynamic-html-image');\n\nconst { WebGL2KernelValueHTMLImageArray } = require('./kernel-value/html-image-array');\nconst { WebGL2KernelValueDynamicHTMLImageArray } = require('./kernel-value/dynamic-html-image-array');\n\nconst { WebGL2KernelValueHTMLVideo } = require('./kernel-value/html-video');\nconst { WebGL2KernelValueDynamicHTMLVideo } = require('./kernel-value/dynamic-html-video');\n\nconst { WebGL2KernelValueSingleInput } = require('./kernel-value/single-input');\nconst { WebGL2KernelValueDynamicSingleInput } = require('./kernel-value/dynamic-single-input');\n\nconst { WebGL2KernelValueUnsignedInput } = require('./kernel-value/unsigned-input');\nconst { WebGL2KernelValueDynamicUnsignedInput } = require('./kernel-value/dynamic-unsigned-input');\n\nconst { WebGL2KernelValueMemoryOptimizedNumberTexture } = require('./kernel-value/memory-optimized-number-texture');\nconst { WebGL2KernelValueDynamicMemoryOptimizedNumberTexture } = require('./kernel-value/dynamic-memory-optimized-number-texture');\n\nconst { WebGL2KernelValueNumberTexture } = require('./kernel-value/number-texture');\nconst { WebGL2KernelValueDynamicNumberTexture } = require('./kernel-value/dynamic-number-texture');\n\nconst { WebGL2KernelValueSingleArray } = require('./kernel-value/single-array');\nconst { WebGL2KernelValueDynamicSingleArray } = require('./kernel-value/dynamic-single-array');\n\nconst { WebGL2KernelValueSingleArray1DI } = require('./kernel-value/single-array1d-i');\nconst { WebGL2KernelValueDynamicSingleArray1DI } = require('./kernel-value/dynamic-single-array1d-i');\n\nconst { WebGL2KernelValueSingleArray2DI } = require('./kernel-value/single-array2d-i');\nconst { WebGL2KernelValueDynamicSingleArray2DI } = require('./kernel-value/dynamic-single-array2d-i');\n\nconst { WebGL2KernelValueSingleArray3DI } = require('./kernel-value/single-array3d-i');\nconst { WebGL2KernelValueDynamicSingleArray3DI } = require('./kernel-value/dynamic-single-array3d-i');\n\nconst { WebGL2KernelValueArray2 } = require('./kernel-value/array2');\nconst { WebGL2KernelValueArray3 } = require('./kernel-value/array3');\nconst { WebGL2KernelValueArray4 } = require('./kernel-value/array4');\n\nconst { WebGL2KernelValueUnsignedArray } = require('./kernel-value/unsigned-array');\nconst { WebGL2KernelValueDynamicUnsignedArray } = require('./kernel-value/dynamic-unsigned-array');\n\nconst kernelValueMaps = {\n  unsigned: {\n    dynamic: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Integer': WebGL2KernelValueInteger,\n      'Float': WebGL2KernelValueFloat,\n      'Array': WebGL2KernelValueDynamicUnsignedArray,\n      'Array(2)': WebGL2KernelValueArray2,\n      'Array(3)': WebGL2KernelValueArray3,\n      'Array(4)': WebGL2KernelValueArray4,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGL2KernelValueDynamicUnsignedInput,\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'OffscreenCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n      'ImageBitmap': WebGL2KernelValueDynamicHTMLImage,\n      'ImageData': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Float': WebGL2KernelValueFloat,\n      'Integer': WebGL2KernelValueInteger,\n      'Array': WebGL2KernelValueUnsignedArray,\n      'Array(2)': WebGL2KernelValueArray2,\n      'Array(3)': WebGL2KernelValueArray3,\n      'Array(4)': WebGL2KernelValueArray4,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGL2KernelValueUnsignedInput,\n      'NumberTexture': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueHTMLImage,\n      'OffscreenCanvas': WebGL2KernelValueHTMLImage,\n      'HTMLImage': WebGL2KernelValueHTMLImage,\n      'ImageBitmap': WebGL2KernelValueHTMLImage,\n      'ImageData': WebGL2KernelValueHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueHTMLVideo,\n    }\n  },\n  single: {\n    dynamic: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Integer': WebGL2KernelValueInteger,\n      'Float': WebGL2KernelValueFloat,\n      'Array': WebGL2KernelValueDynamicSingleArray,\n      'Array(2)': WebGL2KernelValueArray2,\n      'Array(3)': WebGL2KernelValueArray3,\n      'Array(4)': WebGL2KernelValueArray4,\n      'Array1D(2)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array1D(3)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array1D(4)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array2D(2)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array2D(3)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array2D(4)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array3D(2)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Array3D(3)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Array3D(4)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Input': WebGL2KernelValueDynamicSingleInput,\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'OffscreenCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n      'ImageBitmap': WebGL2KernelValueDynamicHTMLImage,\n      'ImageData': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Float': WebGL2KernelValueFloat,\n      'Integer': WebGL2KernelValueInteger,\n      'Array': WebGL2KernelValueSingleArray,\n      'Array(2)': WebGL2KernelValueArray2,\n      'Array(3)': WebGL2KernelValueArray3,\n      'Array(4)': WebGL2KernelValueArray4,\n      'Array1D(2)': WebGL2KernelValueSingleArray1DI,\n      'Array1D(3)': WebGL2KernelValueSingleArray1DI,\n      'Array1D(4)': WebGL2KernelValueSingleArray1DI,\n      'Array2D(2)': WebGL2KernelValueSingleArray2DI,\n      'Array2D(3)': WebGL2KernelValueSingleArray2DI,\n      'Array2D(4)': WebGL2KernelValueSingleArray2DI,\n      'Array3D(2)': WebGL2KernelValueSingleArray3DI,\n      'Array3D(3)': WebGL2KernelValueSingleArray3DI,\n      'Array3D(4)': WebGL2KernelValueSingleArray3DI,\n      'Input': WebGL2KernelValueSingleInput,\n      'NumberTexture': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueHTMLImage,\n      'OffscreenCanvas': WebGL2KernelValueHTMLImage,\n      'HTMLImage': WebGL2KernelValueHTMLImage,\n      'ImageBitmap': WebGL2KernelValueHTMLImage,\n      'ImageData': WebGL2KernelValueHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueHTMLVideo,\n    }\n  },\n};\n\nfunction lookupKernelValueType(type, dynamic, precision, value) {\n  if (!type) {\n    throw new Error('type missing');\n  }\n  if (!dynamic) {\n    throw new Error('dynamic missing');\n  }\n  if (!precision) {\n    throw new Error('precision missing');\n  }\n  if (value.type) {\n    type = value.type;\n  }\n  const types = kernelValueMaps[precision][dynamic];\n  if (types[type] === false) {\n    return null;\n  } else if (types[type] === undefined) {\n    throw new Error(`Could not find a KernelValue for ${ type }`);\n  }\n  return types[type];\n}\n\nmodule.exports = {\n  kernelValueMaps,\n  lookupKernelValueType\n};\n},{\"./kernel-value/array2\":75,\"./kernel-value/array3\":76,\"./kernel-value/array4\":77,\"./kernel-value/boolean\":78,\"./kernel-value/dynamic-html-image\":80,\"./kernel-value/dynamic-html-image-array\":79,\"./kernel-value/dynamic-html-video\":81,\"./kernel-value/dynamic-memory-optimized-number-texture\":82,\"./kernel-value/dynamic-number-texture\":83,\"./kernel-value/dynamic-single-array\":84,\"./kernel-value/dynamic-single-array1d-i\":85,\"./kernel-value/dynamic-single-array2d-i\":86,\"./kernel-value/dynamic-single-array3d-i\":87,\"./kernel-value/dynamic-single-input\":88,\"./kernel-value/dynamic-unsigned-array\":89,\"./kernel-value/dynamic-unsigned-input\":90,\"./kernel-value/float\":91,\"./kernel-value/html-image\":93,\"./kernel-value/html-image-array\":92,\"./kernel-value/html-video\":94,\"./kernel-value/integer\":95,\"./kernel-value/memory-optimized-number-texture\":96,\"./kernel-value/number-texture\":97,\"./kernel-value/single-array\":98,\"./kernel-value/single-array1d-i\":99,\"./kernel-value/single-array2d-i\":100,\"./kernel-value/single-array3d-i\":101,\"./kernel-value/single-input\":102,\"./kernel-value/unsigned-array\":103,\"./kernel-value/unsigned-input\":104}],75:[function(require,module,exports){\nconst { WebGLKernelValueArray2 } = require('../../web-gl/kernel-value/array2');\n\nclass WebGL2KernelValueArray2 extends WebGLKernelValueArray2 {}\n\nmodule.exports = {\n  WebGL2KernelValueArray2\n};\n},{\"../../web-gl/kernel-value/array2\":41}],76:[function(require,module,exports){\nconst { WebGLKernelValueArray3 } = require('../../web-gl/kernel-value/array3');\n\nclass WebGL2KernelValueArray3 extends WebGLKernelValueArray3 {}\n\nmodule.exports = {\n  WebGL2KernelValueArray3\n};\n},{\"../../web-gl/kernel-value/array3\":42}],77:[function(require,module,exports){\nconst { WebGLKernelValueArray4 } = require('../../web-gl/kernel-value/array4');\n\nclass WebGL2KernelValueArray4 extends WebGLKernelValueArray4 {}\n\nmodule.exports = {\n  WebGL2KernelValueArray4\n};\n},{\"../../web-gl/kernel-value/array4\":43}],78:[function(require,module,exports){\nconst { WebGLKernelValueBoolean } = require('../../web-gl/kernel-value/boolean');\n\nclass WebGL2KernelValueBoolean extends WebGLKernelValueBoolean {}\n\nmodule.exports = {\n  WebGL2KernelValueBoolean\n};\n},{\"../../web-gl/kernel-value/boolean\":44}],79:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueHTMLImageArray } = require('./html-image-array');\n\nclass WebGL2KernelValueDynamicHTMLImageArray extends WebGL2KernelValueHTMLImageArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2DArray ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(images) {\n    const { width, height } = images[0];\n    this.checkSize(width, height);\n    this.dimensions = [width, height, images.length];\n    this.textureSize = [width, height];\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(images);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLImageArray\n};\n},{\"../../../utils\":114,\"./html-image-array\":92}],80:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicHTMLImage } = require('../../web-gl/kernel-value/dynamic-html-image');\n\nclass WebGL2KernelValueDynamicHTMLImage extends WebGLKernelValueDynamicHTMLImage {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLImage\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-html-image\":45}],81:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueDynamicHTMLImage } = require('./dynamic-html-image');\n\nclass WebGL2KernelValueDynamicHTMLVideo extends WebGL2KernelValueDynamicHTMLImage {}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLVideo\n};\n},{\"../../../utils\":114,\"./dynamic-html-image\":80}],82:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } = require('../../web-gl/kernel-value/dynamic-memory-optimized-number-texture');\n\nclass WebGL2KernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueDynamicMemoryOptimizedNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-memory-optimized-number-texture\":47}],83:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicNumberTexture } = require('../../web-gl/kernel-value/dynamic-number-texture');\n\nclass WebGL2KernelValueDynamicNumberTexture extends WebGLKernelValueDynamicNumberTexture {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-number-texture\":48}],84:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray } = require('../../web-gl2/kernel-value/single-array');\n\nclass WebGL2KernelValueDynamicSingleArray extends WebGL2KernelValueSingleArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array\":98}],85:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray1DI } = require('../../web-gl2/kernel-value/single-array1d-i');\n\nclass WebGL2KernelValueDynamicSingleArray1DI extends WebGL2KernelValueSingleArray1DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray1DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array1d-i\":99}],86:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray2DI } = require('../../web-gl2/kernel-value/single-array2d-i');\n\nclass WebGL2KernelValueDynamicSingleArray2DI extends WebGL2KernelValueSingleArray2DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray2DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array2d-i\":100}],87:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray3DI } = require('../../web-gl2/kernel-value/single-array3d-i');\n\nclass WebGL2KernelValueDynamicSingleArray3DI extends WebGL2KernelValueSingleArray3DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray3DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array3d-i\":101}],88:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleInput } = require('../../web-gl2/kernel-value/single-input');\n\nclass WebGL2KernelValueDynamicSingleInput extends WebGL2KernelValueSingleInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleInput\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-input\":102}],89:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicUnsignedArray } = require('../../web-gl/kernel-value/dynamic-unsigned-array');\n\nclass WebGL2KernelValueDynamicUnsignedArray extends WebGLKernelValueDynamicUnsignedArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicUnsignedArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-unsigned-array\":54}],90:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicUnsignedInput } = require('../../web-gl/kernel-value/dynamic-unsigned-input');\n\nclass WebGL2KernelValueDynamicUnsignedInput extends WebGLKernelValueDynamicUnsignedInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicUnsignedInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-unsigned-input\":55}],91:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueFloat } = require('../../web-gl/kernel-value/float');\n\nclass WebGL2KernelValueFloat extends WebGLKernelValueFloat {}\n\nmodule.exports = {\n  WebGL2KernelValueFloat\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/float\":56}],92:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('../../web-gl/kernel-value/array');\n\nclass WebGL2KernelValueHTMLImageArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.checkSize(value[0].width, value[0].height);\n    this.dimensions = [value[0].width, value[0].height, value.length];\n    this.textureSize = [value[0].width, value[0].height];\n  }\n  defineTexture() {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2DArray ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(images) {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.texImage3D(\n      gl.TEXTURE_2D_ARRAY,\n      0,\n      gl.RGBA,\n      images[0].width,\n      images[0].height,\n      images.length,\n      0,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      null\n    );\n    for (let i = 0; i < images.length; i++) {\n      const xOffset = 0;\n      const yOffset = 0;\n      const imageDepth = 1;\n      gl.texSubImage3D(\n        gl.TEXTURE_2D_ARRAY,\n        0,\n        xOffset,\n        yOffset,\n        i,\n        images[i].width,\n        images[i].height,\n        imageDepth,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.uploadValue = images[i]\n      );\n    }\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLImageArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/array\":40}],93:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueHTMLImage } = require('../../web-gl/kernel-value/html-image');\n\nclass WebGL2KernelValueHTMLImage extends WebGLKernelValueHTMLImage {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLImage\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/html-image\":57}],94:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueHTMLImage } = require('./html-image');\n\nclass WebGL2KernelValueHTMLVideo extends WebGL2KernelValueHTMLImage {}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLVideo\n};\n},{\"../../../utils\":114,\"./html-image\":93}],95:[function(require,module,exports){\nconst { WebGLKernelValueInteger } = require('../../web-gl/kernel-value/integer');\n\nclass WebGL2KernelValueInteger extends WebGLKernelValueInteger {\n  getSource(value) {\n    const variablePrecision = this.getVariablePrecisionString();\n    if (this.origin === 'constants') {\n      return `const ${ variablePrecision } int ${this.id} = ${ parseInt(value) };\\n`;\n    }\n    return `uniform ${ variablePrecision } int ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueInteger\n};\n},{\"../../web-gl/kernel-value/integer\":60}],96:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('../../web-gl/kernel-value/memory-optimized-number-texture');\n\nclass WebGL2KernelValueMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\n  getSource() {\n    const { id, sizeId, textureSize, dimensionsId, dimensions } = this;\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform sampler2D ${id}`,\n      `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/memory-optimized-number-texture\":61}],97:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueNumberTexture } = require('../../web-gl/kernel-value/number-texture');\n\nclass WebGL2KernelValueNumberTexture extends WebGLKernelValueNumberTexture {\n  getSource() {\n    const { id, sizeId, textureSize, dimensionsId, dimensions } = this;\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${id}`,\n      `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/number-texture\":62}],98:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray } = require('../../web-gl/kernel-value/single-array');\n\nclass WebGL2KernelValueSingleArray extends WebGLKernelValueSingleArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array\":63}],99:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray1DI } = require('../../web-gl/kernel-value/single-array1d-i');\n\nclass WebGL2KernelValueSingleArray1DI extends WebGLKernelValueSingleArray1DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray1DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array1d-i\":64}],100:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray2DI } = require('../../web-gl/kernel-value/single-array2d-i');\n\nclass WebGL2KernelValueSingleArray2DI extends WebGLKernelValueSingleArray2DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray2DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array2d-i\":65}],101:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray3DI } = require('../../web-gl/kernel-value/single-array3d-i');\n\nclass WebGL2KernelValueSingleArray3DI extends WebGLKernelValueSingleArray3DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray3DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array3d-i\":66}],102:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleInput } = require('../../web-gl/kernel-value/single-input');\n\nclass WebGL2KernelValueSingleInput extends WebGLKernelValueSingleInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-input\":67}],103:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedArray } = require('../../web-gl/kernel-value/unsigned-array');\n\nclass WebGL2KernelValueUnsignedArray extends WebGLKernelValueUnsignedArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueUnsignedArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/unsigned-array\":68}],104:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedInput } = require('../../web-gl/kernel-value/unsigned-input');\n\nclass WebGL2KernelValueUnsignedInput extends WebGLKernelValueUnsignedInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueUnsignedInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/unsigned-input\":69}],105:[function(require,module,exports){\nconst { WebGLKernel } = require('../web-gl/kernel');\nconst { WebGL2FunctionNode } = require('./function-node');\nconst { FunctionBuilder } = require('../function-builder');\nconst { utils } = require('../../utils');\nconst { fragmentShader } = require('./fragment-shader');\nconst { vertexShader } = require('./vertex-shader');\nconst { lookupKernelValueType } = require('./kernel-value-maps');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\n\nlet features = null;\n\nclass WebGL2Kernel extends WebGLKernel {\n  static get isSupported() {\n    if (isSupported !== null) {\n      return isSupported;\n    }\n    this.setupFeatureChecks();\n    isSupported = this.isContextMatch(testContext);\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    if (typeof document !== 'undefined') {\n      testCanvas = document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      testCanvas = new OffscreenCanvas(0, 0);\n    }\n    if (!testCanvas) return;\n    testContext = testCanvas.getContext('webgl2');\n    if (!testContext || !testContext.getExtension) return;\n    testExtensions = {\n      EXT_color_buffer_float: testContext.getExtension('EXT_color_buffer_float'),\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n    };\n    features = this.getFeatures();\n  }\n\n  static isContextMatch(context) {\n    if (typeof WebGL2RenderingContext !== 'undefined') {\n      return context instanceof WebGL2RenderingContext;\n    }\n    return false;\n  }\n\n  static getFeatures() {\n    const gl = this.testContext;\n    return Object.freeze({\n      isFloatRead: this.getIsFloatRead(),\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n      isSpeedTacticSupported: this.getIsSpeedTacticSupported(),\n      kernelMap: true,\n      isTextureFloat: true,\n      isDrawBuffers: true,\n      channelCount: this.getChannelCount(),\n      maxTextureSize: this.getMaxTextureSize(),\n      lowIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),\n      lowFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),\n      mediumIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT),\n      mediumFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),\n      highIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),\n      highFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT),\n    });\n  }\n\n  static getIsTextureFloat() {\n    return true;\n  }\n\n  static getChannelCount() {\n    return testContext.getParameter(testContext.MAX_DRAW_BUFFERS);\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static lookupKernelValueType(type, dynamic, precision, value) {\n    return lookupKernelValueType(type, dynamic, precision, value);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  static get fragmentShader() {\n    return fragmentShader;\n  }\n  static get vertexShader() {\n    return vertexShader;\n  }\n\n  initContext() {\n    const settings = {\n      alpha: false,\n      depth: false,\n      antialias: false\n    };\n    return this.canvas.getContext('webgl2', settings);\n  }\n\n  initExtensions() {\n    this.extensions = {\n      EXT_color_buffer_float: this.context.getExtension('EXT_color_buffer_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n    };\n  }\n\n  validateSettings(args) {\n    if (!this.validate) {\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, this.output);\n      return;\n    }\n\n    const { features } = this.constructor;\n    if (this.precision === 'single' && !features.isFloatRead) {\n      throw new Error('Float texture outputs are not supported');\n    } else if (!this.graphical && this.precision === null) {\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\n    }\n\n    if (this.fixIntegerDivisionAccuracy === null) {\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n      this.fixIntegerDivisionAccuracy = false;\n    }\n\n    this.checkOutput();\n\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      switch (argType) {\n        case 'Array':\n          this.output = utils.getDimensions(argType);\n          break;\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n          this.output = args[0].output;\n          break;\n        default:\n          throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n\n      if (this.precision === 'single') {\n        console.warn('Cannot use graphical mode and single precision at the same time');\n        this.precision = 'unsigned';\n      }\n\n      this.texSize = utils.clone(this.output);\n      return;\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n      this.precision = 'single';\n    }\n\n    this.texSize = utils.getKernelTextureSize({\n      optimizeFloatMemory: this.optimizeFloatMemory,\n      precision: this.precision,\n    }, this.output);\n\n    this.checkTextureSize();\n  }\n\n  translateSource() {\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGL2FunctionNode, {\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n    });\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\n    this.setupReturnTypes(functionBuilder);\n  }\n\n  drawBuffers() {\n    this.context.drawBuffers(this.drawBuffersMap);\n  }\n\n  getTextureFormat() {\n    const { context: gl } = this;\n    switch (this.getInternalFormat()) {\n      case gl.R32F:\n        return gl.RED;\n      case gl.RG32F:\n        return gl.RG;\n      case gl.RGBA32F:\n        return gl.RGBA;\n      case gl.RGBA:\n        return gl.RGBA;\n      default:\n        throw new Error('Unknown internal format');\n    }\n  }\n  getInternalFormat() {\n    const { context: gl } = this;\n\n    if (this.precision === 'single') {\n      if (this.pipeline) {\n        switch (this.returnType) {\n          case 'Number':\n          case 'Float':\n          case 'Integer':\n            if (this.optimizeFloatMemory) {\n              return gl.RGBA32F;\n            } else {\n              return gl.R32F;\n            }\n            case 'Array(2)':\n              return gl.RG32F;\n            case 'Array(3)': \n            case 'Array(4)':\n              return gl.RGBA32F;\n            default:\n              throw new Error('Unhandled return type');\n        }\n      }\n      return gl.RGBA32F;\n    }\n    return gl.RGBA;\n  }\n\n  _setupOutputTexture() {\n    const gl = this.context;\n    if (this.texture) {\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      return;\n    }\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    const texture = gl.createTexture();\n    const texSize = this.texSize;\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    const format = this.getInternalFormat();\n    if (this.precision === 'single') {\n      gl.texStorage2D(gl.TEXTURE_2D, 1, format, texSize[0], texSize[1]);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, format, gl.UNSIGNED_BYTE, null);\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    this.texture = new this.TextureConstructor({\n      texture,\n      size: texSize,\n      dimensions: this.threadDim,\n      output: this.output,\n      context: this.context,\n      internalFormat: this.getInternalFormat(),\n      textureFormat: this.getTextureFormat(),\n      kernel: this,\n    });\n  }\n\n  _setupSubOutputTextures() {\n    const gl = this.context;\n    if (this.mappedTextures) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, this.mappedTextures[i].texture, 0);\n      }\n      return;\n    }\n    const texSize = this.texSize;\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n    this.mappedTextures = [];\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const texture = this.createTexture();\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      const format = this.getInternalFormat();\n      if (this.precision === 'single') {\n        gl.texStorage2D(gl.TEXTURE_2D, 1, format, texSize[0], texSize[1]);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\n      this.mappedTextures.push(new this.TextureConstructor({\n        texture,\n        size: texSize,\n        dimensions: this.threadDim,\n        output: this.output,\n        context: this.context,\n        internalFormat: this.getInternalFormat(),\n        textureFormat: this.getTextureFormat(),\n        kernel: this,\n      }));\n    }\n  }\n\n  _getHeaderString() {\n    return '';\n  }\n\n  _getTextureCoordinate() {\n    const subKernels = this.subKernels;\n    const variablePrecision = this.getVariablePrecisionString(this.texSize, this.tactic);\n    if (subKernels === null || subKernels.length < 1) {\n      return `in ${ variablePrecision } vec2 vTexCoord;\\n`;\n    } else {\n      return `out ${ variablePrecision } vec2 vTexCoord;\\n`;\n    }\n  }\n\n  _getMainArgumentsString(args) {\n    const result = [];\n    const argumentNames = this.argumentNames;\n    for (let i = 0; i < argumentNames.length; i++) {\n      result.push(this.kernelArguments[i].getSource(args[i]));\n    }\n    return result.join('');\n  }\n\n  getKernelString() {\n    const result = [this.getKernelResultDeclaration()];\n    const subKernels = this.subKernels;\n    if (subKernels !== null) {\n      result.push(\n        'layout(location = 0) out vec4 data0'\n      );\n      switch (this.returnType) {\n        case 'Number':\n        case 'Float':\n        case 'Integer':\n          for (let i = 0; i < subKernels.length; i++) {\n            const subKernel = subKernels[i];\n            result.push(\n              subKernel.returnType === 'Integer' ?\n              `int subKernelResult_${ subKernel.name } = 0` :\n              `float subKernelResult_${ subKernel.name } = 0.0`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n        case 'Array(2)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec2 subKernelResult_${ subKernels[i].name }`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n        case 'Array(3)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec3 subKernelResult_${ subKernels[i].name }`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n        case 'Array(4)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec4 subKernelResult_${ subKernels[i].name }`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n      }\n    } else {\n      result.push(\n        'out vec4 data0'\n      );\n    }\n\n    return utils.linesToString(result) + this.translatedSource;\n  }\n\n  getMainResultGraphical() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0 = actualColor',\n    ]);\n  }\n\n  getMainResultPackedPixels() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return this.getMainResultKernelPackedPixels() +\n          this.getMainResultSubKernelPackedPixels();\n      default:\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\n    }\n  }\n\n  getMainResultKernelPackedPixels() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  data0 = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\n    ]);\n  }\n\n  getMainResultSubKernelPackedPixels() {\n    const result = [];\n    if (!this.subKernels) return '';\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\n        );\n      } else {\n        result.push(\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\n        );\n      }\n    }\n    return utils.linesToString(result);\n  }\n\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\n    result.push(\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  data0.${channel} = kernelResult`\n    );\n  }\n\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1}.${channel} = float(subKernelResult_${subKernel.name})`\n        );\n      } else {\n        result.push(\n          `  data${i + 1}.${channel} = subKernelResult_${subKernel.name}`\n        );\n      }\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelNumberTexture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1}[0] = float(subKernelResult_${subKernel.name})`\n        );\n      } else {\n        result.push(\n          `  data${i + 1}[0] = subKernelResult_${subKernel.name}`\n        );\n      }\n    }\n    return result;\n  }\n\n  getMainResultKernelArray2Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult[0]',\n      '  data0[1] = kernelResult[1]',\n    ];\n  }\n\n  getMainResultSubKernelArray2Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      result.push(\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray3Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult[0]',\n      '  data0[1] = kernelResult[1]',\n      '  data0[2] = kernelResult[2]',\n    ];\n  }\n\n  getMainResultSubKernelArray3Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      result.push(\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`,\n        `  data${i + 1}[2] = subKernelResult_${subKernel.name}[2]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray4Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0 = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelArray4Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  data${i + 1} = subKernelResult_${this.subKernels[i].name}`\n      );\n    }\n    return result;\n  }\n\n  destroyExtensions() {\n    this.extensions.EXT_color_buffer_float = null;\n    this.extensions.OES_texture_float_linear = null;\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGL2FunctionNode).toJSON();\n    json.settings.threadDim = this.threadDim;\n    return json;\n  }\n}\n\nmodule.exports = {\n  WebGL2Kernel\n};\n},{\"../../utils\":114,\"../function-builder\":9,\"../web-gl/kernel\":70,\"./fragment-shader\":72,\"./function-node\":73,\"./kernel-value-maps\":74,\"./vertex-shader\":106}],106:[function(require,module,exports){\nconst vertexShader = `#version 300 es\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nin vec2 aPos;\nin vec2 aTexCoord;\n\nout vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}`;\n\nmodule.exports = {\n  vertexShader\n};\n},{}],107:[function(require,module,exports){\nconst lib = require('./index');\nconst GPU = lib.GPU;\nfor (const p in lib) {\n  if (!lib.hasOwnProperty(p)) continue;\n  if (p === 'GPU') continue; \n  GPU[p] = lib[p];\n}\n\nif (typeof window !== 'undefined') {\n  bindTo(window);\n}\nif (typeof self !== 'undefined') {\n  bindTo(self);\n}\n\nfunction bindTo(target) {\n  if (target.GPU) return;\n  Object.defineProperty(target, 'GPU', {\n    get() {\n      return GPU;\n    }\n  });\n}\n\nmodule.exports = lib;\n},{\"./index\":109}],108:[function(require,module,exports){\nconst { gpuMock } = require('gpu-mock.js');\nconst { utils } = require('./utils');\nconst { Kernel } = require('./backend/kernel');\nconst { CPUKernel } = require('./backend/cpu/kernel');\nconst { HeadlessGLKernel } = require('./backend/headless-gl/kernel');\nconst { WebGL2Kernel } = require('./backend/web-gl2/kernel');\nconst { WebGLKernel } = require('./backend/web-gl/kernel');\nconst { kernelRunShortcut } = require('./kernel-run-shortcut');\n\n\nconst kernelOrder = [HeadlessGLKernel, WebGL2Kernel, WebGLKernel];\n\nconst kernelTypes = ['gpu', 'cpu'];\n\nconst internalKernels = {\n  'headlessgl': HeadlessGLKernel,\n  'webgl2': WebGL2Kernel,\n  'webgl': WebGLKernel,\n};\n\nlet validate = true;\n\nclass GPU {\n  static disableValidation() {\n    validate = false;\n  }\n\n  static enableValidation() {\n    validate = true;\n  }\n\n  static get isGPUSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported);\n  }\n\n  static get isKernelMapSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.kernelMap);\n  }\n\n  static get isOffscreenCanvasSupported() {\n    return (typeof Worker !== 'undefined' && typeof OffscreenCanvas !== 'undefined') || typeof importScripts !== 'undefined';\n  }\n\n  static get isWebGLSupported() {\n    return WebGLKernel.isSupported;\n  }\n\n  static get isWebGL2Supported() {\n    return WebGL2Kernel.isSupported;\n  }\n\n  static get isHeadlessGLSupported() {\n    return HeadlessGLKernel.isSupported;\n  }\n\n  static get isCanvasSupported() {\n    return typeof HTMLCanvasElement !== 'undefined';\n  }\n\n  static get isGPUHTMLImageArraySupported() {\n    return WebGL2Kernel.isSupported;\n  }\n\n  static get isSinglePrecisionSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.isFloatRead && Kernel.features.isTextureFloat);\n  }\n\n  constructor(settings) {\n    settings = settings || {};\n    this.canvas = settings.canvas || null;\n    this.context = settings.context || null;\n    this.mode = settings.mode;\n    this.Kernel = null;\n    this.kernels = [];\n    this.functions = [];\n    this.nativeFunctions = [];\n    this.injectedNative = null;\n    if (this.mode === 'dev') return;\n    this.chooseKernel();\n    if (settings.functions) {\n      for (let i = 0; i < settings.functions.length; i++) {\n        this.addFunction(settings.functions[i]);\n      }\n    }\n\n    if (settings.nativeFunctions) {\n      for (const p in settings.nativeFunctions) {\n        if (!settings.nativeFunctions.hasOwnProperty(p)) continue;\n        const s = settings.nativeFunctions[p];\n        const { name, source } = s;\n        this.addNativeFunction(name, source, s);\n      }\n    }\n  }\n\n  chooseKernel() {\n    if (this.Kernel) return;\n\n    let Kernel = null;\n\n    if (this.context) {\n      for (let i = 0; i < kernelOrder.length; i++) {\n        const ExternalKernel = kernelOrder[i];\n        if (ExternalKernel.isContextMatch(this.context)) {\n          if (!ExternalKernel.isSupported) {\n            throw new Error(`Kernel type ${ExternalKernel.name} not supported`);\n          }\n          Kernel = ExternalKernel;\n          break;\n        }\n      }\n      if (Kernel === null) {\n        throw new Error('unknown Context');\n      }\n    } else if (this.mode) {\n      if (this.mode in internalKernels) {\n        if (!validate || internalKernels[this.mode].isSupported) {\n          Kernel = internalKernels[this.mode];\n        }\n      } else if (this.mode === 'gpu') {\n        for (let i = 0; i < kernelOrder.length; i++) {\n          if (kernelOrder[i].isSupported) {\n            Kernel = kernelOrder[i];\n            break;\n          }\n        }\n      } else if (this.mode === 'cpu') {\n        Kernel = CPUKernel;\n      }\n      if (!Kernel) {\n        throw new Error(`A requested mode of \"${this.mode}\" and is not supported`);\n      }\n    } else {\n      for (let i = 0; i < kernelOrder.length; i++) {\n        if (kernelOrder[i].isSupported) {\n          Kernel = kernelOrder[i];\n          break;\n        }\n      }\n      if (!Kernel) {\n        Kernel = CPUKernel;\n      }\n    }\n\n    if (!this.mode) {\n      this.mode = Kernel.mode;\n    }\n    this.Kernel = Kernel;\n  }\n\n  createKernel(source, settings) {\n    if (typeof source === 'undefined') {\n      throw new Error('Missing source parameter');\n    }\n    if (typeof source !== 'object' && !utils.isFunction(source) && typeof source !== 'string') {\n      throw new Error('source parameter not a function');\n    }\n\n    const kernels = this.kernels;\n    if (this.mode === 'dev') {\n      const devKernel = gpuMock(source, upgradeDeprecatedCreateKernelSettings(settings));\n      kernels.push(devKernel);\n      return devKernel;\n    }\n\n    source = typeof source === 'function' ? source.toString() : source;\n    const switchableKernels = {};\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings) || {};\n    if (settings && typeof settings.argumentTypes === 'object') {\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\n    }\n\n    function onRequestFallback(args) {\n      console.warn('Falling back to CPU');\n      const fallbackKernel = new CPUKernel(source, {\n        argumentTypes: kernelRun.argumentTypes,\n        constantTypes: kernelRun.constantTypes,\n        graphical: kernelRun.graphical,\n        loopMaxIterations: kernelRun.loopMaxIterations,\n        constants: kernelRun.constants,\n        dynamicOutput: kernelRun.dynamicOutput,\n        dynamicArgument: kernelRun.dynamicArguments,\n        output: kernelRun.output,\n        precision: kernelRun.precision,\n        pipeline: kernelRun.pipeline,\n        immutable: kernelRun.immutable,\n        optimizeFloatMemory: kernelRun.optimizeFloatMemory,\n        fixIntegerDivisionAccuracy: kernelRun.fixIntegerDivisionAccuracy,\n        functions: kernelRun.functions,\n        nativeFunctions: kernelRun.nativeFunctions,\n        injectedNative: kernelRun.injectedNative,\n        subKernels: kernelRun.subKernels,\n        strictIntegers: kernelRun.strictIntegers,\n        debug: kernelRun.debug,\n      });\n      fallbackKernel.build.apply(fallbackKernel, args);\n      const result = fallbackKernel.run.apply(fallbackKernel, args);\n      kernelRun.replaceKernel(fallbackKernel);\n      return result;\n    }\n\n    function onRequestSwitchKernel(reasons, args, _kernel) {\n      if (_kernel.debug) {\n        console.warn('Switching kernels');\n      }\n      let newOutput = null;\n      if (_kernel.signature && !switchableKernels[_kernel.signature]) {\n        switchableKernels[_kernel.signature] = _kernel;\n      }\n      if (_kernel.dynamicOutput) {\n        for (let i = reasons.length - 1; i >= 0; i--) {\n          const reason = reasons[i];\n          if (reason.type === 'outputPrecisionMismatch') {\n            newOutput = reason.needed;\n          }\n        }\n      }\n\n      const Constructor = _kernel.constructor;\n      const argumentTypes = Constructor.getArgumentTypes(_kernel, args);\n      const signature = Constructor.getSignature(_kernel, argumentTypes);\n      const existingKernel = switchableKernels[signature];\n      if (existingKernel) {\n        existingKernel.onActivate(_kernel);\n        return existingKernel;\n      }\n\n      const newKernel = switchableKernels[signature] = new Constructor(source, {\n        argumentTypes,\n        constantTypes: _kernel.constantTypes,\n        graphical: _kernel.graphical,\n        loopMaxIterations: _kernel.loopMaxIterations,\n        constants: _kernel.constants,\n        dynamicOutput: _kernel.dynamicOutput,\n        dynamicArgument: _kernel.dynamicArguments,\n        context: _kernel.context,\n        canvas: _kernel.canvas,\n        output: newOutput || _kernel.output,\n        precision: _kernel.precision,\n        pipeline: _kernel.pipeline,\n        immutable: _kernel.immutable,\n        optimizeFloatMemory: _kernel.optimizeFloatMemory,\n        fixIntegerDivisionAccuracy: _kernel.fixIntegerDivisionAccuracy,\n        functions: _kernel.functions,\n        nativeFunctions: _kernel.nativeFunctions,\n        injectedNative: _kernel.injectedNative,\n        subKernels: _kernel.subKernels,\n        strictIntegers: _kernel.strictIntegers,\n        debug: _kernel.debug,\n        gpu: _kernel.gpu,\n        validate,\n        returnType: _kernel.returnType,\n        tactic: _kernel.tactic,\n        onRequestFallback,\n        onRequestSwitchKernel,\n        texture: _kernel.texture,\n        mappedTextures: _kernel.mappedTextures,\n        drawBuffersMap: _kernel.drawBuffersMap,\n      });\n      newKernel.build.apply(newKernel, args);\n      kernelRun.replaceKernel(newKernel);\n      kernels.push(newKernel);\n      return newKernel;\n    }\n    const mergedSettings = Object.assign({\n      context: this.context,\n      canvas: this.canvas,\n      functions: this.functions,\n      nativeFunctions: this.nativeFunctions,\n      injectedNative: this.injectedNative,\n      gpu: this,\n      validate,\n      onRequestFallback,\n      onRequestSwitchKernel\n    }, settingsCopy);\n\n    const kernel = new this.Kernel(source, mergedSettings);\n    const kernelRun = kernelRunShortcut(kernel);\n\n    if (!this.canvas) {\n      this.canvas = kernel.canvas;\n    }\n\n    if (!this.context) {\n      this.context = kernel.context;\n    }\n\n    kernels.push(kernel);\n\n    return kernelRun;\n  }\n\n  createKernelMap() {\n    let fn;\n    let settings;\n    const argument2Type = typeof arguments[arguments.length - 2];\n    if (argument2Type === 'function' || argument2Type === 'string') {\n      fn = arguments[arguments.length - 2];\n      settings = arguments[arguments.length - 1];\n    } else {\n      fn = arguments[arguments.length - 1];\n    }\n\n    if (this.mode !== 'dev') {\n      if (!this.Kernel.isSupported || !this.Kernel.features.kernelMap) {\n        if (this.mode && kernelTypes.indexOf(this.mode) < 0) {\n          throw new Error(`kernelMap not supported on ${this.Kernel.name}`);\n        }\n      }\n    }\n\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings);\n    if (settings && typeof settings.argumentTypes === 'object') {\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\n    }\n\n    if (Array.isArray(arguments[0])) {\n      settingsCopy.subKernels = [];\n      const functions = arguments[0];\n      for (let i = 0; i < functions.length; i++) {\n        const source = functions[i].toString();\n        const name = utils.getFunctionNameFromString(source);\n        settingsCopy.subKernels.push({\n          name,\n          source,\n          property: i,\n        });\n      }\n    } else {\n      settingsCopy.subKernels = [];\n      const functions = arguments[0];\n      for (let p in functions) {\n        if (!functions.hasOwnProperty(p)) continue;\n        const source = functions[p].toString();\n        const name = utils.getFunctionNameFromString(source);\n        settingsCopy.subKernels.push({\n          name: name || p,\n          source,\n          property: p,\n        });\n      }\n    }\n    return this.createKernel(fn, settingsCopy);\n  }\n\n  combineKernels() {\n    const firstKernel = arguments[0];\n    const combinedKernel = arguments[arguments.length - 1];\n    if (firstKernel.kernel.constructor.mode === 'cpu') return combinedKernel;\n    const canvas = arguments[0].canvas;\n    const context = arguments[0].context;\n    const max = arguments.length - 1;\n    for (let i = 0; i < max; i++) {\n      arguments[i]\n        .setCanvas(canvas)\n        .setContext(context)\n        .setPipeline(true);\n    }\n\n    return function() {\n      const texture = combinedKernel.apply(this, arguments);\n      if (texture.toArray) {\n        return texture.toArray();\n      }\n      return texture;\n    };\n  }\n\n  setFunctions(functions) {\n    this.functions = functions;\n    return this;\n  }\n\n  setNativeFunctions(nativeFunctions) {\n    this.nativeFunctions = nativeFunctions;\n    return this;\n  }\n\n  addFunction(source, settings) {\n    this.functions.push({ source, settings });\n    return this;\n  }\n\n  addNativeFunction(name, source, settings) {\n    if (this.kernels.length > 0) {\n      throw new Error('Cannot call \"addNativeFunction\" after \"createKernels\" has been called.');\n    }\n    this.nativeFunctions.push(Object.assign({ name, source }, settings));\n    return this;\n  }\n\n  injectNative(source) {\n    this.injectedNative = source;\n    return this;\n  }\n\n  destroy() {\n    return new Promise((resolve, reject) => {\n      if (!this.kernels) {\n        resolve();\n      }\n      setTimeout(() => {\n        try {\n          for (let i = 0; i < this.kernels.length; i++) {\n            this.kernels[i].destroy(true); \n          }\n          let firstKernel = this.kernels[0];\n          if (firstKernel) {\n            if (firstKernel.kernel) {\n              firstKernel = firstKernel.kernel;\n            }\n            if (firstKernel.constructor.destroyContext) {\n              firstKernel.constructor.destroyContext(this.context);\n            }\n          }\n        } catch (e) {\n          reject(e);\n        }\n        resolve();\n      }, 0);\n    });\n  }\n}\n\n\nfunction upgradeDeprecatedCreateKernelSettings(settings) {\n  if (!settings) {\n    return {};\n  }\n  const upgradedSettings = Object.assign({}, settings);\n\n  if (settings.hasOwnProperty('floatOutput')) {\n    utils.warnDeprecated('setting', 'floatOutput', 'precision');\n    upgradedSettings.precision = settings.floatOutput ? 'single' : 'unsigned';\n  }\n  if (settings.hasOwnProperty('outputToTexture')) {\n    utils.warnDeprecated('setting', 'outputToTexture', 'pipeline');\n    upgradedSettings.pipeline = Boolean(settings.outputToTexture);\n  }\n  if (settings.hasOwnProperty('outputImmutable')) {\n    utils.warnDeprecated('setting', 'outputImmutable', 'immutable');\n    upgradedSettings.immutable = Boolean(settings.outputImmutable);\n  }\n  if (settings.hasOwnProperty('floatTextures')) {\n    utils.warnDeprecated('setting', 'floatTextures', 'optimizeFloatMemory');\n    upgradedSettings.optimizeFloatMemory = Boolean(settings.floatTextures);\n  }\n  return upgradedSettings;\n}\n\nmodule.exports = {\n  GPU,\n  kernelOrder,\n  kernelTypes\n};\n},{\"./backend/cpu/kernel\":8,\"./backend/headless-gl/kernel\":34,\"./backend/kernel\":36,\"./backend/web-gl/kernel\":70,\"./backend/web-gl2/kernel\":105,\"./kernel-run-shortcut\":111,\"./utils\":114,\"gpu-mock.js\":4}],109:[function(require,module,exports){\nconst { GPU } = require('./gpu');\nconst { alias } = require('./alias');\nconst { utils } = require('./utils');\nconst { Input, input } = require('./input');\nconst { Texture } = require('./texture');\nconst { FunctionBuilder } = require('./backend/function-builder');\nconst { FunctionNode } = require('./backend/function-node');\nconst { CPUFunctionNode } = require('./backend/cpu/function-node');\nconst { CPUKernel } = require('./backend/cpu/kernel');\n\nconst { HeadlessGLKernel } = require('./backend/headless-gl/kernel');\n\nconst { WebGLFunctionNode } = require('./backend/web-gl/function-node');\nconst { WebGLKernel } = require('./backend/web-gl/kernel');\nconst { kernelValueMaps: webGLKernelValueMaps } = require('./backend/web-gl/kernel-value-maps');\n\nconst { WebGL2FunctionNode } = require('./backend/web-gl2/function-node');\nconst { WebGL2Kernel } = require('./backend/web-gl2/kernel');\nconst { kernelValueMaps: webGL2KernelValueMaps } = require('./backend/web-gl2/kernel-value-maps');\n\nconst { GLKernel } = require('./backend/gl/kernel');\n\nconst { Kernel } = require('./backend/kernel');\n\nconst { FunctionTracer } = require('./backend/function-tracer');\n\nconst mathRandom = require('./plugins/math-random-uniformly-distributed');\n\nmodule.exports = {\n  alias,\n  CPUFunctionNode,\n  CPUKernel,\n  GPU,\n  FunctionBuilder,\n  FunctionNode,\n  HeadlessGLKernel,\n  Input,\n  input,\n  Texture,\n  utils,\n\n  WebGL2FunctionNode,\n  WebGL2Kernel,\n  webGL2KernelValueMaps,\n\n  WebGLFunctionNode,\n  WebGLKernel,\n  webGLKernelValueMaps,\n\n  GLKernel,\n  Kernel,\n  FunctionTracer,\n\n  plugins: {\n    mathRandom\n  }\n};\n},{\"./alias\":5,\"./backend/cpu/function-node\":6,\"./backend/cpu/kernel\":8,\"./backend/function-builder\":9,\"./backend/function-node\":10,\"./backend/function-tracer\":11,\"./backend/gl/kernel\":13,\"./backend/headless-gl/kernel\":34,\"./backend/kernel\":36,\"./backend/web-gl/function-node\":38,\"./backend/web-gl/kernel\":70,\"./backend/web-gl/kernel-value-maps\":39,\"./backend/web-gl2/function-node\":73,\"./backend/web-gl2/kernel\":105,\"./backend/web-gl2/kernel-value-maps\":74,\"./gpu\":108,\"./input\":110,\"./plugins/math-random-uniformly-distributed\":112,\"./texture\":113,\"./utils\":114}],110:[function(require,module,exports){\nclass Input {\n  constructor(value, size) {\n    this.value = value;\n    if (Array.isArray(size)) {\n      this.size = size;\n    } else {\n      this.size = new Int32Array(3);\n      if (size.z) {\n        this.size = new Int32Array([size.x, size.y, size.z]);\n      } else if (size.y) {\n        this.size = new Int32Array([size.x, size.y]);\n      } else {\n        this.size = new Int32Array([size.x]);\n      }\n    }\n\n    const [w, h, d] = this.size;\n    if (d) {\n      if (this.value.length !== (w * h * d)) {\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} * ${d} = ${(h * w * d)}`);\n      }\n    } else if (h) {\n      if (this.value.length !== (w * h)) {\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} = ${(h * w)}`);\n      }\n    } else {\n      if (this.value.length !== w) {\n        throw new Error(`Input size ${this.value.length} does not match ${w}`);\n      }\n    }\n\n  }\n\n  toArray() {\n    const { utils } = require('./utils');\n    const [w, h, d] = this.size;\n    if (d) {\n      return utils.erectMemoryOptimized3DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h, d);\n    } else if (h) {\n      return utils.erectMemoryOptimized2DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h);\n    } else {\n      return this.value;\n    }\n  }\n}\n\nfunction input(value, size) {\n  return new Input(value, size);\n}\n\nmodule.exports = {\n  Input,\n  input\n};\n},{\"./utils\":114}],111:[function(require,module,exports){\nconst { utils } = require('./utils');\n\nfunction kernelRunShortcut(kernel) {\n  let run = function() {\n    kernel.build.apply(kernel, arguments);\n    run = function() {\n      let result = kernel.run.apply(kernel, arguments);\n      if (kernel.switchingKernels) {\n        const reasons = kernel.resetSwitchingKernels();\n        const newKernel = kernel.onRequestSwitchKernel(reasons, arguments, kernel);\n        shortcut.kernel = kernel = newKernel;\n        result = newKernel.run.apply(newKernel, arguments);\n      }\n      if (kernel.renderKernels) {\n        return kernel.renderKernels();\n      } else if (kernel.renderOutput) {\n        return kernel.renderOutput();\n      } else {\n        return result;\n      }\n    };\n    return run.apply(kernel, arguments);\n  };\n  const shortcut = function() {\n    return run.apply(kernel, arguments);\n  };\n  shortcut.exec = function() {\n    return new Promise((accept, reject) => {\n      try {\n        accept(run.apply(this, arguments));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n  shortcut.replaceKernel = function(replacementKernel) {\n    kernel = replacementKernel;\n    bindKernelToShortcut(kernel, shortcut);\n  };\n\n  bindKernelToShortcut(kernel, shortcut);\n  return shortcut;\n}\n\nfunction bindKernelToShortcut(kernel, shortcut) {\n  if (shortcut.kernel) {\n    shortcut.kernel = kernel;\n    return;\n  }\n  const properties = utils.allPropertiesOf(kernel);\n  for (let i = 0; i < properties.length; i++) {\n    const property = properties[i];\n    if (property[0] === '_' && property[1] === '_') continue;\n    if (typeof kernel[property] === 'function') {\n      if (property.substring(0, 3) === 'add' || property.substring(0, 3) === 'set') {\n        shortcut[property] = function() {\n          shortcut.kernel[property].apply(shortcut.kernel, arguments);\n          return shortcut;\n        };\n      } else {\n        shortcut[property] = function() {\n          return shortcut.kernel[property].apply(shortcut.kernel, arguments);\n        };\n      }\n    } else {\n      shortcut.__defineGetter__(property, () => shortcut.kernel[property]);\n      shortcut.__defineSetter__(property, (value) => {\n        shortcut.kernel[property] = value;\n      });\n    }\n  }\n  shortcut.kernel = kernel;\n}\nmodule.exports = {\n  kernelRunShortcut\n};\n},{\"./utils\":114}],112:[function(require,module,exports){\nconst source = `// https://www.shadertoy.com/view/4t2SDh\n//note: uniformly distributed, normalized rand, [0,1]\nhighp float randomSeedShift = 1.0;\nhighp float slide = 1.0;\nuniform highp float randomSeed1;\nuniform highp float randomSeed2;\n\nhighp float nrand(highp vec2 n) {\n  highp float result = fract(sin(dot((n.xy + 1.0) * vec2(randomSeed1 * slide, randomSeed2 * randomSeedShift), vec2(12.9898, 78.233))) * 43758.5453);\n  randomSeedShift = result;\n  if (randomSeedShift > 0.5) {\n    slide += 0.00009; \n  } else {\n    slide += 0.0009;\n  }\n  return result;\n}`;\n\nconst name = 'math-random-uniformly-distributed';\n\nconst functionMatch = `Math.random()`;\n\nconst functionReplace = `nrand(vTexCoord)`;\n\nconst functionReturnType = 'Number';\nconst onBeforeRun = (kernel) => {\n  kernel.setUniform1f('randomSeed1', Math.random());\n  kernel.setUniform1f('randomSeed2', Math.random());\n};\n\nconst plugin = {\n  name,\n  onBeforeRun,\n  functionMatch,\n  functionReplace,\n  functionReturnType,\n  source\n};\n\nmodule.exports = plugin;\n},{}],113:[function(require,module,exports){\nclass Texture {\n  constructor(settings) {\n    const {\n      texture,\n      size,\n      dimensions,\n      output,\n      context,\n      type = 'NumberTexture',\n      kernel,\n      internalFormat,\n      textureFormat\n    } = settings;\n    if (!output) throw new Error('settings property \"output\" required.');\n    if (!context) throw new Error('settings property \"context\" required.');\n    if (!texture) throw new Error('settings property \"texture\" required.');\n    if (!kernel) throw new Error('settings property \"kernel\" required.');\n    this.texture = texture;\n    if (texture._refs) {\n      texture._refs++;\n    } else {\n      texture._refs = 1;\n    }\n    this.size = size;\n    this.dimensions = dimensions;\n    this.output = output;\n    this.context = context;\n    this.kernel = kernel;\n    this.type = type;\n    this._deleted = false;\n    this.internalFormat = internalFormat;\n    this.textureFormat = textureFormat;\n  }\n\n  toArray() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  clone() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  delete() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  clear() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n}\n\nmodule.exports = {\n  Texture\n};\n},{}],114:[function(require,module,exports){\nconst acorn = require('acorn');\nconst { Input } = require('./input');\nconst { Texture } = require('./texture');\n\nconst FUNCTION_NAME = /function ([^(]*)/;\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nconst ARGUMENT_NAMES = /([^\\s,]+)/g;\n\nconst utils = {\n  systemEndianness() {\n    return _systemEndianness;\n  },\n  getSystemEndianness() {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) return 'LE';\n    if (c[0] === 0xde) return 'BE';\n    throw new Error('unknown endianness');\n  },\n\n  isFunction(funcObj) {\n    return typeof(funcObj) === 'function';\n  },\n\n  isFunctionString(fn) {\n    if (typeof fn === 'string') {\n      return (fn\n        .slice(0, 'function'.length)\n        .toLowerCase() === 'function');\n    }\n    return false;\n  },\n\n  getFunctionNameFromString(funcStr) {\n    const result = FUNCTION_NAME.exec(funcStr);\n    if (!result || result.length === 0) return null;\n    return result[1].trim();\n  },\n\n  getFunctionBodyFromString(funcStr) {\n    return funcStr.substring(funcStr.indexOf('{') + 1, funcStr.lastIndexOf('}'));\n  },\n\n  getArgumentNamesFromString(fn) {\n    const fnStr = fn.replace(STRIP_COMMENTS, '');\n    let result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n    if (result === null) {\n      result = [];\n    }\n    return result;\n  },\n\n  clone(obj) {\n    if (obj === null || typeof obj !== 'object' || obj.hasOwnProperty('isActiveClone')) return obj;\n\n    const temp = obj.constructor(); \n\n    for (let key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        obj.isActiveClone = null;\n        temp[key] = utils.clone(obj[key]);\n        delete obj.isActiveClone;\n      }\n    }\n\n    return temp;\n  },\n\n  isArray(array) {\n    return !isNaN(array.length);\n  },\n\n  getVariableType(value, strictIntegers) {\n    if (utils.isArray(value)) {\n      if (value.length > 0 && value[0].nodeName === 'IMG') {\n        return 'HTMLImageArray';\n      }\n      return 'Array';\n    }\n\n    switch (value.constructor) {\n      case Boolean:\n        return 'Boolean';\n      case Number:\n        if (strictIntegers && Number.isInteger(value)) {\n          return 'Integer';\n        }\n        return 'Float';\n      case Texture:\n        return value.type;\n      case Input:\n        return 'Input';\n    }\n    if ('nodeName'  in value) {\n      switch (value.nodeName) {\n        case 'IMG':\n          return 'HTMLImage';\n        case 'CANVAS':\n          return 'HTMLImage';\n        case 'VIDEO':\n          return 'HTMLVideo';\n      }\n    } else if (value.hasOwnProperty('type')) {\n      return value.type;\n    } else if (typeof OffscreenCanvas !== 'undefined' && value instanceof OffscreenCanvas) {\n      return 'OffscreenCanvas';\n    } else if (typeof ImageBitmap !== 'undefined' && value instanceof ImageBitmap) {\n      return 'ImageBitmap';\n    } else if (typeof ImageData !== 'undefined' && value instanceof ImageData) {\n      return 'ImageData';\n    }\n    return 'Unknown';\n  },\n\n  getKernelTextureSize(settings, dimensions) {\n    let [w, h, d] = dimensions;\n    let texelCount = (w || 1) * (h || 1) * (d || 1);\n\n    if (settings.optimizeFloatMemory && settings.precision === 'single') {\n      w = texelCount = Math.ceil(texelCount / 4);\n    }\n    if (h > 1 && w * h === texelCount) {\n      return new Int32Array([w, h]);\n    }\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  closestSquareDimensions(length) {\n    const sqrt = Math.sqrt(length);\n    let high = Math.ceil(sqrt);\n    let low = Math.floor(sqrt);\n    while (high * low < length) {\n      high--;\n      low = Math.ceil(length / high);\n    }\n    return new Int32Array([low, Math.ceil(length / low)]);\n  },\n\n  getMemoryOptimizedFloatTextureSize(dimensions, bitRatio) {\n    const totalArea = utils.roundTo((dimensions[0] || 1) * (dimensions[1] || 1) * (dimensions[2] || 1) * (dimensions[3] || 1), 4);\n    const texelCount = totalArea / bitRatio;\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  getMemoryOptimizedPackedTextureSize(dimensions, bitRatio) {\n    const [w, h, d] = dimensions;\n    const totalArea = utils.roundTo((w || 1) * (h || 1) * (d || 1), 4);\n    const texelCount = totalArea / (4 / bitRatio);\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  roundTo(n, d) {\n    return Math.floor((n + d - 1) / d) * d;\n  },\n  getDimensions(x, pad) {\n    let ret;\n    if (utils.isArray(x)) {\n      const dim = [];\n      let temp = x;\n      while (utils.isArray(temp)) {\n        dim.push(temp.length);\n        temp = temp[0];\n      }\n      ret = dim.reverse();\n    } else if (x instanceof Texture) {\n      ret = x.output;\n    } else if (x instanceof Input) {\n      ret = x.size;\n    } else {\n      throw new Error(`Unknown dimensions of ${x}`);\n    }\n\n    if (pad) {\n      ret = Array.from(ret);\n      while (ret.length < 3) {\n        ret.push(1);\n      }\n    }\n\n    return new Int32Array(ret);\n  },\n\n  flatten2dArrayTo(array, target) {\n    let offset = 0;\n    for (let y = 0; y < array.length; y++) {\n      target.set(array[y], offset);\n      offset += array[y].length;\n    }\n  },\n\n  flatten3dArrayTo(array, target) {\n    let offset = 0;\n    for (let z = 0; z < array.length; z++) {\n      for (let y = 0; y < array[z].length; y++) {\n        target.set(array[z][y], offset);\n        offset += array[z][y].length;\n      }\n    }\n  },\n\n  flatten4dArrayTo(array, target) {\n    let offset = 0;\n    for (let l = 0; l < array.length; l++) {\n      for (let z = 0; z < array[l].length; z++) {\n        for (let y = 0; y < array[l][z].length; y++) {\n          target.set(array[l][z][y], offset);\n          offset += array[l][z][y].length;\n        }\n      }\n    }\n  },\n\n  flattenTo(array, target) {\n    if (utils.isArray(array[0])) {\n      if (utils.isArray(array[0][0])) {\n        if (utils.isArray(array[0][0][0])) {\n          utils.flatten4dArrayTo(array, target);\n        } else {\n          utils.flatten3dArrayTo(array, target);\n        }\n      } else {\n        utils.flatten2dArrayTo(array, target);\n      }\n    } else {\n      target.set(array);\n    }\n  },\n\n  splitArray(array, part) {\n    const result = [];\n    for (let i = 0; i < array.length; i += part) {\n      result.push(new array.constructor(array.buffer, i * 4 + array.byteOffset, part));\n    }\n    return result;\n  },\n\n  getAstString(source, ast) {\n    const lines = Array.isArray(source) ? source : source.split(/\\r?\\n/g);\n    const start = ast.loc.start;\n    const end = ast.loc.end;\n    const result = [];\n    if (start.line === end.line) {\n      result.push(lines[start.line - 1].substring(start.column, end.column));\n    } else {\n      result.push(lines[start.line - 1].slice(start.column));\n      for (let i = start.line; i < end.line; i++) {\n        result.push(lines[i]);\n      }\n      result.push(lines[end.line - 1].slice(0, end.column));\n    }\n    return result.join('\\n');\n  },\n\n  allPropertiesOf(obj) {\n    const props = [];\n\n    do {\n      props.push.apply(props, Object.getOwnPropertyNames(obj));\n    } while (obj = Object.getPrototypeOf(obj));\n\n    return props;\n  },\n\n  linesToString(lines) {\n    if (lines.length > 0) {\n      return lines.join(';\\n') + ';\\n';\n    } else {\n      return '\\n';\n    }\n  },\n  warnDeprecated(type, oldName, newName) {\n    if (newName) {\n      console.warn(`You are using a deprecated ${ type } \"${ oldName }\". It has been replaced with \"${ newName }\". Fixing, but please upgrade as it will soon be removed.`);\n    } else {\n      console.warn(`You are using a deprecated ${ type } \"${ oldName }\". It has been removed. Fixing, but please upgrade as it will soon be removed.`);\n    }\n  },\n  flipPixels: (pixels, width, height) => {\n    const halfHeight = height / 2 | 0; \n    const bytesPerRow = width * 4;\n    const temp = new Uint8ClampedArray(width * 4);\n    const result = pixels.slice(0);\n    for (let y = 0; y < halfHeight; ++y) {\n      const topOffset = y * bytesPerRow;\n      const bottomOffset = (height - y - 1) * bytesPerRow;\n\n      temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n\n      result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n\n      result.set(temp, bottomOffset);\n    }\n    return result;\n  },\n  erectPackedFloat: (array, width) => {\n    return array.subarray(0, width);\n  },\n  erect2DPackedFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xStart = y * width;\n      const xEnd = xStart + width;\n      yResults[y] = array.subarray(xStart, xEnd);\n    }\n    return yResults;\n  },\n  erect3DPackedFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xStart = (z * height * width) + y * width;\n        const xEnd = xStart + width;\n        yResults[y] = array.subarray(xStart, xEnd);\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectMemoryOptimizedFloat: (array, width) => {\n    return array.subarray(0, width);\n  },\n  erectMemoryOptimized2DFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const offset = y * width;\n      yResults[y] = array.subarray(offset, offset + width);\n    }\n    return yResults;\n  },\n  erectMemoryOptimized3DFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const offset = (z * height * width) + (y * width);\n        yResults[y] = array.subarray(offset, offset + width);\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectFloat: (array, width) => {\n    const xResults = new Float32Array(width);\n    let i = 0;\n    for (let x = 0; x < width; x++) {\n      xResults[x] = array[i];\n      i += 4;\n    }\n    return xResults;\n  },\n  erect2DFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n      const xResults = new Float32Array(width);\n      for (let x = 0; x < width; x++) {\n        xResults[x] = array[i];\n        i += 4;\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    let i = 0;\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Float32Array(width);\n        for (let x = 0; x < width; x++) {\n          xResults[x] = array[i];\n          i += 4;\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray2: (array, width) => {\n    const xResults = new Array(width);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 2);\n    }\n    return xResults;\n  },\n  erect2DArray2: (array, width, height) => {\n    const yResults = new Array(height);\n    const XResultsMax = width * 4;\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * XResultsMax;\n      let i = 0;\n      for (let x = 0; x < XResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 2);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray2: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 2);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray3: (array, width) => {\n    const xResults = new Array(width);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 3);\n    }\n    return xResults;\n  },\n  erect2DArray3: (array, width, height) => {\n    const xResultsMax = width * 4;\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * xResultsMax;\n      let i = 0;\n      for (let x = 0; x < xResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 3);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray3: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 3);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray4: (array, width) => {\n    const xResults = new Array(array);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 4);\n    }\n    return xResults;\n  },\n  erect2DArray4: (array, width, height) => {\n    const xResultsMax = width * 4;\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * xResultsMax;\n      let i = 0;\n      for (let x = 0; x < xResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 4);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray4: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 4);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n\n  flattenFunctionToString: (source, settings) => {\n    const { findDependency, thisLookup, doNotDefine } = settings;\n    let flattened = settings.flattened;\n    if (!flattened) {\n      flattened = settings.flattened = {};\n    }\n    const ast = acorn.parse(source);\n    const functionDependencies = [];\n    let indent = 0;\n\n    function flatten(ast) {\n      if (Array.isArray(ast)) {\n        const results = [];\n        for (let i = 0; i < ast.length; i++) {\n          results.push(flatten(ast[i]));\n        }\n        return results.join('');\n      }\n      switch (ast.type) {\n        case 'Program':\n          return flatten(ast.body) + (ast.body[0].type === 'VariableDeclaration' ? ';' : '');\n        case 'FunctionDeclaration':\n          return `function ${ast.id.name}(${ast.params.map(flatten).join(', ')}) ${ flatten(ast.body) }`;\n        case 'BlockStatement': {\n          const result = [];\n          indent += 2;\n          for (let i = 0; i < ast.body.length; i++) {\n            const flat = flatten(ast.body[i]);\n            if (flat) {\n              result.push(' '.repeat(indent) + flat, ';\\n');\n            }\n          }\n          indent -= 2;\n          return `{\\n${result.join('')}}`;\n        }\n        case 'VariableDeclaration':\n          const declarations = utils.normalizeDeclarations(ast)\n            .map(flatten)\n            .filter(r => r !== null);\n          if (declarations.length < 1) {\n            return '';\n          } else {\n            return `${ast.kind} ${declarations.join(',')}`;\n          }\n          case 'VariableDeclarator':\n            if (ast.init.object && ast.init.object.type === 'ThisExpression') {\n              const lookup = thisLookup(ast.init.property.name, true);\n              if (lookup) {\n                return `${ast.id.name} = ${flatten(ast.init)}`;\n              } else {\n                return null;\n              }\n            } else {\n              return `${ast.id.name} = ${flatten(ast.init)}`;\n            }\n            case 'CallExpression': {\n              if (ast.callee.property.name === 'subarray') {\n                return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              }\n              if (ast.callee.object.name === 'gl' || ast.callee.object.name === 'context') {\n                return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              }\n              if (ast.callee.object.type === 'ThisExpression') {\n                functionDependencies.push(findDependency('this', ast.callee.property.name));\n                return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              } else if (ast.callee.object.name) {\n                const foundSource = findDependency(ast.callee.object.name, ast.callee.property.name);\n                if (foundSource === null) {\n                  return `${ast.callee.object.name}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                } else {\n                  functionDependencies.push(foundSource);\n                  return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                }\n              } else if (ast.callee.object.type === 'MemberExpression') {\n                return `${flatten(ast.callee.object)}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              } else {\n                throw new Error('unknown ast.callee');\n              }\n            }\n            case 'ReturnStatement':\n              return `return ${flatten(ast.argument)}`;\n            case 'BinaryExpression':\n              return `(${flatten(ast.left)}${ast.operator}${flatten(ast.right)})`;\n            case 'UnaryExpression':\n              if (ast.prefix) {\n                return `${ast.operator} ${flatten(ast.argument)}`;\n              } else {\n                return `${flatten(ast.argument)} ${ast.operator}`;\n              }\n              case 'ExpressionStatement':\n                return `${flatten(ast.expression)}`;\n              case 'SequenceExpression':\n                return `(${flatten(ast.expressions)})`;\n              case 'ArrowFunctionExpression':\n                return `(${ast.params.map(flatten).join(', ')}) => ${flatten(ast.body)}`;\n              case 'Literal':\n                return ast.raw;\n              case 'Identifier':\n                return ast.name;\n              case 'MemberExpression':\n                if (ast.object.type === 'ThisExpression') {\n                  return thisLookup(ast.property.name);\n                }\n                if (ast.computed) {\n                  return `${flatten(ast.object)}[${flatten(ast.property)}]`;\n                }\n                return flatten(ast.object) + '.' + flatten(ast.property);\n              case 'ThisExpression':\n                return 'this';\n              case 'NewExpression':\n                return `new ${flatten(ast.callee)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              case 'ForStatement':\n                return `for (${flatten(ast.init)};${flatten(ast.test)};${flatten(ast.update)}) ${flatten(ast.body)}`;\n              case 'AssignmentExpression':\n                return `${flatten(ast.left)}${ast.operator}${flatten(ast.right)}`;\n              case 'UpdateExpression':\n                return `${flatten(ast.argument)}${ast.operator}`;\n              case 'IfStatement':\n                return `if (${flatten(ast.test)}) ${flatten(ast.consequent)}`;\n              case 'ThrowStatement':\n                return `throw ${flatten(ast.argument)}`;\n              case 'ObjectPattern':\n                return ast.properties.map(flatten).join(', ');\n              case 'ArrayPattern':\n                return ast.elements.map(flatten).join(', ');\n              case 'DebuggerStatement':\n                return 'debugger;';\n              case 'ConditionalExpression':\n                return `${flatten(ast.test)}?${flatten(ast.consequent)}:${flatten(ast.alternate)}`;\n              case 'Property':\n                if (ast.kind === 'init') {\n                  return flatten(ast.key);\n                }\n      }\n      throw new Error(`unhandled ast.type of ${ ast.type }`);\n    }\n    const result = flatten(ast);\n    if (functionDependencies.length > 0) {\n      const flattenedFunctionDependencies = [];\n      for (let i = 0; i < functionDependencies.length; i++) {\n        const functionDependency = functionDependencies[i];\n        if (!flattened[functionDependency]) {\n          flattened[functionDependency] = true;\n        }\n        functionDependency ? flattenedFunctionDependencies.push(utils.flattenFunctionToString(functionDependency, settings) + '\\n') : '';\n      }\n      return flattenedFunctionDependencies.join('') + result;\n    }\n    return result;\n  },\n\n  normalizeDeclarations: (ast) => {\n    if (ast.type !== 'VariableDeclaration') throw new Error('Ast is not of type \"VariableDeclaration\"');\n    const normalizedDeclarations = [];\n    for (let declarationIndex = 0; declarationIndex < ast.declarations.length; declarationIndex++) {\n      const declaration = ast.declarations[declarationIndex];\n      if (declaration.id && declaration.id.type === 'ObjectPattern' && declaration.id.properties) {\n        const { properties } = declaration.id;\n        for (let propertyIndex = 0; propertyIndex < properties.length; propertyIndex++) {\n          const property = properties[propertyIndex];\n          if (property.value.type === 'ObjectPattern' && property.value.properties) {\n            for (let subPropertyIndex = 0; subPropertyIndex < property.value.properties.length; subPropertyIndex++) {\n              const subProperty = property.value.properties[subPropertyIndex];\n              if (subProperty.type === 'Property') {\n                normalizedDeclarations.push({\n                  type: 'VariableDeclarator',\n                  id: {\n                    type: 'Identifier',\n                    name: subProperty.key.name\n                  },\n                  init: {\n                    type: 'MemberExpression',\n                    object: {\n                      type: 'MemberExpression',\n                      object: declaration.init,\n                      property: {\n                        type: 'Identifier',\n                        name: property.key.name\n                      },\n                      computed: false\n                    },\n                    property: {\n                      type: 'Identifier',\n                      name: subProperty.key.name\n                    },\n                    computed: false\n                  }\n                });\n              } else {\n                throw new Error('unexpected state');\n              }\n            }\n          } else if (property.value.type === 'Identifier') {\n            normalizedDeclarations.push({\n              type: 'VariableDeclarator',\n              id: {\n                type: 'Identifier',\n                name: property.value && property.value.name ? property.value.name : property.key.name\n              },\n              init: {\n                type: 'MemberExpression',\n                object: declaration.init,\n                property: {\n                  type: 'Identifier',\n                  name: property.key.name\n                },\n                computed: false\n              }\n            });\n          } else {\n            throw new Error('unexpected state');\n          }\n        }\n      } else if (declaration.id && declaration.id.type === 'ArrayPattern' && declaration.id.elements) {\n        const { elements } = declaration.id;\n        for (let elementIndex = 0; elementIndex < elements.length; elementIndex++) {\n          const element = elements[elementIndex];\n          if (element.type === 'Identifier') {\n            normalizedDeclarations.push({\n              type: 'VariableDeclarator',\n              id: {\n                type: 'Identifier',\n                name: element.name\n              },\n              init: {\n                type: 'MemberExpression',\n                object: declaration.init,\n                property: {\n                  type: 'Literal',\n                  value: elementIndex,\n                  raw: elementIndex.toString(),\n                  start: element.start,\n                  end: element.end\n                },\n                computed: true\n              }\n            });\n          } else {\n            throw new Error('unexpected state');\n          }\n        }\n      } else {\n        normalizedDeclarations.push(declaration);\n      }\n    }\n    return normalizedDeclarations;\n  },\n\n  splitHTMLImageToRGB: (gpu, image) => {\n    const rKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.r * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const gKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.g * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const bKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.b * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const aKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.a * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const result = [\n      rKernel(image),\n      gKernel(image),\n      bKernel(image),\n      aKernel(image),\n    ];\n    result.rKernel = rKernel;\n    result.gKernel = gKernel;\n    result.bKernel = bKernel;\n    result.aKernel = aKernel;\n    result.gpu = gpu;\n    return result;\n  },\n\n  splitRGBAToCanvases: (gpu, rgba, width, height) => {\n    const visualKernelR = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(pixel.r / 255, 0, 0, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelR(rgba);\n\n    const visualKernelG = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(0, pixel.g / 255, 0, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelG(rgba);\n\n    const visualKernelB = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(0, 0, pixel.b / 255, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelB(rgba);\n\n    const visualKernelA = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(255, 255, 255, pixel.a / 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelA(rgba);\n    return [\n      visualKernelR.canvas,\n      visualKernelG.canvas,\n      visualKernelB.canvas,\n      visualKernelA.canvas,\n    ];\n  },\n\n  getMinifySafeName: (fn) => {\n    try {\n      const ast = acorn.parse(`const value = ${fn.toString()}`);\n      const { init } = ast.body[0].declarations[0];\n      return init.body.name || init.body.body[0].argument.name;\n    } catch (e) {\n      throw new Error('Unrecognized function type.  Please use `() => yourFunctionVariableHere` or function() { return yourFunctionVariableHere; }');\n    }\n  },\n  sanitizeName: function(name) {\n    if (dollarSign.test(name)) {\n      name = name.replace(dollarSign, 'S_S');\n    }\n    if (doubleUnderscore.test(name)) {\n      name = name.replace(doubleUnderscore, 'U_U');\n    } else if (singleUnderscore.test(name)) {\n      name = name.replace(singleUnderscore, 'u_u');\n    }\n    return name;\n  }\n};\n\nconst dollarSign = /\\$/;\nconst doubleUnderscore = /__/;\nconst singleUnderscore = /_/;\n\nconst _systemEndianness = utils.getSystemEndianness();\n\nmodule.exports = {\n  utils\n};\n\n},{\"./input\":110,\"./texture\":113,\"acorn\":1}]},{},[107])(107)\n});\n","const median = function (\n  data,\n  width,\n  height,\n  windowSize = 3,\n) {\n  const channels = data.length / (width * height);\n  const filterWindow = [];\n  const limit = (windowSize - 1) / 2;\n\n  for (let i = limit * -1; i < limit + 1; i += 1) {\n    for (let j = limit * -1; j < limit + 1; j += 1) {\n      filterWindow.push([i, j])\n    }\n  }\n\n  for (let col = limit; col < width - limit; col += 1) {\n    for (let row = limit; row < height - limit; row += 1) {\n      const index = (row * width + col) * channels\n      const arr = []\n\n      for (let z = 0; z < filterWindow.length; z += 1) {\n        const i = ((row + filterWindow[z][0]) * width + (col + filterWindow[z][1])) * channels\n        const average = Math.sqrt((data[i] ** 2 + data[i + 1] ** 2 + data[i + 2] ** 2) / 3)\n\n        arr.push(average)\n      }\n\n      const sorted = arr.sort((a, b) => a - b)\n      const medianValue = sorted[Math.floor(sorted.length / 2)]\n\n      data[index + 0] = medianValue\n      data[index + 1] = medianValue\n      data[index + 2] = medianValue\n\n      if (channels === 4) data[index + 3] = 255\n    }\n  }\n\n  return data;\n}\n\nconst applyMedianFilter = function(sourceId, targetId, scale) {\n\n  var width = 256;\n  var height = 256;\n\n  /** @type {HTMLCanvasElement} */\n  /* @ts-ignore */\n  var sourceCanvas = document.getElementById(sourceId);\n  /** @type {HTMLCanvasElement} */\n  /* @ts-ignore */\n  var targetCanvas = document.getElementById(targetId);\n\n  var ctx = sourceCanvas.getContext('2d');\n  var image = ctx.getImageData(0, 0, width, height);\n  var pix = image.data;\n  var workContext = targetCanvas.getContext('2d');\n  var data = median(pix, width, height, 7);\n\n  let imageData = new ImageData(width, height);\n  imageData.data.set(data);\n  workContext.putImageData(imageData, 0, 0);\n\n}\n\nconst copyScaled = function(sourceId, targetId, scale) {\n\n  var width = 256;\n  var height = 256;\n\n  /** @type {HTMLCanvasElement} */\n  /* @ts-ignore */\n  var sourceCanvas = document.getElementById(sourceId);\n  /** @type {HTMLCanvasElement} */\n  /* @ts-ignore */\n  var targetCanvas = document.getElementById(targetId);\n\n  var ctx = targetCanvas.getContext('2d');\n  ctx.drawImage(sourceCanvas, 0, 0, width, height, 0, 0, width * scale, height * scale);\n\n}\n\nconst kernel = function (width, height, centerX, centerY) {\n  this.width = width;\n  this.height = height;\n  this.centerX = centerX || Math.floor(width / 2);\n  this.centerY = centerY || Math.floor(height / 2);\n  this.weightArray = [];\n  for (var h = 0; h < height; ++h) {\n    this.weightArray.push([]);\n    for (var w = 0; w < width; ++w) {\n      this.weightArray[h].push(0);\n    }\n  }\n}\n\nvar kernelFilter = new kernel(3,3);\nfor(var y=0;y<3;++y) {\n  for (var x=0;x<3;++x) {\n    kernelFilter.weightArray[x][y]=-2;\n  }\n}\nkernelFilter.weightArray[1][1]=16;\n\nfunction processImage(sourceId, targetId) {\n\n  var width = 256;\n  var height = 256;\n\n  /** @type {HTMLCanvasElement} */\n  /* @ts-ignore */\n  var sourceCanvas = document.getElementById(sourceId);\n  /** @type {HTMLCanvasElement} */\n  /* @ts-ignore */\n  var targetCanvas = document.getElementById(targetId);\n\n  var ctx = sourceCanvas.getContext('2d');\n  var image = ctx.getImageData(0, 0, width, height);\n  var pix = image.data;\n  var workContext = targetCanvas.getContext('2d');\n  var workArea = workContext.getImageData(0, 0, width, height);\n\n  var getPix = function (x, y) {\n    x = Math.max(0, Math.min(x, width - 1));\n    y = Math.max(0, Math.min(y, height - 1));\n    var address = (y * width + x) * 4;\n    return [pix[address + 0], pix[address + 1], pix[address + 2], pix[address + 3]];\n  }\n\n  var getFilteredPix = function (x, y) {\n    var retVal = [0, 0, 0, 0];\n    for (var fy = 0; fy < kernelFilter.height; ++fy) {\n      for (var fx = 0; fx < kernelFilter.width; ++fx) {\n        var m = kernelFilter.weightArray[fy][fx];\n        var pix = getPix(x + fx - kernelFilter.centerX, y + fy - kernelFilter.centerY);\n        retVal[0] += pix[0] * m;\n        retVal[1] += pix[1] * m;\n        retVal[2] += pix[2] * m;\n      }\n    }\n    retVal[3] = 255;\n    return retVal;\n  }\n\n  for (var yPos = 0; yPos < height; ++yPos) {\n    for (var xPos = 0; xPos < width; ++xPos) {\n      var modifiedPix = getFilteredPix(xPos, yPos);\n      var address = (yPos * width + xPos) * 4;\n      var lum = Math.max(modifiedPix[0], modifiedPix[1], modifiedPix[2]);\n      workArea.data[address+0]=lum;\n      workArea.data[address+1]=lum;\n      workArea.data[address+2]=lum;\n      workArea.data[address+3]=255;\n    }\n  }\n\n  workContext.putImageData(workArea, 0, 0);\n\n}\n\nconst fromDataURL = function (dataURL) {\n\n  var img = new Image();\n  img.src = dataURL;\n\n  if (img.width == 256 && img.height == 256) {\n\n    /** @type {HTMLCanvasElement} */\n    /* @ts-ignore */\n    var canvas = document.getElementById(\"input_image\");\n    canvas.width = img.width;\n    canvas.height = img.height;\n\n    var ctx = canvas.getContext('2d');\n    ctx.drawImage(img, 0, 0);\n\n    return true;\n\n  }\n\n  return false;\n\n}\n\nconst addFileReader = function (elem, listener) {\n\n  if (elem && window.FileReader) {\n\n    elem.ondragover = function () { elem.classList.add('dragover'); return false; };\n    elem.ondragleave = function () { elem.classList.remove('dragover'); return false; };\n\n    elem.ondrop = function (e) {\n\n      elem.classList.remove('dragover');\n      e.stopPropagation();\n      e.preventDefault();\n\n      var file = e.dataTransfer.files[0];\n      var reader = new FileReader();\n\n      reader.onload = function (event) {\n        if (event.target && event.target.result) {\n\n          if (fromDataURL(event.target.result)) {\n            applyMedianFilter(\"input_image\", \"input_image\");\n            //applyMedianFilter(\"input_image\", \"input_image\");\n            copyScaled(\"input_image\", \"blur_image\", 0.5);   \n            processImage(\"blur_image\", \"edge_image\");\n            copyScaled(\"edge_image\", \"edge_scaled_image\", 0.5);\n            listener();\n          }\n        }\n      };\n\n      reader.readAsDataURL(file);\n\n      return false;\n\n    };\n\n  }\n\n}\n\nmodule.exports = {\n  applyMedianFilter,\n  processImage,\n  addFileReader,\n}\n","const brain = require('brain.js');\nconst { outputs } = require(\"./outputs\");\n\nlet top = 0;\nlet left = 0;\nlet guess = NaN;\n\nlet d = window.localStorage.getItem(\"trainingData\");\nwindow['_trainingData'] = d ? JSON.parse(d) : [];\n\nlet inputData;\n\ndocument.getElementById(\"skip\").onclick = () => {\n  console.log(\"skipped\");\n  left += 7;\n  if (left >= 63) {\n    left = 0;\n    top += 7;\n  }\n  if (top >= 63) {\n    top = 0;\n    left = 0;\n  }\n  setInputChunk();\n};\n\ndocument.getElementById(\"accept\").onclick = () => {\n  if (isNaN(guess)) {\n    return;\n  }\n  \n  console.log(\"accepted\", guess);\n  \n  window['_trainingData'].push({\n    input: inputData,\n    output: outputs[guess],\n  });\n\n  /** @type {HTMLCanvasElement} */\n  /* @ts-ignore */\n  var outputCanvas = document.getElementById(\"output\" + guess);\n  /** @type {HTMLCanvasElement} */\n  /* @ts-ignore */\n  var sourceCanvas = document.getElementById(\"edge_scaled_image\");\n  var ctx = sourceCanvas.getContext('2d');\n  ctx.drawImage(outputCanvas, left, top);\n\n  left += 7;\n  if (left >= 63) {\n    left = 0;\n    top += 7;\n  }\n  if (top >= 63) {\n    top = 0;\n    left = 0;\n  }\n\n  window.localStorage.setItem(\"trainingData\", JSON.stringify(window['_trainingData']));\n\n  setInputChunk();\n};\n\nconst container = document.getElementById(\"outputs\");\n\nconst addOutputs = () => {\n\n  outputs.forEach((output, idx) => {\n\n    const outputElement = document.createElement(\"div\");\n    outputElement.className = \"chunk output_chunk\";\n    const outputCanvas = document.createElement(\"canvas\");\n    outputCanvas.width = 7;\n    outputCanvas.height = 7;\n    outputCanvas.id = \"output\" + idx;\n    outputCanvas.className = \"chunk\";\n    outputElement.dataset.id = `${idx}`;\n    outputElement.appendChild(outputCanvas);\n\n    const imgArray = new Uint8ClampedArray(7 * 7 * 4);\n    output.forEach((val, idx) => {\n      imgArray[idx * 4 + 0] = val * 255;\n      imgArray[idx * 4 + 1] = val * 255;\n      imgArray[idx * 4 + 2] = val * 255;\n      imgArray[idx * 4 + 3] = 255\n    });\n\n    const imageData = new ImageData(7, 7);\n    imageData.data.set(imgArray);\n\n    const ctx = outputCanvas.getContext('2d');\n    ctx.putImageData(imageData, 0, 0);\n\n    container.appendChild(outputElement);\n\n    const out = [];\n    outputs.forEach(output => {\n      out.push(0);\n    });\n\n    outputElement.onclick = () => {\n      console.log(\"selected\", idx);\n      out[idx] = 1;\n      window['_trainingData'].push({\n        input: inputData,\n        output: out,\n      });\n\n      /** @type {HTMLCanvasElement} */\n      /* @ts-ignore */\n      var sourceCanvas = document.getElementById(\"edge_scaled_image\");\n      var ctx = sourceCanvas.getContext('2d');\n      ctx.drawImage(outputCanvas, left, top);\n\n      left += 7;\n      if (left >= 63) {\n        left = 0;\n        top += 7;\n      }\n      if (top >= 63) {\n        top = 0;\n        left = 0;\n      }\n\n      window.localStorage.setItem(\"trainingData\", JSON.stringify(window['_trainingData']));\n\n      setInputChunk();\n    };\n\n  });\n\n}\n\nconst net = new brain.NeuralNetworkGPU();\n\nconst guessLikely = function () {\n\n\n  if (window[\"_trainingData\"].length > 3) {\n\n    net.train(window[\"_trainingData\"], {\n        log: detail => console.log(detail),\n        timeout: 1000,\n    });\n\n    const resultIdx = brain.likely(inputData, net);\n\n    console.log(resultIdx)\n\n    if (resultIdx !== undefined) {\n\n      const result = outputs[resultIdx];\n      guess = resultIdx;\n\n      if (result && Array.isArray(result)) {\n\n        const imgArray = new Uint8ClampedArray(7 * 7 * 4);\n        result.forEach((val, idx) => {\n          imgArray[idx * 4 + 0] = val * 255;\n          imgArray[idx * 4 + 1] = val * 255;\n          imgArray[idx * 4 + 2] = val * 255;\n          imgArray[idx * 4 + 3] = 255\n        });\n    \n        const imageData = new ImageData(7, 7);\n        imageData.data.set(imgArray);\n        \n        /** @type {HTMLCanvasElement} */\n        /* @ts-ignore */\n        const likelyCanvas = document.getElementById(\"likely_image\");\n        const ctx = likelyCanvas.getContext('2d');\n        ctx.putImageData(imageData, 0, 0);\n        \n      }\n\n    }\n\n  }\n\n}\n\nconst setInputChunk = () => {\n  /** @type {HTMLCanvasElement} */\n  /* @ts-ignore */\n  var sourceCanvas = document.getElementById(\"edge_scaled_image\");\n  /** @type {HTMLCanvasElement} */\n  /* @ts-ignore */\n  var targetCanvas = document.getElementById(\"training_image\");\n\n  var ctx = targetCanvas.getContext('2d');\n\n  ctx.drawImage(sourceCanvas, left, top, 7, 7, 0, 0, 7, 7);\n  const imageData = ctx.getImageData(0, 0, 7, 7);\n  inputData = [];\n  imageData.data.forEach((val, idx) => {\n    if (idx % 4 === 0) {\n      inputData.push(val / 255);\n    }\n  });\n  guessLikely();\n\n}\n\nconst onImageDropped = () => {\n\n  top = 0;\n  left = 0;\n\n  setInputChunk();\n\n}\n\n\nmodule.exports = {\n  addOutputs,\n  onImageDropped\n}","/**\n * Return 0 or 1 for '#'\n * @param character\n * @returns {number}\n */\nfunction integer(character) {\n  if (character === '#') return 1;\n  return 0;\n}\n\n/**\n * Turn the # into 1s and . into 0s. for whole string\n * @param string\n * @returns {Array}\n */\nfunction pixelChunk(string) {\n  return string.trim().split('').map(integer);\n}\n\nconst blank = pixelChunk(\n  '.......' +\n  '.......' +\n  '.......' +\n  '.......' +\n  '.......' +\n  '.......' +\n  '.......'\n);\n\nconst horizontalLine = pixelChunk(\n  '.......' +\n  '.......' +\n  '.......' +\n  '#######' +\n  '.......' +\n  '.......' +\n  '.......'\n);\n\nconst cross = pixelChunk(\n  '...#...' +\n  '...#...' +\n  '...#...' +\n  '#######' +\n  '...#...' +\n  '...#...' +\n  '...#...'\n);\n\nconst verticalLine = pixelChunk(\n  '...#...' +\n  '...#...' +\n  '...#...' +\n  '...#...' +\n  '...#...' +\n  '...#...' +\n  '...#...'\n);\n\nconst topRightCorner = pixelChunk(\n  '.......' +\n  '.......' +\n  '.......' +\n  '####...' +\n  '...#...' +\n  '...#...' +\n  '...#...'\n);\n\nconst topLeftCorner = pixelChunk(\n  '.......' +\n  '.......' +\n  '.......' +\n  '...####' +\n  '...#...' +\n  '...#...' +\n  '...#...'\n);\n\nconst bottomRightCorner = pixelChunk(\n  '...#...' +\n  '...#...' +\n  '...#...' +\n  '####...' +\n  '.......' +\n  '.......' +\n  '.......'\n);\n\nconst bottomLeftCorner = pixelChunk(\n  '...#...' +\n  '...#...' +\n  '...#...' +\n  '...####' +\n  '.......' +\n  '.......' +\n  '.......'\n);\n\nconst topT = pixelChunk(\n  '.......' +\n  '.......' +\n  '.......' +\n  '#######' +\n  '...#...' +\n  '...#...' +\n  '...#...'\n);\n\nconst bottomT = pixelChunk(\n  '...#...' +\n  '...#...' +\n  '...#...' +\n  '#######' +\n  '.......' +\n  '.......' +\n  '.......'\n);\n\nconst leftT = pixelChunk(\n  '...#...' +\n  '...#...' +\n  '...#...' +\n  '...####' +\n  '...#...' +\n  '...#...' +\n  '...#...'\n);\n\nconst rightT = pixelChunk(\n  '...#...' +\n  '...#...' +\n  '...#...' +\n  '####...' +\n  '...#...' +\n  '...#...' +\n  '...#...'\n);\n\nconst topRightRoundedCorner = pixelChunk(\n  '.......' +\n  '.......' +\n  '.......' +\n  '##.....' +\n  '..#....' +\n  '...#...' +\n  '...#...'\n);\n\nconst topLeftRoundedCorner = pixelChunk(\n  '.......' +\n  '.......' +\n  '.......' +\n  '.....##' +\n  '....#..' +\n  '...#...' +\n  '...#...'\n);\n\nconst bottomRightRoundedCorner = pixelChunk(\n  '...#...' +\n  '...#...' +\n  '..#....' +\n  '##.....' +\n  '.......' +\n  '.......' +\n  '.......'\n);\n\nconst bottomLeftRoundedCorner = pixelChunk(\n  '...#...' +\n  '...#...' +\n  '....#..' +\n  '.....##' +\n  '.......' +\n  '.......' +\n  '.......'\n);\n\nconst forwardRoundedCorners = pixelChunk(\n  '...#...' +\n  '...#...' +\n  '....#..' +\n  '##...##' +\n  '..#....' +\n  '...#...' +\n  '...#...'\n);\n\nconst backwardRoundedCorners = pixelChunk(\n  '...#...' +\n  '...#...' +\n  '..#....' +\n  '##...##' +\n  '....#..' +\n  '...#...' +\n  '...#...'\n);\n\nconst topY = pixelChunk(\n  '.......' +\n  '.......' +\n  '.......' +\n  '##...##' +\n  '..#.#..' +\n  '...#...' +\n  '...#...'\n);\n\nconst bottomY = pixelChunk(\n  '...#...' +\n  '...#...' +\n  '..#.#..' +\n  '##...##' +\n  '.......' +\n  '.......' +\n  '.......'\n);\n\nconst leftY = pixelChunk(\n  '...#...' +\n  '...#...' +\n  '....#..' +\n  '.....##' +\n  '....#..' +\n  '...#...' +\n  '...#...'\n);\n\nconst rightY = pixelChunk(\n  '...#...' +\n  '...#...' +\n  '..#....' +\n  '##.....' +\n  '..#....' +\n  '...#...' +\n  '...#...'\n);\n\nconst horizontalLineDouble = pixelChunk(\n  '.......' +\n  '#######' +\n  '.......' +\n  '.......' +\n  '.......' +\n  '#######' +\n  '.......'\n);\n\nconst crossDouble = pixelChunk(\n  '.#...#.' +\n  '##...##' +\n  '.......' +\n  '.......' +\n  '.......' +\n  '##...##' +\n  '.#...#.'\n);\n\nconst verticalLineDouble = pixelChunk(\n  '.#...#.' +\n  '.#...#.' +\n  '.#...#.' +\n  '.#...#.' +\n  '.#...#.' +\n  '.#...#.' +\n  '.#...#.'\n);\n\nconst topRightCornerDouble = pixelChunk(\n  '.......' +\n  '.######' +\n  '.#.....' +\n  '.#.....' +\n  '.#.....' +\n  '.#...##' +\n  '.#...#.'\n);\n\nconst topLeftCornerDouble = pixelChunk(\n  '.......' +\n  '######.' +\n  '.....#.' +\n  '.....#.' +\n  '.....#.' +\n  '##...#.' +\n  '.#...#.'\n);\n\nconst bottomRightCornerDouble = pixelChunk(\n  '.#...#.' +\n  '##...#.' +\n  '.....#.' +\n  '.....#.' +\n  '.....#.' +\n  '######.' +\n  '.......'\n);\n\nconst bottomLeftCornerDouble = pixelChunk(\n  '.#...#.' +\n  '.#...##' +\n  '.#.....' +\n  '.#.....' +\n  '.#.....' +\n  '.######' +\n  '.......'\n);\n\nconst topTDouble = pixelChunk(\n  '.......' +\n  '#######' +\n  '.......' +\n  '.......' +\n  '.......' +\n  '##...##' +\n  '.#...#.'\n);\n\nconst bottomTDouble = pixelChunk(\n  '.#...#.' +\n  '##...##' +\n  '.......' +\n  '.......' +\n  '.......' +\n  '#######' +\n  '.......'\n);\n\nconst leftTDouble = pixelChunk(\n  '.#...#.' +\n  '.#...##' +\n  '.#.....' +\n  '.#.....' +\n  '.#.....' +\n  '.#...##' +\n  '.#...#.'\n);\n\nconst rightTDouble = pixelChunk(\n  '.#...#.' +\n  '##...#.' +\n  '.....#.' +\n  '.....#.' +\n  '.....#.' +\n  '##...#.' +\n  '.#...#.'\n);\n\nconst topTDoubleSingle = pixelChunk(\n  '.......' +\n  '#######' +\n  '.......' +\n  '.......' +\n  '.......' +\n  '#######' +\n  '...#...'\n);\n\nconst bottomTDoubleSingle = pixelChunk(\n  '...#...' +\n  '#######' +\n  '.......' +\n  '.......' +\n  '.......' +\n  '#######' +\n  '.......'\n);\n\nconst leftTDoubleSingle = pixelChunk(\n  '.#...#.' +\n  '.#...#.' +\n  '.#...#.' +\n  '.#...##' +\n  '.#...#.' +\n  '.#...#.' +\n  '.#...#.'\n);\n\nconst rightTDoubleSingle = pixelChunk(\n  '.#...#.' +\n  '.#...#.' +\n  '.#...#.' +\n  '##...#.' +\n  '.#...#.' +\n  '.#...#.' +\n  '.#...#.'\n);\n\nconst topTSingleDouble = pixelChunk(\n  '.......' +\n  '.......' +\n  '.......' +\n  '#######' +\n  '.#...#.' +\n  '.#...#.' +\n  '.#...#.' \n);\n\nconst bottomTSingleDouble = pixelChunk(\n  '.#...#.' +\n  '.#...#.' +\n  '.#...#.' +\n  '#######' +\n  '.......' +\n  '.......' +\n  '.......'\n);\n\nconst leftTSingleDouble = pixelChunk(\n  '...#...' +\n  '...####' +\n  '...#...' +\n  '...#...' +\n  '...#...' +\n  '...####' +\n  '...#...'\n);\n\nconst rightTSingleDouble = pixelChunk(\n  '...#...' +\n  '####...' +\n  '...#...' +\n  '...#...' +\n  '...#...' +\n  '####...' +\n  '...#...'\n);\nconst topTSingleDoubleCross = pixelChunk(\n  '...#...' +\n  '...#...' +\n  '...#...' +\n  '#######' +\n  '.#...#.' +\n  '.#...#.' +\n  '.#...#.' \n);\n\nconst bottomTSingleDoubleCross = pixelChunk(\n  '.#...#.' +\n  '.#...#.' +\n  '.#...#.' +\n  '#######' +\n  '...#...' +\n  '...#...' +\n  '...#...'\n);\n\nconst leftTSingleDoubleCross = pixelChunk(\n  '...#...' +\n  '...####' +\n  '...#...' +\n  '####...' +\n  '...#...' +\n  '...####' +\n  '...#...'\n);\n\nconst rightTSingleDoubleCross = pixelChunk(\n  '...#...' +\n  '####...' +\n  '...#...' +\n  '...####' +\n  '...#...' +\n  '####...' +\n  '...#...'\n);\n\nconst crossHDoubleSingle = pixelChunk(\n  '...#...' +\n  '#######' +\n  '.......' +\n  '.......' +\n  '.......' +\n  '#######' +\n  '...#...'\n);\n\nconst crossVDoubleSingle = pixelChunk(\n  '.#...#.' +\n  '.#...#.' +\n  '.#...#.' +\n  '##...##' +\n  '.#...#.' +\n  '.#...#.' +\n  '.#...#.'\n);\n\nconst crossHSingleDouble = pixelChunk(\n  '.#...#.' +\n  '.#...#.' +\n  '.#...#.' +\n  '#######' +\n  '.#...#.' +\n  '.#...#.' +\n  '.#...#.'\n);\n\nconst crossVSingleDouble = pixelChunk(\n  '...#...' +\n  '#######' +\n  '...#...' +\n  '...#...' +\n  '...#...' +\n  '#######' +\n  '...#...'\n);\n\nconst topRightCornerDoubleSingle = pixelChunk(\n  '...#...' +\n  '.######' +\n  '.#.....' +\n  '##.....' +\n  '.#.....' +\n  '.#...##' +\n  '.#...#.'\n);\n\nconst topLeftCornerDoubleSingle = pixelChunk(\n  '...#...' +\n  '######.' +\n  '.....#.' +\n  '.....##' +\n  '.....#.' +\n  '##...#.' +\n  '.#...#.'\n);\n\nconst bottomRightCornerDoubleSingle = pixelChunk(\n  '.#...#.' +\n  '##...#.' +\n  '.....#.' +\n  '.....##' +\n  '.....#.' +\n  '######.' +\n  '...#...'\n);\n\nconst bottomLeftCornerDoubleSingle = pixelChunk(\n  '.#...#.' +\n  '.#...##' +\n  '.#.....' +\n  '##.....' +\n  '.#.....' +\n  '.######' +\n  '...#...'\n);\n\nconst topRightCornerDoubleSingleH = pixelChunk(\n  '.......' +\n  '.######' +\n  '.#.....' +\n  '##.....' +\n  '.#.....' +\n  '.#...##' +\n  '.#...#.'\n);\n\nconst topLeftCornerDoubleSingleH = pixelChunk(\n  '.......' +\n  '######.' +\n  '.....#.' +\n  '.....##' +\n  '.....#.' +\n  '##...#.' +\n  '.#...#.'\n);\n\nconst bottomRightCornerDoubleSingleH = pixelChunk(\n  '.#...#.' +\n  '##...#.' +\n  '.....#.' +\n  '.....##' +\n  '.....#.' +\n  '######.' +\n  '.......'\n);\n\nconst bottomLeftCornerDoubleSingleH = pixelChunk(\n  '.#...#.' +\n  '.#...##' +\n  '.#.....' +\n  '##.....' +\n  '.#.....' +\n  '.######' +\n  '.......'\n);\n\nconst topRightCornerDoubleSingleV = pixelChunk(\n  '...#...' +\n  '.######' +\n  '.#.....' +\n  '.#.....' +\n  '.#.....' +\n  '.#...##' +\n  '.#...#.'\n);\n\nconst topLeftCornerDoubleSingleV = pixelChunk(\n  '...#...' +\n  '######.' +\n  '.....#.' +\n  '.....#.' +\n  '.....#.' +\n  '##...#.' +\n  '.#...#.'\n);\n\nconst bottomRightCornerDoubleSingleV = pixelChunk(\n  '.#...#.' +\n  '##...#.' +\n  '.....#.' +\n  '.....#.' +\n  '.....#.' +\n  '######.' +\n  '...#...'\n);\n\nconst bottomLeftCornerDoubleSingleV = pixelChunk(\n  '.#...#.' +\n  '.#...##' +\n  '.#.....' +\n  '.#.....' +\n  '.#.....' +\n  '.######' +\n  '...#...'\n);\n\nconst horizontalDoubleToSingle = pixelChunk(\n  '.......' +\n  '####...' +\n  '...#...' +\n  '...####' +\n  '...#...' +\n  '####...' +\n  '.......'\n);\n\nconst horizontalSingleToDouble = pixelChunk(\n  '.......' +\n  '...####' +\n  '...#...' +\n  '####...' +\n  '...#...' +\n  '...####' +\n  '.......'\n);\n\nconst verticalDoubleToSingle = pixelChunk(\n  '.#...#.' +\n  '.#...#.' +\n  '.#...#.' +\n  `.#####.` +\n  '...#...' +\n  '...#...' +\n  '...#...'\n);\n\nconst verticalSingleToDouble = pixelChunk(\n  '...#...' +\n  '...#...' +\n  '...#...' +\n  `.#####.` +\n  '.#...#.' +\n  '.#...#.' +\n  '.#...#.'\n);\n\nconst horizontalDoubleToNone= pixelChunk(\n  '.......' +\n  '####...' +\n  '...#...' +\n  '...#...' +\n  '...#...' +\n  '####...' +\n  '.......'\n);\n\nconst horizontalNoneToDouble = pixelChunk(\n  '.......' +\n  '...####' +\n  '...#...' +\n  '...#...' +\n  '...#...' +\n  '...####' +\n  '.......'\n);\n\nconst verticalDoubleToNone = pixelChunk(\n  '.#...#.' +\n  '.#...#.' +\n  '.#...#.' +\n  `.#####.` +\n  '.......' +\n  '.......' +\n  '.......'\n);\n\nconst verticalNoneToDouble = pixelChunk(\n  '.......' +\n  '.......' +\n  '.......' +\n  `.#####.` +\n  '.#...#.' +\n  '.#...#.' +\n  '.#...#.'\n);\n\n\nconst outputs = [\n  blank,\n  horizontalLine,\n  cross,\n  verticalLine,\n  topRightCorner,\n  topLeftCorner,\n  bottomRightCorner,\n  bottomLeftCorner,\n  topT,\n  bottomT,\n  leftT,\n  rightT,\n  topRightRoundedCorner,\n  topLeftRoundedCorner,\n  bottomRightRoundedCorner,\n  bottomLeftRoundedCorner,\n  forwardRoundedCorners,\n  backwardRoundedCorners,\n  topY,\n  bottomY,\n  leftY,\n  rightY,\n  horizontalLineDouble,\n  crossDouble,\n  verticalLineDouble,\n  topRightCornerDouble,\n  topLeftCornerDouble,\n  bottomRightCornerDouble,\n  bottomLeftCornerDouble,\n  topTDouble,\n  bottomTDouble,\n  leftTDouble,\n  rightTDouble,\n  topTDoubleSingle,\n  bottomTDoubleSingle,\n  leftTDoubleSingle,\n  rightTDoubleSingle,\n  topTSingleDouble,\n  bottomTSingleDouble,\n  leftTSingleDouble,\n  rightTSingleDouble,\n  topTSingleDoubleCross,\n  bottomTSingleDoubleCross,\n  leftTSingleDoubleCross,\n  rightTSingleDoubleCross,\n  crossHDoubleSingle,\n  crossVDoubleSingle,\n  crossHSingleDouble,\n  crossVSingleDouble,\n  topRightCornerDoubleSingle,\n  topLeftCornerDoubleSingle,\n  bottomRightCornerDoubleSingle,\n  bottomLeftCornerDoubleSingle,\n  topRightCornerDoubleSingleH,\n  topLeftCornerDoubleSingleH,\n  bottomRightCornerDoubleSingleH,\n  bottomLeftCornerDoubleSingleH,\n  topRightCornerDoubleSingleV,\n  topLeftCornerDoubleSingleV,\n  bottomRightCornerDoubleSingleV,\n  bottomLeftCornerDoubleSingleV,\n  horizontalDoubleToSingle,\n  horizontalSingleToDouble,\n  verticalDoubleToSingle,\n  verticalSingleToDouble,\n  horizontalDoubleToNone,\n  horizontalNoneToDouble,\n  verticalDoubleToNone,\n  verticalNoneToDouble\n];\n\nmodule.exports = {\n  pixelChunk,\n  outputs,\n}\n"],"names":["activate","measure","GPU","Input","Texture","zeros","compare2D","update","defaultSettings","defaults","predict","add","multiply","predict2D","predict3D","compare3D","sigmoid","compareFilterDeltas","compareInputDeltas","compareBiases","compare","multiplyElement","ones","tanh","relu","this","praxis.momentumRootMeanSquaredPropagation","trainDefaults","Thaw","mse","alias","utils","rnnDefaults","rnnTrainDefaults","random"],"version":3,"file":"index.38661719.js.map","sourceRoot":"/__parcel_source_root/"}